Draw_Events.htm+html.head.title:55-3,Draw Events,Drawイベント
Draw_Events.htm+html.head.title:59-3,Draw Events,Drawイベント
Draw_Events.htm+html.body.div.div.div[title]:73-7,Draw Events,Drawイベント
Draw_Events.htm+html.body.div.div.div:73-7,Draw Events,Drawイベント
Draw_Events.htm+html.body.h1:86-3,The Draw Events,Drawイベント
Draw_Events.htm+html.body.p.img[alt]:87-6,{IMG_TXT} The Draw Event,{IMG_TXT} Drawイベント
Draw_Events.htm+html.body.p:87-3,"The Draw event category is the one that has all the events that governs what you see on the screen when you run your game. It is split into various separate events to better handle the different drawing requirements for your game, and the image below illustrates the order in which each event is performed:",Drawイベントのカテゴリは、ゲームを実行したときの画面表示内容を決めるイベントからなります。ゲームのさまざまな描画要求を処理しやすくなるようイベントは複数に分けられており、各イベントがどのような順番で実行されるかは以下の画像で示されています。
Draw_Events.htm+html.body.p.img[alt]:89-6,{IMG_TXT} Object Editor Draw Diagram,{IMG_TXT} オブジェクトエディタの描画略図
Draw_Events.htm+html.body.p:89-3,"The normal Draw event falls into three sub-types: The <strong>Draw Begin</strong>, the standard <strong>Draw</strong> and the <strong>Draw End</strong> events. In general, you will only need to use the standard Draw event and you should be aware that all instances in a room will have this event triggered each step of the game, so this event will always be called as long as the instance has the <strong>visible </strong>flag set to true. It is important to understand that even if you have defined nothing for this sub-event in the object properties (ie: no code nor actions), <em>if the object has a sprite assigned it will still have a draw event which will be triggered</em>. This is because GameMaker Studio 2 has two ways to draw things in the Draw event:","通常のDrawイベントは<strong>Draw Begin</strong>、<strong>Draw</strong>、<strong>Draw End</strong>という3つの種類に細分化されています。基本的には標準の""Draw""イベントを使うことになりますが、このイベントは各ステップごとにルーム内のすべてのインスタンスで作動し、インスタンスの<strong>表示</strong>フラグが有効となっている間は常に呼び出されるということに注意してください。また、オブジェクトプロパティからこれらのサブイベントに何も定義していない（コードまたはアクションがない）場合であっても、<em></em>オブジェクトにスプライトが割り当てられている限りDrawイベントは作動します。これはDrawイベントでは、以下の2つの方法で描画が行われるためです。"
Draw_Events.htm+html.body.ul.li:94-5,"the <strong>default draw</strong>, which is when you define the sprite in the object properties and place no actions or code in the normal Draw event, and in this case GameMaker Studio 2 will draw the assigned sprite automatically. Note that any transforms you perform in other events to change the image scale, index, blending etc... will be reflected too as long as the draw event is empty.",<strong>デフォルト描画</strong> - オブジェクトプロパティでスプライトが定義されており、なおかつ通常のDrawイベントにコードまたはアクションがない場合に行われ、割り当てられているスプライトが自動的に描画されます。Drawイベントの内容が空であるなら、他のイベントから変更した画像のスケール、インデックス、ブレンドなどといった変形も反映されます。
Draw_Events.htm+html.body.ul.li:96-5,"the <strong>custom draw</strong>, which is when you place code or actions in the draw event. This is telling GameMaker Studio 2 "" <em>I want to control what you draw for instances of this object</em>"" and it completely overrides the default drawing. This means that, for example, you can have an object with a sprite assigned, then set the draw event to draw text and the text will be drawn on-screen, but the sprite will <em>not </em>be drawn as you have not told GameMaker Studio 2 to draw it along with the text.",<strong>カスタム描画</strong> - Drawイベントにコードまたはアクションを追加した場合、「<em></em>オブジェクトのインスタンスに描画される内容をコントロールしたい」とGameMaker Studio 2では認識され、デフォルト描画を完全に上書きすることができます。たとえばスプライトが割り当てられているオブジェクトのDrawイベントで描画テキストを設定した場合、画面にそのテキストは描画されるものの、スプライトは同時に描画するよう<em></em>指示されていないため非表示となります。
Draw_Events.htm+html.body.p:100-3,The rest of the draw events are explained in the sections listed below:,その他のDrawイベントについては以下の項を参照してください。
Draw_Events.htm+html.body.p:102-3,"<span data-open-text=""true"">Draw Begin And Draw End</span><span data-close-text=""true"">Draw Begin And Draw End</span>","<span data-open-text=""true"">Draw Begin / Draw End</span><span data-close-text=""true"">Draw Begin / Draw End</span>"
Draw_Events.htm+html.body.div.p:104-5,"Apart from the main Draw event, you also have a <strong> Draw Begin</strong> and a <strong>Draw End</strong> event too. These act exactly the same as a standard Draw event (ie: they will draw whatever you put in them every step of the game and for all viewports), but they do not ""default draw"" anything if they have not been explicitly added to an object, and they will always run before/after the standard Draw event. So, when the game is running you will <em>always</em> have the Draw Begin event for all instances, then the Draw event for all instances, then finally the Draw End event for all instances.","メインのDrawイベントとは別に、<strong>Draw Begin</strong>と<strong>Draw End</strong>という2つのイベントが用意されています。いずれも""Draw""イベントとまったく同じように動作（ゲームの各ステップごとに一連のビューポートに対して内容を描画）しますが、オブジェクトに追加していない場合はデフォルト描画を行ないません。また、必ず標準のDrawイベントの前/後に実行されます。そのためゲーム実行時、各インスタンスでは<em></em>必ず最初にDraw Beginイベント、その次にDrawイベント、最後にDraw Endイベントが作動することになります。"
Draw_Events.htm+html.body.div.p:107-5,"In this way, you can draw things or set draw properties in the Draw Begin step in one instance and be sure that all instances with a standard Draw event or Draw End event will use these properties or draw over what the first instance has drawn. Basically its a sure fire way to guarantee that certain things are drawn at certain times, much like the <strong>Begin Step</strong> and <strong>End Step </strong>events do.",このように1つのインスタンスのDraw Beginイベントで描画および設定が行われていれば、標準のDrawイベントまたはDraw Endイベントがあるインスタンスすべてに同じ設定をさせたり、最初のインスタンスの上に重ねて描画できるようになります。<strong>Begin Step</strong>や<strong>End Step</strong>イベントと同じように、常に決められたタイミングで描画を行うための手段と言えましょう。
Draw_Events.htm+html.body.div.p:109-5,"There are a few things to note when drawing things in GameMaker Studio 2, whether it's a sprite you are drawing or a shader, or a 3D buffer:",GameMaker Studio 2で行われる描画についてはいくつか注意点があり、スプライト、シェーダー、3Dバッファのいずれも該当します。
Draw_Events.htm+html.body.div.ul.li:111-7,"The draw event is a very intensive event, in that it's one of the events that takes up most time and resources... to that end it is never a good idea to do anything in the draw event other than drawing. So save your large code or complex actions for the Step event or Alarms or whatever other event fits, but leave the draw event clear for the drawing as that's what it does best.",Drawイベントは時間とリソースを大きく費やすイベントの1つであり、描画以外の処理を行わせるべきではありません。大規模なコード、複雑なアクションはStepイベント、Alarmイベントといった他のイベントに追加し、Drawイベントには描画だけをさせるようにしましょう。
Draw_Events.htm+html.body.div.ul.li:113-7,"If your object has had the visible parameter set to <em>off </em>(so that the instances of the object are not drawn) then <strong>all draw events are skipped </strong>(except for the <strong>Resize </strong>event). This means that making an instance invisible will stop all code placed in any of these events from running, so don't put essential code in the draw events if they are not going to be visible.",オブジェクトの表示フラグが<em></em>無効となっている場合（インスタンスが描画されない場合）、<strong>すべてのDrawイベントがスキップされます</strong>（ ただし<strong>Resize</strong>イベントは除く）。インスタンスを非表示にするとDrawイベントのコードは実行されなくなるため、表示させないオブジェクトのDrawイベントには重要なコードを追加しないでください。
Draw_Events.htm+html.body.div.ul.li:115-7,What you draw has nothing to do with the collision engine you choose (traditional or physics) as that is defined by the object properties and the sprite (or mask) that the object has been given.,描画される内容は、オブジェクトプロパティから選んだ衝突エンジン（従来式または物理演算）、およびオブジェクトに指定されているスプライト（ないしマスク）とは関わりがありません。
Draw_Events.htm+html.body.p:119-3,"<span data-open-text=""true"">Draw GUI</span><span data-close-text=""true"">Draw GUI</span>","<span data-open-text=""true"">Draw GUI</span><span data-close-text=""true"">Draw GUI</span>"
Draw_Events.htm+html.body.div.p:121-5,"The Draw GUI event type falls under the Draw Event category and is specifically designed for drawing <a class=""tooltip"" title=""TITLE_KEY::GUI"">GUI</a> elements that are not affected by the view camera scale or rotation. This means that you can have an instance draw all the elements for your <a class=""tooltip"" title=""TITLE_KEY::HUD"">HUD</a> or user interface without having to base all the positioning of the elements on the the instance position within the room or the position of the current camera view.","Draw GUIはDrawイベントのカテゴリに分類され、ビューカメラのスケールや位置に影響されない<a class=""tooltip"" title=""TITLE_KEY::GUI"">GUI</a>要素を描画することに特化しています。これによってルームのインスタンス位置、カメラのビュー位置を基準とせず、1つのインスタンスに<a class=""tooltip"" title=""TITLE_KEY::HUD"">HUD</a>やユーザーインターフェースの各要素を描画させることができます。"
Draw_Events.htm+html.body.div.p:124-5,"When drawing in these event it is important that you understand that the draw coordinates do not change even when camera views are active and (0,0) is <em>always </em>the top left hand corner of either the application surface or the display (see the note at the bottom of this section), and the default width and height are 1:1 with the application surface. Depth ordering is still maintained between different instances on different layers (so an instance on a higher layer will be drawn under one at a lower layer) and also within the events themselves, as the <strong>Draw GUI Begin</strong> event will draw for all instances first, then the standard <strong>Draw GUI</strong> will draw for all instances over that, and finally the <strong>Draw Gui End </strong>event is triggered.","このイベントから描画を行った場合、カメラが有効となっていても描画座標は変わらず、アプリケーションサーフェス、ディスプレイのいずれも左上の角は必ず<em></em>(0,0) となり（下記のメモを参照）、アプリケーションサーフェスのデフォルト幅と高さは1:1になります。各レイヤーにおけるインスタンスの深度順は変わらず（レイヤーが上側のインスタンスは下側のインスタンスより奥に描画）、イベント内においても最初に<strong>Draw GUI Begin</strong>イベントで描画され、その上に標準の<strong>Draw GUI</strong>イベントで描画、最後に<strong>Draw GUI End</strong>イベントが作動します。"
Draw_Events.htm+html.body.div.p:128-5,"In this way, you can draw things or set draw properties in the Draw GUI Begin in one instance and be sure that all instances with a standard Draw GUI or Draw GUI End event will use these properties or draw over what the first instance has drawn. Basically it's a sure fire way to guarantee that certain things are drawn at certain times, much like the <strong>Begin Step</strong> and <strong>End Step</strong> events do.",このように1つのインスタンスのDraw GUI Beginイベントで描画および設定が行われていれば、標準のDraw GUIイベントまたはDraw GUI Endイベントがあるインスタンスすべてに同じ設定をさせたり、最初のインスタンスの上に重ねて描画できるようになります。<strong>Begin Step</strong>や<strong>End Step</strong>イベントと同じように、常に決められたタイミングで描画を行うための手段と言えましょう。
Draw_Events.htm+html.body.div.p:130-5,"These events can also be used in conjunction with the normal Draw events (which will be affected by the camera view position, scale and rotation as normal). If you have no Draw Event but you do have a Draw GUI Event, then GameMaker Studio 2 will still default draw the sprite for the instance (if it has one) as normal.",これらのイベントは通常のDrawイベント（こちらはカメラのビュー位置、スケール、回転の影響を受けます）と同時に使うこともできます。Drawイベントがなく、Draw GUIイベントだけある場合は、GameMaker Studio 2によってインスタンスのスプライトがデフォルト描画されます。
Draw_Events.htm+html.body.div.p:132-5,"With relation to the other draw events, the Draw GUI events will always draw over anything drawn in the normal draw events. So, if you have an instance on a lower layer with a Draw GUI event, it will draw over the instance that is on a higher layer with a regular draw event. If both instances have a Draw GUI event, then the layer order will be respected.",Draw GUIイベントでは、通常のDrawイベントで描画された内容よりも上に描画されます。そのためレイヤーが下側のインスタンスにDraw GUIイベントがある場合、通常のDrawイベントがある上側のインスタンスに重ねて描画されます。どちらのインスタンスにもDraw GUIイベントがある場合はレイヤーの順番が守られます。
Draw_Events.htm+html.body.div.p:134-5,"<strong>NOTE</strong>: This event will, by default, draw 1:1 with the application surface size, which is normally the size of the room or the view port. This means that when you have <strong>Aspect Ratio Correction</strong> on in the Game Options the GUI is not going to be drawn over the black bars that ""letterbox"" the game. This behavior can be switched off using the <a href=""../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_maximise.htm""><span style=""font-size:14px;""> <span class=""inline"" style=""font-size: 14px"">display_set_gui_maximise()</span></span></a> function, and you can also lock the GUI event to a specific size which will then be scaled to fit the display or application surface dimensions automatically by using the function <a href=""../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_size.htm""><span class=""inline"" style=""font-size: 14px"">display_set_gui_size()</span></a>.","<strong>メモ</strong>: このイベントの描画はデフォルトではアプリケーションサーフェスの等倍サイズで行われ、このサイズは通常、ルームまたはビューポートのサイズとなっています。そのためゲームオプションから<strong>アスペクト比補正</strong>を有効にしている場合、ゲーム画面の黒い帯（レターボックス）の上には描画されません。この動作は<a href=""../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_maximise.htm""><span style=""font-size:14px;""><span class=""inline"" style=""font-size: 14px"">display_set_gui_maximise()</span></span></a>関数から切り替えることができます。また、GUIイベントでは特定のサイズに固定することも可能で、<a href=""../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_size.htm""><span class=""inline"" style=""font-size: 14px"">display_set_gui_size()</span></a>によってディスプレイまたはアプリケーションサーフェスの寸法に合わせて自動的に拡大縮小できます。"
Draw_Events.htm+html.body.p:139-3,"<span data-open-text=""true"">Pre And Post Draw</span><span data-close-text=""true"">Pre And Post Draw</span>","<span data-open-text=""true"">Pre Draw / Post Draw</span><span data-close-text=""true"">Pre Draw / Post Draw</span>"
Draw_Events.htm+html.body.div.p:141-5,"The Pre Draw and Post Draw events are part of the Draw Event category. However, unlike the other Draw events these draw <em>directly </em>to the <a class=""tooltip"" title=""TITLE_KEY::display_buffer"">display buffer</a>, which will be the size of the combined screen space for all viewports currently visible, <em>or </em>the window size if only using one viewport or none at all. The image below illustrates this:","Pre DrawとPost DrawイベントはDrawイベントのカテゴリに入りますが、他のDrawイベントとは異なり<a class=""tooltip"" title=""TITLE_KEY::display_buffer"">表示バッファ</a>に<em></em>直接描画を行います。サイズについては表示中のビューポートすべての画面スペースを合わせた大きさに、<em></em>利用しているビューポートが1つ以下の場合はウィンドウの大きさになります。以下は仕組みについての図解です。"
Draw_Events.htm+html.body.div.p.img[alt]:143-25,{IMG_TXT} Object Editor Post Draw,{IMG_TXT} オブジェクトエディタのPost Draw
Draw_Events.htm+html.body.div.p:143-5,"So, if you are using the Pre or Post draw events, you are drawing to the full screen render target (display buffer) which will have the same size as the window to which all viewports are made to fit. If you have no viewports active, this is instead set to the size of the window itself.",このようにPre DrawとPost Drawイベントを利用すると、全画面のレンダーターゲット（表示バッファ）に描画されることになり、表示バッファのサイズはすべてのビューポートが収まるウィンドウと同じ大きさになります。どのビューポートもアクティブでない場合は、代わりにウィンドウ自体の大きさになります。
Draw_Events.htm+html.body.div.p:145-5,"The Pre Draw event is triggered before any other draw event, and in it you can set values, set draw properties and even draw things without worrying about the viewports or the size of the GUI layer (the GUI layer size may be the same as the screen buffer, but it may not be since you can set the GUI resolution in code).",Pre Drawイベントは他のDrawイベントよりも前に作動し、ビューポートやGUIレイヤーのサイズを気にすることなく値や描画プロパティを設定したり、描画そのものを行うことができます（GUIレイヤーのサイズは画面バッファと同じですが、コードからGUIの解像度を設定できるため異なる場合もあります）。
Draw_Events.htm+html.body.div.p:147-5,"It is worth noting that this event happens <em>before </em>the display buffer is cleared for regular drawing meaning that if you do not switch off view clearing in the room editor then nothing that is drawn in the Pre Draw event will be seen, as the first viewport draw will clear it. If you want to be able to see through the viewports themselves, or you are not using viewports at all, then you should also have set the background colour to have an alpha of 0 in the <strong><a href=""../Rooms.htm"">Room Editor</a></strong>.","このイベントは表示バッファが作成される<em></em>前に起こり、標準の描画から除外されることを覚えておいてください。そのためルームエディタからビューのクリアを無効にしていない場合、最初のビューポートの描画によってPre Drawイベントの描画内容はすべて消去され、非表示となります。ビューポートの中からでも表示させる、あるいはビューポートを使用していない場合は、<strong><a href=""../Rooms.htm"">ルームエディタ</a></strong>から背景色のアルファ（透明度）を0に設定しておくといいでしょう。"
Draw_Events.htm+html.body.div.p:149-5,"<strong>NOTE</strong>: If you switch off these options, you may notice unwanted artefacts being drawn on the screen when the game is tested (like ""trails"" from instances). This is because you are drawing directly over the previous frame of the display buffer without it being cleared. However you can use <span class=""inline"" style=""font-size: 14px""><a href=""../../GameMaker_Language/GML_Reference/Drawing/Colour_And_Alpha/draw_clear_alpha.htm"">draw_clear_alpha()</a> </span>to do this yourself.","<strong>注意</strong>: 上記のオプションを無効にすると、ゲームをテストしたときに画面の乱れが生じることがあります（インスタンスの残像など）。表示バッファをクリアせずに前のフレームに重ねて描画したことが原因ですが、<span class=""inline"" style=""font-size: 14px""><a href=""../../GameMaker_Language/GML_Reference/Drawing/Colour_And_Alpha/draw_clear_alpha.htm"">draw_clear_alpha()</a></span>によって手動でクリア可能です。"
Draw_Events.htm+html.body.div.p:152-5,"The Post Draw event is triggered <em>after </em>all the standard draw events, but <em>before </em>the Draw GUI events. Like the Pre Draw event, it is based on the size of the display buffer, and is placed before the Draw GUI events to enable you to perform post-processing effects and other things on a full screen basis simply and easily without interfering with any <a class=""tooltip"" title=""TITLE_KEY::HUD"">HUD</a>/ <a class=""tooltip"" title=""TITLE_KEY::GUI"">GUI</a> elements that you may have in your game.","Post Drawイベントは標準のDrawイベントより<em></em>後、Draw GUIイベントの<em></em>前に作動します。Pre Drawイベントと同じように表示バッファのサイズが基準となります。Draw GUIイベントより前に位置しているため、ゲーム内の<a class=""tooltip"" title=""TITLE_KEY::HUD"">HUD</a> / <a class=""tooltip"" title=""TITLE_KEY::GUI"">GUI</a>要素に干渉せず、ポストエフェクトなどの全画面処理を簡単に行なうことが可能です。"
Draw_Events.htm+html.body.p:157-3,"<span data-open-text=""true"">Window Resize</span><span data-close-text=""true"">Window Resize</span>","<span data-open-text=""true"">Window Resize</span><span data-close-text=""true"">Window Resize</span>"
Draw_Events.htm+html.body.div.p:159-5,"This event type falls under the Draw Event category, and although it doesn't actually draw anything, it does react to changes in the display buffer - specifically, it is designed for reacting to the change in the UWP display buffer size when the game window is ""snapped"".",このイベントはDrawイベントのカテゴリに分類されていますが、実際には何も描画しません。このイベントは表示バッファの変化、特にUWPでウィンドウが「スナップ」された際の表示バッファのサイズ変化に反応させるためのものです。
Draw_Events.htm+html.body.div.p:161-5,"On the UWP target platform it is important that you catch any resizing of the display buffer from the ""snapping"" of the game window (when the user drags the window to the side of the display, for example). This event will do just that and is triggered every time the window is changed, permitting you to add custom code here that will resize the view or re-position <a class=""tooltip"" title=""TITLE_KEY::HUD"">HUD</a> elements as necessary. This function is provided as a convenient way to avoid having step event code that checks for these things all the time.","UWPターゲットプラットフォームでは、ウィンドウがスナップ（ユーザーによってウィンドウが画面端にドラッグ）されたことによる表示バッファのサイズ変化を把握することが重要となります。このイベントはウィンドウに変更が加えられるたびに作動するため、コードを追加してビューのサイズを変更したり、<a class=""tooltip"" title=""TITLE_KEY::HUD"">HUD</a>要素を再配置するといった処理を行うことができます。便利な機能であり、Stepイベントにコードを追加して常にサイズをチェックする必要もなくなります。"
Draw_Events.htm+html.body.div.p:164-5,<strong>NOTE</strong>: You cannot draw in this event! It is triggered by resizing the window and is only for catching this change... any drawing that should be done still must be in one of the other draw events.,<strong>注意</strong>: このイベント内では描画できません！あくまでウィンドウのサイズ変更に反応させるためのイベントであるため、描画については他のDrawイベントから行うようにしてください。
Draw_Events.htm+html.body.div.div.div.div:173-9,"Back: <a href=""Object_Events.htm"">Object Events</a>","戻る: <a href=""Object_Events.htm"">オブジェクトイベント</a>"
Draw_Events.htm+html.body.div.div.div.div:174-9,"Next: <a href=""Async_Events.htm"">Async Events</a>","次へ: <a href=""Async_Events.htm"">Asyncイベント</a>"
Draw_Events.htm+html.body.p:196-1,{SEARCH_RESULT} Page detailing the draw event.,{SEARCH_RESULT} Drawイベントの詳細ページ
Draw_Events.htm+html.body.p:196-54,{INDEX_KEYWORD} Objects - Draw Events,{INDEX_KEYWORD} オブジェクト - Drawイベント
