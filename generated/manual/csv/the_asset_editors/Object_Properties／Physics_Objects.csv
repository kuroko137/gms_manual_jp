Physics_Objects.htm+html.head.title:55-3,Physics Objects,物理オブジェクト
Physics_Objects.htm+html.head.title:59-3,Physics Objects,物理オブジェクト
Physics_Objects.htm+html.body.div.div.div[title]:73-7,Physics Objects,物理オブジェクト
Physics_Objects.htm+html.body.div.div.div:73-7,Physics Objects,物理オブジェクト
Physics_Objects.htm+html.body.h1:86-3,Physics Objects,物理オブジェクト
Physics_Objects.htm+html.body.p:87-3,"When you first create a new object resource, there is a check-box marked <strong>Uses Physics</strong>, which is <em>not </em>checked by default. Selecting this option will radically change the behaviour of your object when an instance of it is placed in a room, as this switches on the object's physical properties and means that its ""traditional"" movement and collision functions are no longer valid (but only when the room it is placed on is also marked as being a physics room. See the section on the <a href=""../Room_Properties/Room_Properties.htm"">Room Editor Properties</a>). When you check this, the object resource window opens a new chained window for the physics editor:","オブジェクトリソースを新しく作成すると、デフォルトでは<strong>物理を使用</strong>のチェックが外されています<em></em>。このオプションを選ぶと、ルームに配置されたインスタンスの挙動が根本的に変化します。その理由はオブジェクトの物理的特性が有効となり、「従来」の移動、衝突機能がすべて無効となるためです（ただし物理ルームとしてチェックされているルームに配置した場合のみです。詳しくは<a href=""../Room_Properties/Room_Properties.htm"">ルームエディタのプロパティ</a>を参照してください）。チェックを入れると、オブジェクトリソースのウィンドウの隣にこのような物理エディタのウィンドウが開きます。"
Physics_Objects.htm+html.body.p.img[alt]:90-6,{IMG_TXT} Object Editor Physics,{IMG_TXT} オブジェクトエディタの物理
Physics_Objects.htm+html.body.p:90-3,"Before you start to edit the values for the physics behaviours it's a good idea to first set the <strong>collision shape</strong>. With the ""normal"" collision system your collisions are based off of the mask of the sprite assigned to the object, but with physics enabled <strong>this is no longer the case</strong>. We need to assign a <strong>collision shape</strong> the object ourselves (this is properly called a <strong>fixture</strong>, see <a href=""../../GameMaker_Language/GML_Reference/Physics/Physics.htm"">The Physics Functions</a> for more information), which can either be a circle, a rectangle or a polygon shape that you yourself define. Clicking on the <strong>Modify Collision Shape</strong> button will open the following chained window to edit the shape:","物理挙動の数値を編集する前に、まずは<strong>コリジョン形状</strong>を設定するといいでしょう。「通常」のコリジョンシステムでは、オブジェクトに割り当てたスプライトのマスクからコリジョンが決まりますが、物理を有効にしている場合は<strong>そうではありません</strong>。オブジェクト側で<strong>コリジョン形状</strong>を割り当てる必要があり（正確には<strong>フィクスチャ</strong>といい、<a href=""../../GameMaker_Language/GML_Reference/Physics/Physics.htm"">物理の機能</a>で詳しく説明されています）、円形、長方形、多角形のうちから自分で形状を決めなくてはなりません。<strong>コリジョン形状を変更</strong>ボタンをクリックすると、エディタの隣に形状を編集するためのウィンドウが開きます。"
Physics_Objects.htm+html.body.p.img[alt]:93-6,{IMG_TXT} Object Editor Physics Shape Editor,{IMG_TXT} オブジェクトエディタの物理形状エディタ
Physics_Objects.htm+html.body.p:93-3,"This looks similar to the <a href=""../Paths.htm"">Path Editor</a>, and functions in much the same way. However, depending on the mask you have chosen, it can be rather more restrictive:","<a href=""../Paths.htm"">パスエディタ</a>とよく似た見た目で、機能もほとんど同じです。ただし選んだマスクに応じて大きな制限がかかります。"
Physics_Objects.htm+html.body.ul.li:96-5,"If you have a <strong>circular </strong>mask, then you can only pull any of the path points to make the circle diameter larger or smaller",<strong>円形</strong>マスクの場合、パスのポイントを動かして円の直径サイズを変えることだけが可能となります。
Physics_Objects.htm+html.body.ul.li:97-5,"If you have <strong>rectangular </strong>mask, then you can move any of the four corners, but the corresponding ones will adjust position automatically to always maintain a rectangle",<strong>長方形</strong>マスクの場合、それぞれの角を動かせますが、長方形を崩さないよう他の角の位置も自動的に調整されます。
Physics_Objects.htm+html.body.ul.li:98-5,"If you have a <strong>custom </strong>(polygon) mask, it must have a minimum of 3 and a maximum of 8 points to it, and it must be convex (see image below).",<strong>カスタム</strong>（多角形）マスクの場合、3から8までの数のポイントを使用し、へこみがない凸型にする必要があります（以下の画像を参照）。
Physics_Objects.htm+html.body.p.img[alt]:100-6,{IMG_TXT} Object Editor Physics Shape Type,{IMG_TXT} オブジェクトエディタの形状タイプ
Physics_Objects.htm+html.body.p:100-3,"Once you have set up your shape, you then need to define the basic physical properties that your object is to have. These are configured by changing the following parameters:",形状を決めたら、以下のパラメーターを変更してオブジェクトの基本的な物理的特性を設定してください。
Physics_Objects.htm+html.body.p:103-3,"<span data-open-text=""true"">Density</span><span data-close-text=""true"">Density</span>","<span data-open-text=""true"">密度</span><span data-close-text=""true"">密度</span>"
Physics_Objects.htm+html.body.div.p:105-5,"The density of something is defined as its mass per unit volume, which basically means how much mass is crammed into the space it takes up in the world. So, a balloon would have a low density as it has little mass that occupies a large space, while a lead bar would have a high density as it has a great mass, yet occupies little space. In the GameMaker Studio 2 2D physics world, mass is calculated automatically for you from the values you input for the density and by the surface area of the shape you define for the fixture. This will have a direct impact on how much inertia a fixture has as well as how it reacts to collisions and forces, so if you make a small shape with a high density it will have a very large mass (like a bar of lead), but if you define a large shape with a low density it will have a much smaller mass (like a balloon).",密度とは単位体積あたりの質量を定めるもので、物理世界の占有空間にどれだけの質量が詰まっているかを表しています。たとえば風船なら、小さい質量で広い面積を占めているため密度は低くなり、逆に鉄の棒なら、質量は大きいものの狭い面積を占めるため、密度は高くなるでしょう。GameMaker Studio 2の2D物理世界では、密度として入力した値、フィクスチャに設定した形状の表面積をもとに質量が自動計算されます。密度はフィクスチャの慣性の強さ、ならびに衝突や力への反応に直接影響しており、たとえば小さい形状の密度を大きくすると、その質量は（鉄の棒のように）非常に大きくなりますが、大きい形状の密度を低くすると、質量は（風船のように）非常に小さくなります。
Physics_Objects.htm+html.body.div.p:109-5,"Note that setting the density to 0 will create a ""static"" fixture that is essentially infinmitely dense and will not be affected by external forces or collisions, except in special cases where the instance has been created as <strong>kinematic</strong> (see below for more details).",なお、密度を0に設定した場合、実質的な密度は無限大となり、外からの力や衝突に影響されることがない「静止」フィクスチャが生成されますが、インスタンスが<strong>キネマティック</strong>として生成されている場合は例外となります（詳しくは下記を参照）。
Physics_Objects.htm+html.body.p:113-3,"<span data-open-text=""true"">Restitution</span><span data-close-text=""true"">Restitution</span>","<span data-open-text=""true"">反発</span><span data-close-text=""true"">反発</span>"
Physics_Objects.htm+html.body.div.p:115-5,"In physics, restitution is defined as ""the return of an object or system to its original state after elastic deformation"", but as the fixtures in the GameMaker Studio 2 are really rigid bodies and cannot be deformed, restitution is really a way of saying how ""bouncy"" the fixture is. This setting will affect how much an object ""bounces"" when it collides with other objects and is co-dependant on other forces that act on the instance like gravity and friction.",物理学における反発とは「弾性変形した物体および系が元の状態に戻ること」を指しますが、GameMaker Studio 2におけるフィクスチャは剛体であり実際には変形しないため、フィクスチャの「弾み」の勢いをあらわす言葉として扱われています。反発を設定するとオブジェクトが他のオブジェクトと衝突したときの弾み方が変化しますが、重力や摩擦といったインスタンスに作用する他の力による影響も受けます。
Physics_Objects.htm+html.body.p:119-3,"<span data-open-text=""true"">Collision Group</span><span data-close-text=""true"">Collision Group</span>","<span data-open-text=""true"">衝突グループ</span><span data-close-text=""true"">衝突グループ</span>"
Physics_Objects.htm+html.body.div.p:121-5,"By default, the collision group for all physics objects is 0, and this means that they will interact as normal, which in turn means they <strong>must have a collision event to interact</strong> (a simple comment will do to trigger the collision) otherwise no collision will be registered. However, you can also specify that an object should belong to a specific, numbered, <strong>collision group</strong>. By assigning objects to a <em>positive </em>collision group (ie: three objects are all in group "" <strong>2</strong>"") you are telling GameMaker Studio 2 that instances of these objects should <em>always </em>collide, even if they have nothing in their collision event, obeying the physical properties that you have assigned them and the room they are in. Conversely, if you have objects with a <em>negative </em>collision group (ie: four objects assigned ""<strong>-1</strong>""), you are telling GameMaker Studio 2 that these should <em>never </em>collide, and any collision events between them will be ignored.","物理オブジェクトの衝突グループは、デフォルトでは0に設定されています。0にしたオブジェクトは通常通り相互作用しますが、同時にそれは<strong>相互作用するにあたってCollisionイベントが必要</strong>となることを意味しており（簡単に言うと衝突を引き起こすために）、イベントがなければ衝突も記録されません。しかしながら、オブジェクトは指定した番号の<strong>衝突グループ</strong>に割り当てることが可能です。たとえばオブジェクトを<em></em>正の衝突グループに入れると（3つのオブジェクトがグループ""<strong>2</strong>""に入っているとします）、3つのオブジェクトのインスタンスは<em></em>常にぶつかり合うようになり、Collisionイベントを用意していない場合でも、インスタンスと配置したルームに設定した物理的特性に従って動きます。逆にオブジェクトを<em></em>負の衝突グループに入れると（4つのオブジェクトがグループ""<strong>-1</strong>""に入っているとします）、<em></em>絶対にぶつかり合うことがなくなり、オブジェクトのCollisionイベントはすべて無視されます。"
Physics_Objects.htm+html.body.div.p:126-5,"<strong>NOTE</strong>: Using collision groups dramatically increases the processing required by the physics system and should be used only when absolutely necessary, and you should have as few groups as possible.",<strong>注意</strong>: 衝突グループは物理システムの負荷を大幅に増加させるため、どうしても必要な場面でのみ利用し、なるべく多くのグループは使わないようにしましょう。
Physics_Objects.htm+html.body.p:129-3,"<span data-open-text=""true"">Linear Damping</span><span data-close-text=""true"">Linear Damping</span>","<span data-open-text=""true"">線形減衰</span><span data-close-text=""true"">線形減衰</span>"
Physics_Objects.htm+html.body.div.p:131-5,"Damping is used to reduce the physics world velocity of an instance as it moves through the room. In principle this is like friction against a surface in the ""real"" world, but in the GameMaker Studio 2 physics system, friction is actually only applied when two instances with collision shapes (fixtures) are in contact. So, you can consider linear damping as more like ""air friction"" that gradually slows any moving physics instance over time, without the need for contact with any other physics instance.",減衰は、インスタンスがルーム内で動くときの物理世界における速度を低下させるための数値です。原理としては現実世界における面との摩擦のようなものですが、GameMaker Studio 2の物理システムにおいては、摩擦とはコリジョン形状（フィクスチャ）をもつ2つのインスタンスが接触したときにだけ適用されるものです。そのため線形減衰については、他のインスタンスと接触させなくとも物理インスタンスの動きを徐々に遅くできる「空気摩擦」のようなものだと考えてください。
Physics_Objects.htm+html.body.p:136-3,"<span data-open-text=""true"">Angular Damping</span><span data-close-text=""true"">Angular Damping</span>","<span data-open-text=""true"">傾斜減衰</span><span data-close-text=""true"">傾斜減衰</span>"
Physics_Objects.htm+html.body.div.p:138-5,"If you think about any rotating object in the ""real world"", unless it has a motor or is in space, its rotation will slow down over time due to the influence of external forces (like mechanical friction or friction against the air or water surrounding it). We can use the angular damping option to simulate this effect and reduce the velocity of rotation of instances in the physics world, as without it, any rotating instance would continue to rotate infinitely.",現実世界において回転する物体は、モーターが付いていたり宇宙空間にいない限り、外からの力（機械的な摩擦や、空気や水との摩擦など）を受けてだんだんと回転が遅くなるものです。こうした効果は傾斜減衰によって再現可能で、物理世界におけるインスタンスの回転速度を落とすことができます。傾斜減衰を無くしてしまうと、インスタンスは無限に回転し続けることになるでしょう。
Physics_Objects.htm+html.body.p:142-3,"<span data-open-text=""true"">Friction</span><span data-close-text=""true"">Friction</span>","<span data-open-text=""true"">摩擦</span><span data-close-text=""true"">摩擦</span>"
Physics_Objects.htm+html.body.div.p:144-5,"Friction is the force that resists the relative motion of material elements sliding against each other, which in the GameMaker Studio 2 physics world, translates as the loss of momentum caused by the collision of two instances with physics fixtures. So, when two instances collide, their motion is affected by this value, with a high friction causing a larger loss of momentum than a lower value.",摩擦とは、接し合う物質の滑ろうとする相対運動を抑える力のことですが、GameMaker Studio 2の物理世界においては、物理フィクスチャをもつ2つのインスタンスの衝突によって生じる運動量を減少させる力として置き換えられています。2つのインスタンスが衝突したとき、それぞれのインスタンスの動きはこの値の影響を受け、摩擦を高くするほど運動量が減少します。
Physics_Objects.htm+html.body.p:149-3,"Finally there are three extra options that can flagged as on or off for your fixture, <strong>Sensor</strong>, <strong>Start Awake</strong> and <strong>Kinematic</strong>. Each of these flags will change the behaviour of your fixture in the following ways:",最後にあるのはフィクスチャの追加オプションです。<strong>センサー</strong>、<strong>覚醒状態で開始</strong>、<strong>キネマティック</strong>という3つの切り替え可能なフラグからなり、フィクスチャの挙動を以下のように変化させます。
Physics_Objects.htm+html.body.p:152-3,"<span data-open-text=""true"">Sensor</span><span data-close-text=""true"">Sensor</span>","<span data-open-text=""true"">センサー</span><span data-close-text=""true"">センサー</span>"
Physics_Objects.htm+html.body.div.p:154-5,"By checking this box, you are telling GameMaker Studio 2 to basically ""ignore"" the physical properties of the object, but still return a collision event with the objects around it. In this way you can have an instance with no physical presence in the room, but which can react to the collision of another instance, like the player, and do something in turn, like open a door, or trigger some sort of action in another place in the room.",チェックするとオブジェクトの物理的特性を「無視」させつつ、他のオブジェクトとのCollisionイベントを返すことになります。これによってルームには物理的に存在しないものの、別のインスタンスとの衝突には反応するインスタンスとなり、たとえばプレイヤーのインスタンスに反応してルームの扉を開けたり、それ以外の場所でもアクションを引き起こすといったことができます。
Physics_Objects.htm+html.body.div.p:156-5,"<strong>NOTE</strong>: A sensor fixture will fire off the collision event when the collision <strong>first occurs only</strong>, meaning you don't get a stream of collision events as the two bodies continue to overlap (which is what would traditionally occur). If they stop overlapping and overlap subsequently there will be another collision event triggered.",<strong>注意</strong>: センサー化されたフィクスチャでは、衝突が<strong>最初に起きた時点でのみ</strong>Collisionイベントが発生します。そのため2つの物体が重なり続けている場合、Collisionイベントが連続して返ってくることはありません（従来のイベントと同じです）。ただし離れてから再び重なった場合であれば、新たにCollisionイベントが作動します。
Physics_Objects.htm+html.body.p:160-3,"<span data-open-text=""true"">Start Awake</span><span data-close-text=""true"">Start Awake</span>","<span data-open-text=""true"">覚醒状態で開始</span><span data-close-text=""true"">覚醒状態で開始</span>"
Physics_Objects.htm+html.body.div.p:162-5,"This is checked by default and represents the initial ""state"" of the fixture at the start of the room it has been placed in. Normally you want it to be awake (ie: participating in the physics world) right from the start, but sometimes this can lead to certain instabilities and unwanted effects due to the abrupt start of the physics simulation. To avoid these effects, you can un-check this flag and the instance will be created with the fixture asleep, and it will not participate in the physics simulation unless something acts upon it.",デフォルトで有効となっているフラグで、ルームに置かれたフィクスチャの初期「状態」を示しています。物理世界に加えるなら最初から有効にしておくようなフラグですが、物理シミュレーションをいきなり開始すると、不安定になったり、望ましくない影響が残ってしまう場合もあります。そうした影響を避けたいなら、チェックを外すことでインスタンス生成時にフィクスチャが休止するようになり、何らかの作用を受けるまで物理世界に加わらなくなります。
Physics_Objects.htm+html.body.div.p:165-5,"Note that physics instances will be flagged as ""asleep"" when they are no longer under any movement or having interaction with any other physics instance, and an ""asleep"" instance is simply one that is not currently being fully processed by the physics simulation (which saves on <a class=""tooltip"" title=""TITLE_KEY::CPU_overhead"">CPU overhead</a>).","なお、動きのない、あるいは他の物理インスタンスと相互作用しなくなった物理インスタンスには「休止中」のフラグが付き、休止中のインスタンスは物理シミュレーションによって全面的には処理されなくなります（よって <a class=""tooltip"" title=""TITLE_KEY::CPU_overhead"">CPUオーバーヘッド</a>を削減できます）。"
Physics_Objects.htm+html.body.p:169-3,"<span data-open-text=""true"">Kinematic</span><span data-close-text=""true"">Kinematic</span>","<span data-open-text=""true"">キネマティック</span><span data-close-text=""true"">キネマティック</span>"
Physics_Objects.htm+html.body.div.p:171-5,"There will be certain instances in a physics based game which you want to move around but do not wish to be acted on by forces such as gravity, nor forces incurred by collisions with dynamic objects (think of moving platforms in a platform game, for example). For such objects simply setting the density of the fixture to 0 will mean that the physics will assume that the object is intended to be <strong>static </strong>and it will not react at all to anything. However, checking this box will make a static object <strong>kinematic </strong>and although it will still be unaffected by collisions and forces like gravity, it can now be moved around or rotated using the appropriate variables (see <a href=""../../GameMaker_Language/GML_Reference/Physics/Physics_Variables/phy_position_x.htm""><span class=""inline"">phy_position_x</span></a> and <a href=""../../GameMaker_Language/GML_Reference/Physics/Physics_Variables/phy_position_y.htm""><span class=""inline"">phy_position_y</span></a>, for example).","物理演算に基づいたゲームでも、重力のような力、あるいは動的オブジェクトと衝突したときの力などに影響されることなく動かしたいインスタンスが何かしらあるはずです（横スクロールゲームの足場などを想像してみましょう）。そうしたオブジェクトに対しては、フィクスチャの密度を0に設定してしまえば物理演算において<strong>静止</strong>オブジェクトであると見なされ、反応しないようにできます。ところがこのオプションをチェックすると、静止オブジェクトを<strong>キネマティック</strong>（運動的）オブジェクトに変更でき、衝突や重力といった力に影響されることなく、対応する変数（<a href=""../../GameMaker_Language/GML_Reference/Physics/Physics_Variables/phy_position_x.htm""><span class=""inline"">phy_position_x</span></a>や<a href=""../../GameMaker_Language/GML_Reference/Physics/Physics_Variables/phy_position_y.htm""><span class=""inline"">phy_position_y</span></a>など）によって動かしたり回転させることが可能となります。"
Physics_Objects.htm+html.body.div.div.div.div:183-9,"Back: <a href=""../Objects.htm"">The Object Editor</a>","戻る: <a href=""../Objects.htm"">オブジェクトエディタ</a>"
Physics_Objects.htm+html.body.div.div.div.div:184-9,"Next: <a href=""Object_Variables.htm"">Object Variables</a>","次へ: <a href=""Object_Variables.htm"">オブジェクト変数</a>"
Physics_Objects.htm+html.body.p:196-1,{SEARCH_RESULT} Page detailing object physics,{SEARCH_RESULT} オブジェクトの物理演算についての詳細ページ
Physics_Objects.htm+html.body.p:196-53,{INDEX_KEYWORD} Objects - Physics,{INDEX_KEYWORD} オブジェクト - 物理演算
