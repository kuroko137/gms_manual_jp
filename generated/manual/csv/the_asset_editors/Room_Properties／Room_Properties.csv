Room_Properties.htm+html.head.title:55-3,Room Properties,ルームプロパティ
Room_Properties.htm+html.head.title:59-3,Room Properties,ルームプロパティ
Room_Properties.htm+html.body.div.div.div[title]:73-7,Room Properties,ルームプロパティ
Room_Properties.htm+html.body.div.div.div:73-7,Room Properties,ルームプロパティ
Room_Properties.htm+html.body.h1:86-3,Room Properties,ルームプロパティ
Room_Properties.htm+html.body.p.img[alt]:87-6,{IMG_TXT} Room Editor Properties,{IMG_TXT} ルームエディタのプロパティ
Room_Properties.htm+html.body.p:87-3,"The room properties section is where you can set the inheritance toggle for the settings, as well as name the room and whether it is <strong>persistent </strong>or not. Normally, when you leave a room and return to the same room later, that room is reset to its initial settings. This is usually fine for most games but it may not be what you want in, for example, an RPG or any non-linear game, where you want to come and go between rooms and have them be the way you left it the last time. Checking the box labelled <strong>Persistent </strong>will do exactly that. The room status will be remembered and when you return to it later, it will be exactly the same as you left it, with it only being reset to the start state when the game is restarted. Note that there is <em>one </em>exception to this - if you marked certain objects as being persistent, instances of this object will <em>not </em>stay in the room but move to the next room.",ルームプロパティの領域では、継承の切り替えやルームの名前、ルームを<strong>永続的</strong>にするかを設定できます。普通はルームを出てから戻ってきても、そのルームは初期設定にリセットされます。ほとんどのゲームでは問題ありませんが、RPGのような一方通行でなく、ルームを行ったり来たりするゲームの場合、最後に出ていった状態のままにしておきたいはずです。<strong>永続的</strong>はそのような場合のためのオプションで、チェックを入れるとルームの状態が記憶され、戻ってきても最後に出ていったままの状態となり、ゲームを再起動しないかぎり開始時の状態にリセットされなります。ただし永続的としてチェックしているオブジェクトは<em></em>例外であり、それらのインスタンスはルームに<em>留まらず</em>、次のルームまで移動します。
Room_Properties.htm+html.body.p:92-3,"After that you have the option to <strong>Clear Display Buffer</strong>. This option, when checked, fills the <a class=""tooltip"" title=""TITLE_KEY::display_buffer"">display buffer</a> with a colour. If you know that the views are going to be covering the whole screen at all times or that you have a fullscreen background being drawn, then you can un-check this (which saves a redraw and so helps optimise your game), but if you have overlapping views that, when on the screen leave open spaces, or your background has any transparency, you should check this so that those area where there is no view are filled in with the draw colour of your choice. Currently this colour can only be set through code using <a href=""../../GameMaker_Language/GML_Reference/Cameras_And_Display/The_Game_Window/window_set_colour.htm""><span class=""inline"">window_set_colour()</span></a>.","その下にあるのは<strong>表示バッファをクリア</strong>というオプションです。このオプションがチェックされている場合、<a class=""tooltip"" title=""TITLE_KEY::display_buffer"">表示バッファ</a>が単色で塗りつぶされます。ビューが常に画面全体を覆っていたり、背景が全画面描画されているならチェックを外しても問題ありませんが（再描画が省略されるためゲームの最適化につながります）、ビューを重ねていて画面上に空きスペースが残っている場合や、背景画像が少しでも透けている場合はチェックを入れるようにしてください。そうするとビューがない部分も指定した描画色で塗りつぶされます。なお現時点では描画色を設定するには、コードから<a href=""../../GameMaker_Language/GML_Reference/Cameras_And_Display/The_Game_Window/window_set_colour.htm""><span class=""inline"">window_set_colour()</span></a>関数を呼び出す必要があります。"
Room_Properties.htm+html.body.p:95-3,"<strong>NOTE</strong>: If you are using automatic aspect ratio correction (as set in the <a href=""../../Settings/Game_Options.htm"">Game Options</a>), then you should <strong>always </strong>have this checked otherwise you can get odd effects over the ""letterbox"" that your game is drawn in. If you do not use this option then you can un-check this and get a small boost to your games performance (especially noticeable on Android and other mobile platforms).","<strong>注意</strong>: アスペクト比の自動補正を<a href=""../../Settings/Game_Options.htm"">ゲームオプション</a>から有効にしている場合、このオプションは<strong>常に</strong>チェックしておきましょう。そうしないとゲームが描画されるレターボックス（黒枠）の表示がおかしくなります。オプションを利用しない場合はチェックを外すと、ゲームのパフォーマンスが少しだけ向上します（Androidなどのモバイルプラットフォームでは特に有効です）。"
Room_Properties.htm+html.body.p:97-3,"A room has to have a size and this is defined by the values that you input for its width and height in pixels, and once that has been set you can then go on to add <strong>Creation Code</strong>, should you require it. Creation code is added from the button at the bottom (along with the inherit toggle to say whether the room should inherit it's creation code or not), and if you click it you will open a code or DnD™ editor. This editor allows you to input functions/actions and code that will be run at the <em>start </em>of the room, after the create event of all instances but before their room start event (for more information on event order, please see <a href=""../Object_Properties/Event_Order.htm"">here</a>). This code will run every time you enter the room, unless the room is flagged as persistent, in which case it will only be run once when the room is first entered, but not on subsequent visits to the room.","ルームには大きさがあり、ピクセル単位で幅と高さを設定しなくてはなりません。あとは必要に応じて<strong>生成コード</strong>を追加しましょう。生成コードは下のボタンから追加でき（その隣にある継承ボタンからは、ルームに生成コードを引き継がせるかを切り替えできます）、ボタンをクリックするとコードエディタ、またはDnD™ エディタが開きます。エディタに入力した関数/アクションおよびコードはルームの「<em>開始時</em>」に実行され、各インスタンスのCreateイベントよりも後、Room Startイベントよりも前に実行されます（イベントの順番については<a href=""../Object_Properties/Event_Order.htm"">こちら</a>に詳しい情報があります）。生成コードはルームに入るたびに実行されます。永続的としてフラグ付けされている場合は最初に入ったときにだけ実行され、それ以降は実行されません。"
Room_Properties.htm+html.body.p:101-3,The final button in the Room Properties permits you to open the <strong>Instance Creation Order</strong> window:,一番下にあるボタンをクリックすると、このように<strong>インスタンス生成順序</strong>ウィンドウが開きます。
Room_Properties.htm+html.body.p.img[alt]:102-6,{IMG_TXT} Instance Creation Order Window,{IMG_TXT} インスタンス生成順序ウィンドウ
Room_Properties.htm+html.body.p:102-3,"This window lists all the instances in the room in the order that they will be created (from top to bottom). Should you require a specific instance to be created before any other, you can simply click <img_tag=LMB_Icon:0> and drag it to the position your require. Note that instances will be created in the order given from top to bottom of the list.",このウィンドウにはルームの各インスタンスが、生成される順番どおりにリスト表示されます。特定のインスタンスを他のインスタンスより先に生成したい場合、そのインスタンスを目当ての位置にドラッグ<img_tag=LMB_Icon:0>するといいでしょう。なおインスタンスはリストで指定したとおりに、上から下の順番で生成されます。
Room_Properties.htm+html.body.h1:108-3,Cameras And Viewports,カメラとビューポート
Room_Properties.htm+html.body.p:109-3,"The next set of properties for the room that you can define are those relating to the room <strong>Camera</strong> and <strong>Viewports</strong>. Camera views give a mechanism for drawing different parts of your room at different places on the screen, or for drawing just a part of your room to cover the whole screen. For example, in most platform games, the camera view follows the main character, as, if you could see the whole level on the screen, your character would be too small to see and there would be no surprises for the player. Camera views can also be used in multi-player games or co-op games, as they permit you to create a split-screen setup in which in one part of the screen you see one player and in another part you see the other player. This can all be easily achieved in GameMaker Studio 2 using camera views.",次のオプション群では、ルームの<strong>カメラ</strong>と<strong>ビューポート</strong>を設定できます。カメラビューを利用すると、ルームの各部分を画面上のさまざまな位置に描画したり、ルームのある部分だけを画面全体に描画するといった動作ができます。たとえば多くの横スクロールゲームでは、カメラビューをプレイヤーキャラクターに追従させています。ステージ全体を画面内に収めてしまうと、プレイヤーキャラクターがあまりにも小さく表示されてしまうだけでなく、先の展開が丸わかりになってしまうからです。カメラビューはマルチプレイや対戦型のゲームにも利用でき、画面を分割するよう設定すれば片方の画面にプレイヤーを、もう片方の画面に相手を映すことができます。GameMaker Studio 2ではこのような仕組みを、カメラビューによって簡単に実現できます。
Room_Properties.htm+html.body.p.img[alt]:113-6,{IMG_TXT} Camera And Viewport Properties,{IMG_TXT} カメラとビューポートのプロパティ
Room_Properties.htm+html.body.p:113-3,"At the top of the views properties you can toggle the view inheritance on or off, then there is a box labeled <strong>Enable Viewports</strong>. This <em>must be flagged</em> before any of the camera views can be active in your game.",ビュープロパティの上部からはビューの継承切り替えができるほか、<strong>ビューポートを有効</strong>のオプションもあります。このオプションは、カメラビューがゲーム内で有効となる前に<em>フラグ付けしなくてはなりません</em>。
Room_Properties.htm+html.body.p:115-3,"<strong>NOTE</strong>: You can toggle inheritance on or off for the three main view port settings, and then you toggle inheritance on or off for each individual camera view.",<strong>メモ</strong>: 継承のオン/オフは3つあるビューポートの中心設定から切り替えられますが、それぞれのカメラビューごとに継承を切り替えることも可能です。
Room_Properties.htm+html.body.p:116-3,"The next checkbox is the one that says <strong>Clear Viewport Background</strong>, which clears the <a class=""tooltip"" title=""TITLE_KEY::application_surface"">application surface</a> with the window colour, and can be unchecked if you know that you are drawing to cover the whole surface.","隣にあるのは<strong>ビューポートの背景をクリア</strong>というチェックボックスで、<a class=""tooltip"" title=""TITLE_KEY::application_surface"">アプリケーションサーフェス</a>をウィンドウ色でクリアします。サーフェス全体に描画されるとわかっているならチェックを外しても問題ありません。"
Room_Properties.htm+html.body.p:118-3,"A camera view is defined by two different sets of values, the camera view itself and the port on the screen where this view is to be drawn. This can sometimes cause confusion so let's explain this a bit before explaining how we define each of them:",カメラビューを定義している値には2つの分類があり、カメラビュー、ビューが描画される画面上のポートごとに分かれています。混同しがちなので、値を定義する前に少し補足をしましょう。
Room_Properties.htm+html.body.ul.li:120-5,<strong>The Camera</strong>: A point within the room that will be used to set how the room is displayed on screen (this is an abstract piont in the room editor and its position is set automatically based on the view and view port settings),<strong>カメラ</strong>: 画面上に表示されるルームの地点（ルームエディタでの抽象地点にあたり、ビューおよびビューポート設定から自動的に位置が設定されます）
Room_Properties.htm+html.body.ul.li:121-5,"<strong>The View</strong>: What the camera sees, based on the position, projection and rotation of the camera",<strong>ビュー</strong>: カメラの視界であり、カメラの位置、射影、回転に基づいています。
Room_Properties.htm+html.body.ul.li:122-5,<strong>The View Port</strong>: The area of the physical screen where the camera view will be displayed,<strong>ビューポート</strong>: カメラビューが表示される物理的画面の範囲です。
Room_Properties.htm+html.body.p.img[alt]:124-6,{IMG_TXT} Camera View Example,{IMG_TXT} カメラビューの例
Room_Properties.htm+html.body.p:124-3,"So, for example, this means that you can have a 640x480 camera view into your room, and then set the port to 320x240, which will display the view scaled down to that sized port on the screen, and you can also do the same and set the view to a smaller value and the port to larger making the image scale up to fit the port size and be shown on the screen larger than it is. In this way you can maintain a screen (port) size while changing the camera view to display more or less of the room in the same area of the screen.",たとえばルームに640x480のカメラビューを追加し、ポートを320x240に設定した場合、画面上にはポートのサイズに合わせて縮小されたビューが表示されます。同じように、ビューの値を小さくし、ポートの値を大きくすれば、画像をポートはサイズに合わせて拡大され、画面上にはより大きく表示されます。このように画面（ポート）のサイズはそのままにカメラビューを切り替えれば、画面の同じ領域にルームのより広い/狭い部分を表示できます。
Room_Properties.htm+html.body.p:127-3,"The camera view is always defined as a rectangular area in the room, where you specify the position of the top-left corner, the width and the height of this area. Then you must specify where this area is shown in the window on the screen by defining the view port, where again you specify the position of the top-left corner and the size (note that anything other than 0,0 for the top left corner can give strange results). You can have more than one port and they can overlap, in which case they are drawn in the indicated order one on top of the other.","カメラビューはルームでは必ず長方形の範囲として定義され、左上から始まる位置、そして幅と高さを指定できます。あとはビューポートを定義し、カメラビューの範囲が画面上のウィンドウのどこに表示されるかを決めなくてはなりません。こちらも左上から始まる位置、サイズから指定します（位置を0,0以外にすると結果がおかしくなるためご注意ください）。ポートは複数追加し、重ね合わせることができます。この場合、指定された順番で1つずつ上に描画されます。"
Room_Properties.htm+html.body.p:130-3,"Please realise that the overall screen area is <em>always defined as a rectangular area</em>, so your ports, even when offset, will form a rectangle, with any empty spaces being filled in by the window colour of the <a class=""tooltip"" title=""TITLE_KEY::display_buffer"">display buffer</a>, meaning that in these circumstances you should always have <strong>Clear Display Buffer</strong> checked or else you will get odd artefacts drawn in the spaces between ports. The image below illustrates this, where there are two offset view ports visible, yet they make a square window, and ""underneath"" there are lines being drawn to the display buffer:","画面全体の領域は必ず<em>長方形として定義される</em>ため、ポートをオフセットで補正しても長方形となり、空きスペースは<a class=""tooltip"" title=""TITLE_KEY::display_buffer"">表示バッファ</a>のウィンドウ色で塗りつぶされることを覚えておいてください。つまりこのような場合では、<strong>表示バッファをクリア</strong>に必ずチェックする必要があり、チェックしないとポート間のスペースに画面の乱れが生じてしまいます。以下の画像はその説明で、2つのオフセットされたビューポートが表示されているものの、ウィンドウは真四角となり、その「裏」には表示バッファに描画される直線があります。"
Room_Properties.htm+html.body.p.img[alt]:132-6,{IMG_TXT} Object Editor Post Draw,{IMG_TXT} オブジェクトエディタの描画後
Room_Properties.htm+html.body.p:132-3,"Cameras also have the <strong>Object Following </strong>option. This is for when you want the camera to ""follow"" (ie: maintain the view focused on) a certain object. To do this you must click <img_tag=LMB_Icon:0> on the menu icon and select an object from the list that pops up (if there are multiple instances of this object in the room, only one of them is followed by the camera).",カメラには<strong>オブジェクト追従</strong>というオプションもあります。ここではカメラに追従させたい（ビューの中心としたい）オブジェクトを指定できます。メニューアイコンをクリック<img_tag=LMB_Icon:0>するとリストが開きますので、オブジェクトを選びましょう。なお、ルームに同じオブジェクトのインスタンスが複数ある場合、カメラが追従するのはそのうちの1つだけとなります。
Room_Properties.htm+html.body.p:135-3,"The normal behaviour for a camera is to only move when the instance being followed gets too close to a ""buffer"" zone that makes an invisible boundary around the edge of the view. This zone can be defined by you using the <strong>Horizontal Border </strong>and <strong>Vertical Border </strong>values, so - for example - setting these values to 64 will mean that the view will not start to move and follow the character until it reaches 64 pixels from the edge of the view.",カメラの通常動作ではインスタンスがバッファの区域に近づきすぎたときにだけ移動し、ビューの外周には見えない境界線が設けられます。この区域は<strong>水平ボーダー</strong>および<strong>垂直ボーダー</strong>の値から定義できます。たとえばこれらの値を64にした場合、ビューの外周から64ピクセルに達するまではキャラクターに追従しなくなります。
Room_Properties.htm+html.body.p:137-3,"Finally you can indicate the <strong>horizontal</strong> and <strong>vertical speed </strong>at which the camera moves when the character has reached the buffer zone, and this has a default value of -1. This default value is basically ""instantaneous"" and means that the moment the follow instance is outside the horizontal border or vertical border buffer zone, the view will skip to its current position. Now, this is not always what you want and so you can set the vertical and horizontal scrolling speed for the camera by setting the values to something other than -1. Note that a value of 0 will cause the view to not move at all, and any other positive value is how many pixels it will move in any frame, so setting the horizontal speed to 5 will have the view follow the object at 5 pixels per frame horizontally.",一番下からは、バッファ区域にキャラクターが達したときにカメラが移動する<strong>水平</strong>および<strong>垂直速度</strong>を指定できます。デフォルト値は-1ですが、これは一瞬で移動するということで、インスタンスが水平ボーダーまたは垂直ボーダーのバッファ区域から出た瞬間、ビューがインスタンスの現在位置まで飛びます。ゆっくり移動させたい場合もあるはずですから、そのような場合は値を-1以外に設定することでカメラがスクロールする水平、垂直速度を変更できます。なお、値を0にした場合はビューが移動しなくなり、0より大きい正の値はフレームおきに移動するピクセル数となります。たとえば水平速度を5にした場合、ビューはフレームごとに5ピクセル、水平に向かってオブジェクトに追従します。
Room_Properties.htm+html.body.h1:143-3,Room Physics,ルーム物理
Room_Properties.htm+html.body.p:144-3,"Before you can use the built in physics functions in your games, you must tell GameMaker Studio 2 that the room is a physics room. To do this, you must tick the option to <strong>Enable Physics </strong>at the top of the <em>Room Physics</em> section (you can also toggle the inheritance of this section independently of the rest of the room settings). Once you have done that you can then continue on to set up the physics world properties, which are some basic properties that you must have pre-defined before your room will allow physics instances to work as such. For a more precise control over the world you can use code (see the <a href=""../../GameMaker_Language/GML_Reference/Physics/Physics.htm"">Physics Functions</a> for more information).","内蔵されている物理機能をゲームで利用する前に、まずはルームが物理ルームであることをGameMaker Studio 2に指示しなくてはなりません。そのためには、<strong>ルーム物理</strong>の領域内にある「<em>物理を有効</em>」にチェックを入れましょう（ここでは他のルーム設定と同じように継承の切り替えもできます）。チェックしたら、物理世界のプロパティ設定に入りましょう。これらは基本的なプロパティで、ルームの物理インスタンスが動作可能となるよう事前に定義しておく必要があります。物理世界はコードを利用すると、より精密に制御できます（詳しくは<a href=""../../GameMaker_Language/GML_Reference/Physics/Physics.htm"">物理関数</a>を参照してください）。"
Room_Properties.htm+html.body.p.img[alt]:147-6,{IMG_TXT} Room Physics Properties,{IMG_TXT} ルームの物理プロパティ
Room_Properties.htm+html.body.p:147-3,"The next thing you must do is set up the <strong>Gravity </strong>of the world. The strength and direction of this is calculated as a <a class=""tooltip"" title=""TITLE_KEY::vector"">vector</a> of the x/y position that you set around a (0, 0) point. So, an x of 0 and a y of 1 will set the gravity direction as being <em>down </em>with a force of 1 meter per second (for a more detailed explanation see - <a href=""../../GameMaker_Language/GML_Reference/Physics/The_Physics_World/The_Physics_World.htm"">The Physics World</a>).","次は物理世界の<strong>重力</strong>を設定しましょう。重力の強さと方向は、(0, 0)地点を中心としたx/y位置の<a class=""tooltip"" title=""TITLE_KEY::vector"">ベクトル</a>として計算されます。たとえばxが0でyが1なら、重力は<em>下向き</em>となり、勢いは秒間1メートルになります（詳しい説明は<a href=""../../GameMaker_Language/GML_Reference/Physics/The_Physics_World/The_Physics_World.htm"">物理世界</a>を参照してください）。"
Room_Properties.htm+html.body.p:150-3,"Finally you must set the ratio of<strong> Pixels To Meters</strong> for GameMaker Studio 2 to use as a base for all its physics calculations. This is because the physics functions work on real-world measurements, which is why we must set this value, and you'll want to adjust this setting until the average pixel size of the objects you are using translates roughly into simulated physics objects of an appropriate size.",あとは物理演算の基準となる<strong>ピクセル/メートル比</strong>を設定しましょう。物理機能は現実世界の寸法で動作するため、この値は必ず設定しなければならず、オブジェクトの平均ピクセルサイズがおおよそ適切なサイズの模擬物理オブジェクトに変換されるまで、この値を調整する必要があります。
Room_Properties.htm+html.body.p:152-3,"It should be noted that enabling physics in a room means that all instances in the room <em>must use the physics functios and variables to move</em>. Basically, you have ""traditional"" movement, where you can set the X/Y position of an instance or set its speed and direction, and then you have the ""physics"" movement, which requires physical forces and impulses to move around. These systems are <strong>mutually exlusive</strong>, and you cannot move a physics instance using non-physics functions and you cannot move a non-physics instance using the physics funtions.",注意点としてルームの物理を有効にすると、ルームの各インスタンスは<em>物理関数および変数によって移動するようになります</em>。簡単に言うと、インスタンスのX/Y位置、速度、方向を設定する「従来式」の移動と、物理的な力と勢いによって移動する「物理式」の移動があるということです。これらのシステムは<strong>互いに排他的</strong>であり、物理インスタンスを物理用でない関数によって移動させることはできず、非物理インスタンスを物理用の関数によって移動させることもできません。
Room_Properties.htm+html.body.div.div.div.div:161-9,"Back: <a href=""../Rooms.htm"">The Room Editor</a>","戻る: <a href=""../Rooms.htm"">ルームエディタ</a>"
Room_Properties.htm+html.body.div.div.div.div:162-9,"Next: <a href=""Room_Inheritance.htm"">Room Inheritance</a>","次へ: <a href=""Room_Inheritance.htm"">ルームの継承</a>"
Room_Properties.htm+html.body.p:176-1,{SEARCH_RESULT} Page detailing the different room properties,{SEARCH_RESULT} ルームプロパティの詳細ページ
Room_Properties.htm+html.body.p:176-68,{INDEX_KEYWORD} Rooms - Room Settings,{INDEX_KEYWORD} ルーム - ルーム設定
Room_Properties.htm.img_tag+LMB_Icon:0,{IMG_TXT} LMB Icon,{IMG_TXT} 左クリックアイコン
