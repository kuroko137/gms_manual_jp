Audio_Playback.htm+html.head.title:55-3,Audio Playback,Audio Playback
Audio_Playback.htm+html.head.title:59-3,Audio Playback,Audio Playback
Audio_Playback.htm+html.body.div.div.div[title]:73-7,Audio Playback,Audio Playback
Audio_Playback.htm+html.body.div.div.div:73-7,Audio Playback,Audio Playback
Audio_Playback.htm+html.body.h1:86-3,Audio Playback,Audio Playback
Audio_Playback.htm+html.body.p.img[alt]:87-6,{IMG_TXT} Audio Playback Event,{IMG_TXT} Audio Playbackイベント
Audio_Playback.htm+html.body.p:87-3,"This event can only be triggered by the <a href=""../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/Audio_Buffers.htm"">audio queue</a> play functions and will return a <a href=""../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm"">DS Map</a> stored in the variable <a href=""../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm""> <span class=""inline"">async_load</span></a>, containing different key/value pairs relating to the audio queue that has triggered the event. The event is triggered by a <a class=""tooltip"" title=""TITLE_KEY::callback"">callback</a> when you have selected an audio queue to playback and a buffer in that audio queue is finished playing.","<a href=""../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/Audio_Buffers.htm"">オーディオキュー</a>を再生する関数によってのみ作動するイベントであり、<a href=""../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm""><span class=""inline"">async_load</span></a>変数に保存された<a href=""../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm"">DSマップ</a>を返します。このDSマップにはイベントを作動させたオーディオキューに関するキー/値ペアが含まれます。Audio Playbackイベントは、再生するオーディオキューが選択されており、そのオーディオキュー内のバッファが再生終了したときの<a class=""tooltip"" title=""TITLE_KEY::callback"">コールバック</a>によって実行されます。"
Audio_Playback.htm+html.body.p:90-3,The following keys will be available in the DS map:,以下はDSマップにおいて利用可能なキーです。
Audio_Playback.htm+html.body.ul.li:92-5,"""<span class=""inline"">queue_id</span>"" - the queue index for the queue that has finished playing, as returned by the function <a href=""../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_create_play_queue.htm""><span class=""inline"">audio_create_play_queue()</span></a>.","""<span class=""inline"">queue_id</span>"" - 再生を終了したキューのインデックスであり、<a href=""../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_create_play_queue.htm""><span class=""inline"">audio_create_play_queue()</span></a>関数によって返されます。"
Audio_Playback.htm+html.body.ul.li:93-5,"""<span class=""inline"">buffer_id</span>"" - the buffer ID for the <a href=""../../../GameMaker_Language/GML_Reference/Buffers/Buffers.htm"">buffer</a> that is no longer being played from.","""<span class=""inline"">buffer_id</span>"" - 再生されなくなった<a href=""../../../GameMaker_Language/GML_Reference/Buffers/Buffers.htm"">バッファ</a>のIDです。"
Audio_Playback.htm+html.body.ul.li:94-5,"""<span class=""inline"">queue_shutdown</span>"" - this is set to 0 during normal playback and 1 when the event is received because <a href=""../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_free_play_queue.htm""><span class=""inline"">audio_free_play_queue()</span></a> has been called. When this is set to 1, you don't want to queue up any further data.","""<span class=""inline"">queue_shutdown</span>"" - 通常再生時は0ですが、<a href=""../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_free_play_queue.htm""><span class=""inline"">audio_free_play_queue()</span></a>関数の呼び出しによってイベントを受信したときは1になります。この場合、キューにデータを追加する必要はありません。"
Audio_Playback.htm+html.body.p:97-3,"Since an audio queue can be created from multiple buffers, this event can be triggered multiple times for one queue as the end of each section of buffered audio is reached, hence the ""buffer_id"" key.","オーディオキューは複数のバッファから生成できるため、1つのキューに対してイベントが複数回、バッファリングされた各オーディオ領域の最後に達するたびに作動する場合があり、そうしたことから""buffer_id""キーは用意されています。"
Audio_Playback.htm+html.body.p:98-3,"<strong>NOTE</strong>: The variable <span class=""inline"" style=""font-size: 14px"">async_load</span> is only valid in the asynchronous events, as the DS map that is points to is created at the start of the event, then deleted again at the end, with this variable being reset to a value of -1. However, all further data-structures created from the event must be cleaned up using the appropriate functions.","<strong>注意</strong>: <span class=""inline"" style=""font-size: 14px"">async_load</span>変数はAsynchronousイベント内でのみ有効となり、参照先となるDSマップはイベント開始時に自動で生成、終了時に破棄され、その他のときは変数の値が-1にリセットされます。ただしイベント内で作成した別のデータ構造については、対応する関数によって除去しなくてはなりません。"
Audio_Playback.htm+html.body.p:100-3,In the example of use given below we will create an audio queue with 10 buffered audio sounds added to it and then play the queue:,以下の例では、オーディオキューを生成して10のバッファリング済みオーディオサウンドを追加し、キューを再生します。
Audio_Playback.htm+html.body.p:101-3,"{ANY_CODE} audio_queue = audio_create_play_queue(buffer_s16, 11052, audio_mono);<br /> for (var i = 0; i &lt; 10; i++;)<br /> {nbsp_x1} {nbsp_x1}{<br /> {nbsp_x1} {nbsp_x1}audio_queue_sound(audio_queue, audio_buffer[i], 0, buffer_get_size(audio_buffer[i]));<br /> {nbsp_x1} {nbsp_x1}}<br /> audio_play_sound(audio_queue, 0, true);","{ANY_CODE} audio_queue = audio_create_play_queue(buffer_s16, 11052, audio_mono);<br /> for (var i = 0; i &lt; 10; i++;)<br /> {nbsp_x1} {nbsp_x1}{<br /> {nbsp_x1} {nbsp_x1}audio_queue_sound(audio_queue, audio_buffer[i], 0, buffer_get_size(audio_buffer[i]));<br /> {nbsp_x1} {nbsp_x1}}<br /> audio_play_sound(audio_queue, 0, true);"
Audio_Playback.htm+html.body.p:103-3,Every game step now that the recording is detected will trigger an asynchronous Audio Recording event where you can deal with the recorded input something like this:,これによって録音が検出されるとゲームステップごとにAsynchronous Audio Recordingイベントが作動するようになり、次のように入力を処理できます。
Audio_Playback.htm+html.body.p:104-3,"{ANY_CODE} var queue = async_load[? ""queue_id""];<br /> var num = 0;<br /> if queue = audio_queue<br /> {nbsp_x1} {nbsp_x1}{<br /> {nbsp_x1} {nbsp_x1}for (var i = 0; i &lt; 10; i++;)<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} if async_load[? ""buffer_id""] == audio_buffer[i]<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1}{<br /> {nbsp_x1}buffer_seek(audio_buffer[i], buffer_seek_start, 0);<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1}num = i;<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1}}<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} }<br /> {nbsp_x1} {nbsp_x1}if num == 9<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} audio_stop_sound(audio_queue);<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} audio_free_play_queue(audio_queue);<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} }<br /> {nbsp_x1}}","{ANY_CODE} var queue = async_load[? ""queue_id""];<br /> var num = 0;<br /> if queue = audio_queue<br /> {nbsp_x1} {nbsp_x1}{<br /> {nbsp_x1} {nbsp_x1}for (var i = 0; i &lt; 10; i++;)<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} if async_load[? ""buffer_id""] == audio_buffer[i]<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1}{<br /> {nbsp_x1}buffer_seek(audio_buffer[i], buffer_seek_start, 0);<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1}num = i;<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1}}<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} }<br /> {nbsp_x1} {nbsp_x1}if num == 9<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} audio_stop_sound(audio_queue);<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} audio_free_play_queue(audio_queue);<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} }<br /> {nbsp_x1}}"
Audio_Playback.htm+html.body.p:107-3,"Here we check the queue ID and if it's the one we want, we then check the buffer ID to see which buffer has finished being played. We also then set a local var to that index value for checking later and set the buffer back to the start for that sound. Once our local variable reaches 9, indicating that the queue has finished, we stop the sound playing and free the queue.",このコードではキューIDから目的のキューであるかを判断し、それからバッファIDをチェックして再生終了したバッファを特定しています。それと同時に、最後にチェックするインデックス値をローカル変数に代入し、バッファをサウンドの開始位置に戻しています。ローカル変数が9になったらキューの終了となり、再生停止してキューを解放します。
Audio_Playback.htm+html.body.div.div.div.div:116-9,"Back: <a href=""../Async_Events.htm"">Async Events</a>","戻る: <a href=""../Async_Events.htm"">Asyncイベント</a>"
Audio_Playback.htm+html.body.div.div.div.div:117-9,"Next: <a href=""Audio_Recording.htm"">Audio Recording</a>","次へ: <a href=""Audio_Recording.htm"">Audio Recording</a>"
Audio_Playback.htm+html.body.p:131-1,{SEARCH_RESULT} Page detailing the Audio Playback async event.,{SEARCH_RESULT} Async Audio Playbackイベントの詳細ページ
Audio_Playback.htm+html.body.p:131-70,{INDEX_KEYWORD} Objects - Async Audio Playback Event,{INDEX_KEYWORD} オブジェクト - Async Audio Playbackイベント
