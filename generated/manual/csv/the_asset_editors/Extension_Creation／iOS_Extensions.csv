iOS_Extensions.htm+html.head.title:55-3,iOS Extensions,iOS拡張機能
iOS_Extensions.htm+html.head.title:59-3,iOS Extensions,iOS拡張機能
iOS_Extensions.htm+html.body.div.div.div[title]:73-7,iOS Extensions,iOS拡張機能
iOS_Extensions.htm+html.body.div.div.div:73-7,iOS Extensions,iOS拡張機能
iOS_Extensions.htm+html.body.h1:86-3,iOS / tvOS Extensions,iOS / tvOS拡張機能
iOS_Extensions.htm+html.body.p:87-3,"To create an extension for iOS or tvOS you have to do it in two parts. The first part would be to add the extension itself, along with the required files etc... and the second is to create the functions and macros/constants that the extension requires. The functions and constants are added using <strong>placeholder </strong>files to group them together, so you'd add a placeholder and then define the functions and macros as explained in the section <a href=""Creating_An_Extension.htm"">here</a>. To add the rest of the files though you need to first tick the <em>iOS </em>and/or the <em>tvOS </em>check-box in the <strong>Additional Features</strong> section of the editor to open up the relevant <strong>Extension Properties</strong> window (the image below shows the iOS properties window, but the tvOS window is exactly the same):","iOSおよびtvOSの拡張機能は2つの手順から作成します。1つ目は拡張機能および必要ファイル等の追加、2つ目は関数およびマクロ/定数の作成です。関数と定数は<strong>プレースホルダ</strong>によってグループ化して追加されるため、<a href=""Creating_An_Extension.htm"">こちら</a>で説明されているようにプレースホルダのファイルを追加してから関数とマクロを定義しなくてはなりません。残りのファイルを追加するには、まずエディタの<strong>追加プラットフォーム</strong>領域にある<em>iOS</em>および（または）<em>tvOS</em>をチェックし、<strong>拡張機能プロパティ</strong>のウィンドウを開いてください（下の画像はiOSのプロパティウィンドウですが、tvOSのウィンドウもまったく同じものです）。"
iOS_Extensions.htm+html.body.p.img[alt]:91-23,{IMG_TXT} iOS Editor,{IMG_TXT} iOSエディタ
iOS_Extensions.htm+html.body.p:92-3,Here you give the following details:,以下はプロパティの詳細です。
iOS_Extensions.htm+html.body.ul.li:94-5,<strong>Linker Flags / Compiler Flags</strong>: Some frameworks and third party SDKs require the addition of extra linker flags and compiler flags to work which can be specified here (see the documentation that accompanies the SDK or framework in question for details).,<strong>リンカーフラグ / コンパイラフラグ</strong>: 一部のフレームワークやサードパーティSDKを動作させるには、リンカーフラグおよびコンパイラーフラグをこちらに入力する必要があります（詳しくはSDKまたはフレームワークの同梱ドキュメントを参照してください）。
iOS_Extensions.htm+html.body.ul.li:96-5,"<strong>Class Name</strong>: Your extension can have multiple classes, with each class having its own functions and constants, so you should give it a name that reflects its purpose",<strong>クラス名</strong>: 拡張機能には複数のクラスを用意でき、クラスごとに独自の関数、定数を追加できます。他のクラスと用途が区別できる名前をつけましょう。
iOS_Extensions.htm+html.body.ul.li:97-5,<strong>App Delegate Class Name</strong>: The name of your custom app delegate class. Setting this allows the extension to override/extend core app functionality. To use this feature you need to do the following:,<strong>アプリデリゲートクラス名</strong>: アプリのカスタムデリゲートクラス名です。この設定をすると、拡張機能によってコアアプリの機能をオーバーライド/拡張できるようになります。利用するには次の手順を踏んでください。
iOS_Extensions.htm+html.body.ul.li.ol.li:99-9,"Ensure that the delegate source files have the same name as the delegate class (e.g. <span class=""inline"">@interface MyCustomAppDelegate</span> should be defined in "" <span class=""inline"">MyCustomAppDelegate.h</span>"")","すべてのデリゲートソースファイル名をデリゲートクラスの名前に合わせます（例: <span class=""inline"">@interface MyCustomAppDelegate</span>は""<span class=""inline"">MyCustomAppDelegate.h</span>""で定義）"
iOS_Extensions.htm+html.body.ul.li.ol.li:100-9,"Add the <span class=""inline"">${YYExtAppDelegateIncludes}</span> environment variable at the top of your app delegate header file. This will be replaced at compile-time with the relevant include files for the parent delegate class.","アプリのデリゲートヘッダーファイルの先頭に環境変数<span class=""inline"">${YYExtAppDelegateIncludes}</span>を追加します。これはコンパイル時、親デリゲートクラスの関連インクルードファイルに置き換えられます。"
iOS_Extensions.htm+html.body.ul.li.ol.li:101-9,"Use the <span class=""inline"">${YYExtAppDelegateBaseClass}</span> environment variable as the base class for your custom app delegate. This will be replaced at compile-time with the correct base delegate class.<br /> <br /> To ensure your extension works with any other extensions that use custom app delegates, you should call any base class methods from overridden methods in your child class. Before calling the superclass method, you need to make sure it is implemented in the class hierarchy to avoid errors, for e.g.:","環境変数<span class=""inline"">${YYExtAppDelegateBaseClass}</span>をカスタムアプリデリゲートのベースクラスとして使用します。これはコンパイル時、適切なベースデリゲートクラスに置き換えられます。<br /><br />カスタムアプリデリゲートを使用している拡張機能と併用させるには、子クラスのオーバーライドされたメソッドからベースクラスのメソッドを呼び出さなくてはなりません。スーパークラスのメソッドを呼び出す際はエラーを避けるため、あらかじめ以下のようにしてクラス階層に組み込まれていることをチェックしてください。"
iOS_Extensions.htm+html.body.ul.li.p:105-7,{ANY_CODE} - (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(NSDictionary *)launchOptions<br /> { <br /> {nbsp_x1} {nbsp_x1} // Check if any superclasses implement this method and call it<br /> {nbsp_x1} {nbsp_x1} if([[self superclass] instancesRespondToSelector:@selector(application:willFinishLaunchingWithOptions:)])<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} return [super application:application willFinishLaunchingWithOptions:launchOptions];<br /> {nbsp_x1} {nbsp_x1} else<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} return TRUE;<br /> },{ANY_CODE} - (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(NSDictionary *)launchOptions<br /> { <br /> {nbsp_x1} {nbsp_x1} // Check if any superclasses implement this method and call it<br /> {nbsp_x1} {nbsp_x1} if([[self superclass] instancesRespondToSelector:@selector(application:willFinishLaunchingWithOptions:)])<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} return [super application:application willFinishLaunchingWithOptions:launchOptions];<br /> {nbsp_x1} {nbsp_x1} else<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} return TRUE;<br /> }
iOS_Extensions.htm+html.body.ul.li:109-5,"<strong>System Frameworks</strong>: Here you can add in any iOS system <a class=""tooltip"" title=""TITLE_KEY::framework"">framework</a><span class=""glossextra""></span> to your extension. These are added by clicking the <img_tag=Add_Argument_Icon:0> button which will add a placeholder framework, which you can then edit by slow clicking <img_tag=LMB_Icon:0> on it. You can find out more about available system frameworks <a href=""https://developer{-dot-}apple{-dot-}com/documentation/"">here</a>. To remove a system framework, simply select it and then click the <img_tag=Remove_Argument_Icon:0> button.","<strong>システムフレームワーク</strong>: iOSのシステム<a class=""tooltip"" title=""TITLE_KEY::framework"">フレームワーク</a><span class=""glossextra""></span>を拡張機能に追加できます。<img_tag=Add_Argument_Icon:0>ボタンをクリックするとプレースホルダのフレームワークを追加し、ゆっくりダブルクリック<img_tag=LMB_Icon:0>すると編集を行えます。利用可能なフレームワークは<a href=""https://developer{-dot-}apple{-dot-}com/documentation/"">こちら</a>から調べることができます。フレームワークを削除するには、削除したいフレームワークを選んで<img_tag=Remove_Argument_Icon:0>ボタンをクリックしてください。"
iOS_Extensions.htm+html.body.ul.li:110-5,"<strong>Inject to Info.plist</strong>: Here you can add any code to be a injected into the <span class=""inline"">info.plist</span> file.","<strong>Info.plistへ挿入</strong>: <span class=""inline"">info.plist</span>ファイルに挿入したいコードを入力します。"
iOS_Extensions.htm+html.body.ul.li:111-5,"<strong>3rd Party Frameworks and Bundles</strong>: This section is for adding third party and SDK bundles. As with system frame works you click the <img_tag=Add_Argument_Icon:0> button to add them and then slow click <img_tag=LMB_Icon:0> to edit, and selecting them then clicking <img_tag=Remove_Argument_Icon:0> will remove them (see the documentation that came with your chosen SDK for info on the framework name). If the framework/SDK bundle is on your development Mac then you need to add the path into "" <em>Enter framework path on Mac</em>"" and click the <img_tag=Add_Argument_Icon:0> button, or if the SDK or source code is on your PC use the <em>Add Source</em> button.",<strong>サードパーティフレームワークとバンドル</strong>: サードパーティおよびSDKバンドルをこちらから追加できます。システムフレームワークと同じく、<img_tag=Add_Argument_Icon:0>ボタンをクリックで追加、ゆっくりダブルクリック<img_tag=LMB_Icon:0>で編集、<img_tag=Remove_Argument_Icon:0>ボタンをクリックで削除となります（フレームワーク名の情報については選択したSDKに含まれているドキュメントを参照してください）。フレームワーク /SDKバンドルが開発用Macにある場合、「<em>Macのフレームワークパスを入力</em>」にパスを入力してから<img_tag=Add_Argument_Icon:0>ボタンをクリックしてください。PC上にSDKまたはソースコードがある場合は「<em>ソースを追加</em>」ボタンで指定しましょう。
iOS_Extensions.htm+html.body.ul.li:113-5,"<strong>CocoaPods</strong>: Here you can give the name of any CocoaPods that the extension is going to use instead of (or as well as) any SDKs and frameworks that have been added. Note that there is a Game Option <a href=""../../Settings/Game_Options/iOS.htm"">for iOS</a> and <a href=""../../Settings/Game_Options/tvOS.htm"">for tvOS</a> to add a Podfile to GameMaker Studio2 which is required if you are adding CocoaPods in this secton.","<strong>CocoaPods</strong>: 追加されたSDKおよびフレームワークの代わりに使用（あるいは併用）するCocoaPodsの名前を入力します。ゲームオプションの<a href=""../../Settings/Game_Options/iOS.htm"">iOS</a>および<a href=""../../Settings/Game_Options/tvOS.htm"">tvOS</a>にはGameMaker Studio2のPodfileを生成する項目があり、ここでCocoaPodsを追加する場合に必要となります。"
iOS_Extensions.htm+html.body.ul.li:114-5,"<strong>CocoaPods Dependencies</strong>: This section is where you can list the different dependencies required by the CocoaPods added in the previous section. Note that there is a Game Option <a href=""../../Settings/Game_Options/iOS.htm"">for iOS</a> and <a href=""../../Settings/Game_Options/tvOS.htm"">for tvOS</a> to add a Podfile.lock to GameMaker Studio2 which is required if you are adding CocoaPod Dependencies in this secton.","<strong>CocoaPods依存関係</strong>: 上記で追加したCocoaPodsによって必要とされる依存関係が一覧表示されます。なお、ゲームオプションの<a href=""../../Settings/Game_Options/iOS.htm"">iOS</a>および<a href=""../../Settings/Game_Options/tvOS.htm"">tvOS</a>からPodfile.lockを生成でき、ここでCocoaPods依存関係を追加する場合に必要となります。"
iOS_Extensions.htm+html.body.p:116-3,"If your extension has had any System Frameworks or 3rd Party Frameworks added, these will now be listed in the <strong>Extension Properties </strong>window, with each one having a check-box beside it. If you mark the check-box, you are enabling weak linking, which is useful should you need to ""over-ride"" any symbol from the included library with your own value, but it should be noted that doing so will slow linking down.",拡張機能にシステムフレームワークあるいはサードパーティフレームワークが追加されていると、<strong>拡張機能プロパティ</strong>のウィンドウにチェックボックス付きで一覧表示されます。チェックを入れた場合、ウィークリンクが有効となります。ライブラリに含まれているシンボルを任意の値に「上書き」したいときには便利ですが、リンクが遅くなるため注意してください。
iOS_Extensions.htm+html.body.p:118-3,"For more information on creating iOS and tvOS extensions, please see the <a href=""https://help{-dot-}yoyogames{-dot-}com/hc/en-us/articles/360012504971-iOS-and-Android-Creating-A-Simple-Extension"">YoYo Games Knowledge Base</a>, and for information on using CocoaPods in extensions, please see the following guide:","iOSとtvOSの拡張機能の作成方法については、<a href=""https://help{-dot-}yoyogames{-dot-}com/hc/en-us/articles/360012504971-iOS-and-Android-Creating-A-Simple-Extension"">YoYo Gamesナレッジベース</a>により詳しい情報があります。拡張機能におけるCocoaPodsの使い方については、以下のガイドを参照してください。"
iOS_Extensions.htm+html.body.ul.li:121-5,iOS and tvOS: Using Cocoa Pods,iOSとtvOS: Cocoa Podsの使い方
iOS_Extensions.htm+html.body.div.div.div.div:129-9,"Back: <a href=""../Extensions.htm"">The Extension Editor</a>","戻る: <a href=""../Extensions.htm"">拡張機能エディタ</a>"
iOS_Extensions.htm+html.body.div.div.div.div:130-9,"Next: <a href=""Creating_An_Extension.htm"">Creating An Extension</a>","次へ: <a href=""Creating_An_Extension.htm"">拡張機能の作り方</a>"
iOS_Extensions.htm+html.body.p:143-1,{SEARCH_RESULT} Page detailing how iOS extensions work,{SEARCH_RESULT} iOS拡張機能の詳しい仕組みについてのページ
iOS_Extensions.htm+html.body.p:143-62,{INDEX_KEYWORD} Extensions - Creating iOS / tvOS Extensions,{INDEX_KEYWORD} 拡張機能 - iOS / tvOS拡張機能の作り方
iOS_Extensions.htm.img_tag+Add_Argument_Icon:0,{IMG_TXT} Add Argument Icon,{IMG_TXT} 引数を追加アイコン
iOS_Extensions.htm.img_tag+LMB_Icon:0,{IMG_TXT} LMB Icon,{IMG_TXT} 左クリックアイコン
iOS_Extensions.htm.img_tag+Remove_Argument_Icon:0,{IMG_TXT} Remove Argument Icon,{IMG_TXT} 引数を削除アイコン
