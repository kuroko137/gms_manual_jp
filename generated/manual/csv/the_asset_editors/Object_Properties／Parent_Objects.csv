Parent_Objects.htm+html.head.title:55-3,Parent Objects,親オブジェクト
Parent_Objects.htm+html.head.title:59-3,Parent Objects,親オブジェクト
Parent_Objects.htm+html.body.div.div.div[title]:73-7,Parent Objects,親オブジェクト
Parent_Objects.htm+html.body.div.div.div:73-7,Parent Objects,親オブジェクト
Parent_Objects.htm+html.body.h1:86-3,Parent Objects,親オブジェクト
Parent_Objects.htm+html.body.p:87-3,"When working with objects in the GameMaker Studio 2 IDE, you can set up <strong>Parent </strong>/ Child hierarchies. This is done by clicking the ""Parent"" button in the object editor and then choosing another object from the Asset Browser to be the ""parent"" of the one being edited:",IDEで扱えるオブジェクトには<strong>親★</strong>子の階層を設定することができます。オブジェクトエディタの「親」ボタンをクリックし、編集しているオブジェクトの親にしたいオブジェクトを、次のようにアセットブラウザから指定してみてください。
Parent_Objects.htm+html.body.p.img[alt]:89-6,{IMG_TXT} Adding A Parent,{IMG_TXT} 親を追加
Parent_Objects.htm+html.body.p:89-3,"So, every object in your game project can have a parent object, but what does this mean? Well, when an object has a parent assigned it can share code, actions and events with that parent. This sharing is called ""inheritance"" and an object that has a parent is called a ""child"" object. Not only can a child share code with its parent, but you can do checks and run code on parent objects and it will automatically include the child objects too, which saves a lot of time and energy.",プロジェクトのどのようなオブジェクトにも親を追加できますが、これにはどんな意味があるのでしょうか？オブジェクトに親を割り当てると、コードやアクション、イベントを親と共有できるのです。この仕組みは「継承」といい、親があるオブジェクトは「子」オブジェクトと呼びます。子は親とコードを共有できるだけではなく、親オブジェクトをチェックしてそのコードを実行できます。また、親のコードは自動で子オブジェクトに含まれるため、時間と手間を大きく減らすことが可能です。
Parent_Objects.htm+html.body.p:92-3,"If that sounds complicated, then another way to look at a parent object is as a way to ""group"" objects together under the same umbrella and have them share certain things without losing their own unique identity. Maybe that still doesn't clarify things too much, so let's give some examples...",ちょっとややこしいので、見方を変えてみましょう。親オブジェクトとは同じ箱に入れたオブジェクトをグループ化するもので、それぞれの独自要素を失うことなく機能を共有できます。これでもはっきりしないかもしれないので、具体的な例を出してみましょう。
Parent_Objects.htm+html.body.p:94-3,"Say you have a ""player"" object and four different ""enemy"" objects. Now, you want the player to die if he touches any of these four objects and this would normally entail four different collision events with four different sets of actions or code, one for each of the enemy objects. BUT if we make a parent object for all the enemies, then we can create one collision event with the parent object only and it will trigger no matter which one of the four ""child"" enemy objects touch the player. Handy stuff! In the actual GameMaker Studio 2 object you would see something like this:",「プレイヤー」のオブジェクトが1つ、「敵」のオブジェクトが4つあり、プレイヤーが4つの敵オブジェクトのいずれかに触れたら倒れるようにしたいとします。普通ならそれぞれの敵オブジェクトごとに4つの衝突イベントを用意し、それぞれアクションやコードを追加しなくてはなりません。ですが敵オブジェクトに親となるオブジェクトを用意すれば、親オブジェクトとの衝突イベントを作るだけでよく、プレイヤーに触れた敵の子オブジェクトが4つのうちのどれであろうとイベントが作動するようになります。実に便利でしょう！実際の画面では、このようにオブジェクトが表示されます。
Parent_Objects.htm+html.body.p.img[alt]:97-6,{IMG_TXT} Parenting For Collisions,{IMG_TXT} 衝突イベントの親化
Parent_Objects.htm+html.body.p:97-3,"On the left we have four separate collision events and on the right we have a single collision event, as we have created a ""parent"" object and assigned all the enemy objects to it. Note that a parent object doesn't have to have any events or code in it...",左ではCollisionイベントが4つに分けられていますが、右ではCollisionイベントが1つしかなく、「親」オブジェクトを用意してすべての敵オブジェクトに割り当てられています。なお、親オブジェクトにはイベント、コードを必ず用意する必要はありません。
Parent_Objects.htm+html.body.p:99-3,"Another example of parenting would be if you have a game where you want to create 10 different looking objects and have them all behave in the same way. For that you would create one parent object and in that have all your behaviour actions or code in the required events, and then you would create your ten objects with no actions or code, but different sprites, and assign them your parent object. Now, when you place these instances in a room they will all behave the same, but look different, since they will ""inherit"" the events of the parent."
Parent_Objects.htm+html.body.p:102-3,"Finally you can use parenting to ""mix and match"" events and behaviours. We'll illustrate this with one final example... Say you want two monsters: one that moves up and down, while another that moves left and right, but you also want the two of them to have the same health, shoot at the player and hurt the player if they collide with them. In this case you can see that almost all events should have the same actions except for one or two that govern movement. So, again, we can make one object the parent of the other, but in this case we also define certain events for the child object. These events ""override"" the parent events, meaning that whenever an event for the child object contains actions, these are executed instead of the actions contained in the event of the parent. If you also want to execute the parent event you can call the so-called ""inherited"" event using the function <a href=""../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm""><span class=""inline"">event_inherited()</span></a>, or the DnD™ action <a href=""../../Drag_And_Drop/Drag_And_Drop_Reference/Instance/Call_Parent_Event.htm"">Call Parent Event</a>."
Parent_Objects.htm+html.body.p.img[alt]:107-6,{IMG_TXT} Inheriting Events
Parent_Objects.htm+html.body.p:107-3,"On the left above is the parent object with 5 events in it, and on the right you can see the ""child"" object. The child object also has 5 events in it, but two of them override the inherited events from the parent (the <strong>Step </strong>and <strong>Draw </strong>events) and the other three are greyed out as they are the events inherited from the parent. Inherited events will also have the ""parent override"" icon beside them in the Event Editor:"
Parent_Objects.htm+html.body.p.img[alt]:110-6,{IMG_TXT} Parent Override
Parent_Objects.htm+html.body.p:110-3,"When you click <img_tag=LMB_Icon:0> on an event that has been inherited, it will open the code editor to show the inherited parent code, but you will not be able to edit this code as you can only edit it in the parent object itself. You can click the right mouse button <img_tag=RMB_Icon:0> on any of the parent events to open the following menu of options:"
Parent_Objects.htm+html.body.p.img[alt]:112-6,{IMG_TXT} Parent Event RMB Menu
Parent_Objects.htm+html.body.p:112-3,"Here you can choose two <strong>Open </strong>the parent event to inspect the code, or you can choose to <strong>Inherit </strong>the event or <strong>Override </strong>the event. If you choose <strong>Inherit </strong>then the code editor will open with the function <a href=""../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm""><span class=""inline"">event_inherited()</span></a> already added to it (or the <a href=""../../Drag_And_Drop/Drag_And_Drop_Reference/Instance/Call_Parent_Event.htm"">Call Parent Event</a> action if using DnD™). Any further code you place in this event will now be run as well as the code that the parent object has. If you choose to <strong>Override </strong>the event, then the code window will also open, only now the <span class=""inline"">event_inherited()</span> function won't be called, so anything you add here will be run <em>instead </em>of the code in the parent object."
Parent_Objects.htm+html.body.p:117-3,"<strong>NOTE</strong>: From the code editor you can quickly navigate to the parent object by clicking the right mouse button <img_tag=RMB_Icon:0> and selecting <strong>Go To Object</strong> from the pop-up menu, or (if the event has been overridden) you can select <strong>Open Inherited Event</strong> to go directly to a code editor with the parent event code in it."
Parent_Objects.htm+html.body.p:118-3,"Whenever you target a parent object in code, the code will also apply to the ""children"" of the parent object too. This happens when, in an action, you indicate that the action must be applied to instances of a certain object, and in code it happens when you use the <a href=""../../GameMaker_Language/GML_Overview/Language_Features/with.htm""><span class=""inline"">with()</span></a> statement. It will work like this too when you call code functions, like <a href=""../../GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_position.htm""><span class=""inline"">instance_position()</span></a>, <a href=""../../GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_number.htm""><span class=""inline"">instance_number()</span></a>, etc... where - if you supply a parent object - all instances of the parent <em>and </em>child instances will be included in the checks. Finally, parenting works when you refer to variables in other objects too, like in the above monster example if I set the enemy 1 speed to 10, then the enemy 2 speed will also go to ten as it is a child object of enemy 1."
Parent_Objects.htm+html.body.p:123-3,"It is generally considered good practice in most cases to create one base parent object and have this base object contain all the default behaviour but never use an instance of it in the game. Rather use all child objects and only use the parent in situations like those I have outlined above, for collisions, for referencing variables, etc... You should also realise that parents can have parents too! Obviously you can't create a cycle of ""parent 1 is child of parent 2 is child of parent 1"" but you can create what is called ""object hierarchy"" where ""<em>parent3 </em>is child of <em>parent2 </em>is child of <em>parent1</em>"". This is extremely useful to keep your game structured and you are strongly advised to learn to use this mechanism."
Parent_Objects.htm+html.body.div.div.div.div:133-9,"Back: <a href=""../Objects.htm"">The Object Editor</a>"
Parent_Objects.htm+html.body.div.div.div.div:134-9,"Next: <a href=""Physics_Objects.htm"">Physics Objects</a>"
Parent_Objects.htm+html.body.p:150-1,{SEARCH_RESULT} Page detailing object parenting
Parent_Objects.htm+html.body.p:150-55,{INDEX_KEYWORD} Objects - Parents
Parent_Objects.htm.img_tag+LMB_Icon:0,{IMG_TXT} LMB Icon
Parent_Objects.htm.img_tag+RMB_Icon:0,{IMG_TXT} RMB Icon
