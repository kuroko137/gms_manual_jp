repeat.htm+html.head.title:55-3,repeat
repeat.htm+html.head.title:59-3,repeat
repeat.htm+html.body.div.div.div[title]:73-7,repeat
repeat.htm+html.body.div.div.div:73-7,repeat
repeat.htm+html.body.h1:86-3,repeat
repeat.htm+html.body.p:87-3,"The GameMaker Language has a number of ways that you can perform <i>loops</i>, ie: have a statement or statements iterate over itself a certain number of times. The simplest of these is the <tt>repeat</tt> statement, which has the form:"
repeat.htm+html.body.p:88-3,{ANY_CODE} repeat (&lt;expression&gt;)<br /> {nbsp_x1} {nbsp_x1} {<br /> {nbsp_x1} {nbsp_x1} &lt;statement&gt;;<br /> {nbsp_x1} {nbsp_x1} &lt;statement&gt;;<br /> {nbsp_x1} {nbsp_x1} ...<br /> {nbsp_x1} {nbsp_x1} }
repeat.htm+html.body.p:89-3,"With <tt>repeat</tt> the given <a class=""tooltip"" title=""TITLE_KEY::statement"">statement</a> is repeated the number of times indicated by the rounded value of the <a class=""tooltip"" title=""TITLE_KEY::expression"">expression</a>. For example, the following creates five balls at random positions:"
repeat.htm+html.body.p:91-3,"{ANY_CODE} repeat (5)<br /> {nbsp_x4}{ <br /> {nbsp_x4}instance_create_layer(random(400), random(400), ""Instances"", obj_ball);<br /> {nbsp_x4}}"
repeat.htm+html.body.p:94-3,"This can be very useful to avoid typing out the same code multiple times, or for using arrays, or for counting through a number of operations etc... You are not limited to using a single statement either, and can repeat multiple statements by enclosing them within curly brackets <tt>{}</tt>. For example:"
repeat.htm+html.body.p:96-3,"{ANY_CODE} var _x = 32;<br /> repeat (global.p_lives)<br /> {nbsp_x1} {nbsp_x1} {<br /> {nbsp_x1} {nbsp_x1} draw_sprite(spr_heart, 0, _x, 32);<br /> {nbsp_x1} {nbsp_x1} _x += sprite_get_width(spr_heart);<br /> {nbsp_x1} {nbsp_x1} }"
repeat.htm+html.body.p:97-3,"The above example repeats the statements in the curly brackets for however many <a class=""tooltip"" title=""TITLE_KEY::iteration"">iteration</a><span class=""glossextra""></span> the ""lives"" global variable has, and each iteration draws the heart sprite at the <span class=""inline"">_x</span> position, then moves the position along a bit based on the heart sprite width."
repeat.htm+html.body.p:99-3,"<strong>When should you use a <span class=""inline"">repeat</span> loop?</strong> Anytime that you want to repeat over one or more statements a fixed number of times without any specific need to maintain a count of the iterations."
repeat.htm+html.body.p:100-3,"It is worth noting that you can use the special <span class=""inline""><a href=""break.htm"">break</a></span> and <span class=""inline""><a href=""continue.htm"">continue</a></span> statements within a <font face=""Lucida Console""><span style=""font-size: 16px;""><b>repeat</b></span></font> loop too. Using <span class=""inline"">break</span> will immediately exit the loop and move on to any code that is in the event or function after the loop should have finished, eg:"
repeat.htm+html.body.p:102-3,{ANY_CODE} var i = 0;<br /> var temp = 0;<br /> repeat (10)<br /> {nbsp_x1} {nbsp_x1} {<br /> {nbsp_x1} {nbsp_x1} temp += array[i];<br /> {nbsp_x1} {nbsp_x1} if (temp &gt; max_total)<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} {<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} break;<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} }<br /> {nbsp_x1} {nbsp_x1} else<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} {<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} i += 1;<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} }<br /> {nbsp_x1} {nbsp_x1} }
repeat.htm+html.body.p:103-3,"The above code loops through 10 <a href=""../Arrays.htm"">array</a> values and adds them to a local variable. If the total of the local variable is greater than the given value for <span class=""inline"">max_total</span>, then the loop is terminated using break, otherwise the loop will continue."
repeat.htm+html.body.p:105-3,"An example of using <span class=""inline"">continue</span> in a <span class=""inline"">repeat</span> loop would be:"
repeat.htm+html.body.p:106-3,"{ANY_CODE} repeat(10)<br /> {nbsp_x1} {nbsp_x1} {{nbsp_x1} {nbsp_x1}<br /> {nbsp_x1} {nbsp_x1} var _x = random(room_width);<br /> {nbsp_x1} {nbsp_x1} var _y = random(room_height);<br /> {nbsp_x1} {nbsp_x1} if (instance_position(_x, y, obj_Enemy)<br /> {nbsp_x8}{ <br /> {nbsp_x8}continue; <br /> {nbsp_x8}} <br /> {nbsp_x1} {nbsp_x1} instance_create_layer(_x, _y, ""Instances"", obj_Enemy);<br /> {nbsp_x1} {nbsp_x1} }"
repeat.htm+html.body.p:110-3,"This code will repeat 10 times, generating a random room position then checking if an instance of the object <span class=""inline"">obj_Enemy</span> exists at that position. If it does, the current loop iteration is terminated using <span class=""inline"">continue</span> and a new iteration is started, and if it doesn't then an instance of the object <span class=""inline"">obj_Enemy</span> is created at the random position."
repeat.htm+html.body.p:111-3,"For more examples of loop functions please see the sections on <a href=""while.htm""><tt>while</tt></a>, <a href=""do___until.htm""><tt>do... until</tt></a>, and <a href=""for.htm""><tt>for</tt></a>."
repeat.htm+html.body.div.div.div.div:118-9,"Back: <a href=""../Language_Features.htm"">Language Features</a>"
repeat.htm+html.body.div.div.div.div:119-9,"Next: <a href=""while.htm"">while</a>"
repeat.htm+html.body.p:131-1,{SEARCH_RESULT} Page outlining the repeat function
repeat.htm+html.body.p:131-58,{INDEX_KEYWORD} repeat
