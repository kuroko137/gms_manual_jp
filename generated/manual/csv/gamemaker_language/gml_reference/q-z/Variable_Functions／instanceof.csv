instanceof.htm+html.head.title:55-3,instanceof
instanceof.htm+html.head.title:59-3,instanceof
instanceof.htm+html.body.div.div.div[title]:73-7,instanceof
instanceof.htm+html.body.div.div.div:73-7,instanceof
instanceof.htm+html.body.h1:86-3,instanceof
instanceof.htm+html.body.p:87-3,"This function can be used to get the name of the function that was used to create a struct when the struct was created using a <a href=""../../GML_Overview/Structs.htm"">constructor function</a> and the <a href=""../../GML_Overview/Language_Features/new.htm""><tt></tt></a> <a href=""../../GML_Overview/Language_Features/new.htm""><tt>new</tt></a> operator. You supply the variable with the struct reference to check and the function will return either a string with the function name or <tt>undefined</tt>. Note that if you pass the function a struct literal (ie: a struct that was created without using a constructor function) then it will simply return the string ""struct"". This function can also be used to check if a struct reference is a <strong><a class=""tooltip"" title=""TITLE_KEY::weak_reference"">weak reference</a></strong> or not, in which case the function will return the string ""<span class=""inline"">weakref</span>"" instead of the name of the function that created the struct for more information, see the function <span class=""inline"">weak_ref_create()</span>)."
instanceof.htm+html.body.h4:91-3,Syntax:
instanceof.htm+html.body.p:92-3,instanceof(struct_id);
instanceof.htm+html.body.table.tbody.tr.th:96-9,Argument
instanceof.htm+html.body.table.tbody.tr.th:97-9,Description
instanceof.htm+html.body.table.tbody.tr.td:100-9,struct
instanceof.htm+html.body.table.tbody.tr.td:101-9,The struct reference to use.
instanceof.htm+html.body.h4:106-3,Returns:
instanceof.htm+html.body.p:107-3,String or <tt>undefined</tt>
instanceof.htm+html.body.h4:109-3,Extended Example:
instanceof.htm+html.body.p:110-3,In this example we must first define the function that will be used as the constructor for the struct:
instanceof.htm+html.body.p:111-3,"{ANY_CODE} function init_struct(_a, _b, _c) constructor<br /> {nbsp_x4}{ <br /> {nbsp_x4}a = _a;<br /> {nbsp_x4}b = _b;<br /> {nbsp_x4}c = _c;<br /> {nbsp_x4}}"
instanceof.htm+html.body.p:114-3,This function can then be used along with the <tt>new</tt> operator to create a struct and populate it with the variables set to the values of the arguments used in the function:
instanceof.htm+html.body.p:115-3,"{ANY_CODE} mystruct = new init_struct(10, 100, ""Hello World"");"
instanceof.htm+html.body.p:116-3,We can then get the name of the function that was used like this:
instanceof.htm+html.body.p:117-3,{ANY_CODE} var _name = instanceof(mystruct);<br /> if is_string(_name)<br /> {nbsp_x4}{ <br /> {nbsp_x4}show_debug_message(_name); <br /> {nbsp_x4}}
instanceof.htm+html.body.div.div.div.div:127-9,"Back: <a href=""Variable_Functions.htm"">Variable Functions</a>"
instanceof.htm+html.body.div.div.div.div:128-9,"Next: <a href=""array_create.htm"">array_create</a>"
instanceof.htm+html.body.p:140-1,{SEARCH_RESULT} Page explaining the function instanceof
instanceof.htm+html.body.p:140-63,{INDEX_KEYWORD} instanceof
