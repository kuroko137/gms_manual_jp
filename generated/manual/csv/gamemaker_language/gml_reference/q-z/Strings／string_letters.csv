string_letters.htm+html.head.title:55-3,string_letters
string_letters.htm+html.head.title:59-3,string_letters
string_letters.htm+html.body.div.div.div[title]:73-7,string_letters
string_letters.htm+html.body.div.div.div:73-7,string_letters
string_letters.htm+html.body.h1:86-3,string_letters
string_letters.htm+html.body.p:87-3,"With this function you can remove all characters that are not classed as letters. This is handy for preventing people from entering unwanted characters into a text entry (like entering ""#"" to force a new line)."
string_letters.htm+html.body.p:88-3,NOTE: This function only detects and returns the 26 letter English alphabet from A - Z (upper or lower case).
string_letters.htm+html.body.h4:90-3,Syntax:
string_letters.htm+html.body.p:91-3,string_letters(string);
string_letters.htm+html.body.table.tbody.tr.th:95-9,Argument
string_letters.htm+html.body.table.tbody.tr.th:96-9,Description
string_letters.htm+html.body.table.tbody.tr.td:99-9,string
string_letters.htm+html.body.table.tbody.tr.td:100-9,The string to convert to letters.
string_letters.htm+html.body.h4:105-3,Returns:
string_letters.htm+html.body.p:106-3,String
string_letters.htm+html.body.h4:108-3,Example:
string_letters.htm+html.body.p:109-3,{ANY_CODE} username = string_letters(username);
string_letters.htm+html.body.p:110-3,"The above code will set the ""username"" variable to only hold the <i>letter</i> characters of the original string (id the original string was ""MacSw33ny"" the returned string would be ""MacSwny"")."
string_letters.htm+html.body.div.div.div.div:117-9,"Back: <a href=""Strings.htm"">Strings</a>"
string_letters.htm+html.body.div.div.div.div:118-9,"Next: <a href=""string_lettersdigits.htm"">string_lettersdigits</a>"
string_letters.htm+html.body.p:130-1,{SEARCH_RESULT} Reference page for string_letters
