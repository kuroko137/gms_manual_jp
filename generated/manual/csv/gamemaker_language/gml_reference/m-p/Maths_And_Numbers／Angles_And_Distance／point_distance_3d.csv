point_distance_3d.htm+html.head.title:55-3,point_distance_3d
point_distance_3d.htm+html.head.title:63-3,point_distance_3d
point_distance_3d.htm+html.body.div.div.div[title]:77-7,point_distance_3d
point_distance_3d.htm+html.body.div.div.div:77-7,point_distance_3d
point_distance_3d.htm+html.body.h1:94-3,point_distance_3d
point_distance_3d.htm+html.body.p:95-3,"This function takes the supplied components of the vector and returns the length (distance) of the vector. It works in exactly the same way as <a href=""point_distance.htm""><tt>point_distance()</tt></a> but with the addition of factoring in the z value (depth) for use in 3D space."
point_distance_3d.htm+html.body.h4:98-3,Syntax:
point_distance_3d.htm+html.body.p:99-3,"{ANY_CODE} point_distance_3d(x1, y1, z1, x2, y2, z2);"
point_distance_3d.htm+html.body.table.tbody.tr.th:103-9,Argument
point_distance_3d.htm+html.body.table.tbody.tr.th:104-9,Description
point_distance_3d.htm+html.body.table.tbody.tr.td:107-9,x1
point_distance_3d.htm+html.body.table.tbody.tr.td:108-9,The x coordinate of the first component of the vector
point_distance_3d.htm+html.body.table.tbody.tr.td:111-9,y1
point_distance_3d.htm+html.body.table.tbody.tr.td:112-9,The y coordinate of the first component of the vector
point_distance_3d.htm+html.body.table.tbody.tr.td:115-9,z1
point_distance_3d.htm+html.body.table.tbody.tr.td:116-9,The z coordinate of the first component of the vector
point_distance_3d.htm+html.body.table.tbody.tr.td:119-9,x2
point_distance_3d.htm+html.body.table.tbody.tr.td:120-9,The x coordinate of the second component of the vector
point_distance_3d.htm+html.body.table.tbody.tr.td:123-9,y2
point_distance_3d.htm+html.body.table.tbody.tr.td:124-9,The y coordinate of the second component of the vector
point_distance_3d.htm+html.body.table.tbody.tr.td:127-9,z2
point_distance_3d.htm+html.body.table.tbody.tr.td:128-9,The z coordinate of the second component of the vector
point_distance_3d.htm+html.body.h4:133-3,Returns:
point_distance_3d.htm+html.body.p:134-3,Real
point_distance_3d.htm+html.body.h4:136-3,Example:
point_distance_3d.htm+html.body.p:137-3,"{ANY_CODE} var inst, ex, ey, ez;<br /> inst = instance_nearest(x, y, enemy);<br /> if inst<br /> {nbsp_x4}{ <br /> {nbsp_x4}ex = inst.x;<br /> {nbsp_x4}ey = inst.y;<br /> {nbsp_x4}ez = inst.z;<br /> {nbsp_x4}if point_distance_3d(x, y, z, ex, ey, ez) &lt; 200<br /> {nbsp_x8}{ <br /> {nbsp_x8}instance_create_layer(x, y, ""Bullets"", obj_Missile)<br /> {nbsp_x8}} <br /> {nbsp_x4}}"
point_distance_3d.htm+html.body.p:142-3,"The above code will get the x and y and z coordinates of the nearest enemy and then use them to check the distance (length) of the vector formed by them and the player coordinates. If the value is less than 200, the player object will create an instance of ""obj_Missile""."
point_distance_3d.htm+html.body.div.div.div.div:150-9,"Back: <a href=""Angles_And_Distance.htm"">Angles And Distance</a>"
point_distance_3d.htm+html.body.div.div.div.div:151-9,"Next: <a href=""distance_to_object.htm"">distance_to_object</a>"
point_distance_3d.htm+html.body.p:163-1,{SEARCH_RESULT} Reference page for point_distance_3d
