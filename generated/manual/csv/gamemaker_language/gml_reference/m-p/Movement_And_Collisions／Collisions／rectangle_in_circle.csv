rectangle_in_circle.htm+html.head.title:55-3,rectangle_in_circle
rectangle_in_circle.htm+html.head.title:59-3,rectangle_in_circle
rectangle_in_circle.htm+html.body.div.div.div[title]:73-7,rectangle_in_circle
rectangle_in_circle.htm+html.body.div.div.div:73-7,rectangle_in_circle
rectangle_in_circle.htm+html.body.h1:86-3,rectangle_in_circle
rectangle_in_circle.htm+html.body.p:87-3,"This function will check a rectangular area that you define to see if it is either not in collision, completely within the destination bounds, or if it is simply touching, a defined circular area. If they are not touching at all the function will return 0, if the source is completely within the destination it will return 1, and if they are simply overlapping then it will return 2. The image below illustrates this:"
rectangle_in_circle.htm+html.body.p.img[alt]:89-6,{IMG_TXT} Rectangle circle collision example
rectangle_in_circle.htm+html.body.h4:91-3,Syntax:
rectangle_in_circle.htm+html.body.p:92-3,"rectangle_in_circle(sx1, sy1, sx2, sy2, x, y, rad);"
rectangle_in_circle.htm+html.body.table.tbody.tr.th:96-9,Argument
rectangle_in_circle.htm+html.body.table.tbody.tr.th:97-9,Description
rectangle_in_circle.htm+html.body.table.tbody.tr.td:100-9,sx1
rectangle_in_circle.htm+html.body.table.tbody.tr.td:101-9,The x coordinate of the left side of the source rectangle.
rectangle_in_circle.htm+html.body.table.tbody.tr.td:104-9,sy1
rectangle_in_circle.htm+html.body.table.tbody.tr.td:105-9,The y coordinate of the top side of the source rectangle.
rectangle_in_circle.htm+html.body.table.tbody.tr.td:108-9,sx2
rectangle_in_circle.htm+html.body.table.tbody.tr.td:109-9,The x coordinate of the right side of the source rectangle.
rectangle_in_circle.htm+html.body.table.tbody.tr.td:112-9,sy2
rectangle_in_circle.htm+html.body.table.tbody.tr.td:113-9,The y coordinate of the bottom side of the source rectangle.
rectangle_in_circle.htm+html.body.table.tbody.tr.td:116-9,x
rectangle_in_circle.htm+html.body.table.tbody.tr.td:117-9,The x coordinate of the centre of the circle
rectangle_in_circle.htm+html.body.table.tbody.tr.td:120-9,y
rectangle_in_circle.htm+html.body.table.tbody.tr.td:121-9,The y coordinate of the centre of the circle.
rectangle_in_circle.htm+html.body.table.tbody.tr.td:124-9,rad
rectangle_in_circle.htm+html.body.table.tbody.tr.td:125-9,The radius around the center point in which to check for a collision.
rectangle_in_circle.htm+html.body.h4:130-3,Returns:
rectangle_in_circle.htm+html.body.p:131-3,Real
rectangle_in_circle.htm+html.body.h4:133-3,Example:
rectangle_in_circle.htm+html.body.p:134-3,"{ANY_CODE} inst = instance_nearest(x, y, obj_Bullet);<br /> if instance_exists(inst)<br /> {nbsp_x3}{ <br /> {nbsp_x3}if rectangle_in_circle(inst.x - 5, inst.y - 5, inst.x + 5, inst.y + 5, x, y - 25, 20) &gt; 0<br /> {nbsp_x6}{ <br /> {nbsp_x6}hit = true;<br /> {nbsp_x6}} <br /> {nbsp_x3}}"
rectangle_in_circle.htm+html.body.p:139-3,The above code uses the <tt>rectangle_in_circle</tt> function to check for a collision within a circular area and the rectangle around a found instance. If there is a collision (either an edge overlap or encompassed) then a variable will be set to <tt>true</tt>.
rectangle_in_circle.htm+html.body.div.div.div.div:146-9,"Back: <a href=""Collisions.htm"">Collisions</a>"
rectangle_in_circle.htm+html.body.div.div.div.div:147-9,"Next: <a href=""place_empty.htm"">place_empty</a>"
rectangle_in_circle.htm+html.body.p:159-1,{SEARCH_RESULT} Page that gives an overview of the funtion rectangle_in_circle
