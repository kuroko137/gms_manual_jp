place_empty.htm+html.head.title:55-3,place_empty
place_empty.htm+html.head.title:59-3,place_empty
place_empty.htm+html.body.div.div.div[title]:73-7,place_empty
place_empty.htm+html.body.div.div.div:73-7,place_empty
place_empty.htm+html.body.h1:86-3,place_empty
place_empty.htm+html.body.p:87-3,"You can use this function to check and see if the calling instance would collide with <i>any other instance</i> of an object or all instances in your game. For this to collision to resolve correctly, the instance running the code must have a valid collision mask (either for the sprite itself, or through the <a href=""../../Asset_Management/Sprites/Sprite_Instance_Variables/mask_index.htm""><tt>mask_index</tt></a>) and it will only register collisions with those instances that also have a valid mask."
place_empty.htm+html.body.p:89-3,"The function is testing if there are no collisions should the calling instance be placed at a specific position, and you can supply an optional argument to refine the check to only check if a position is free of collisions with instances of the given type. Note that if no optional object ID is supplied, the check will be done against <i>all</i> instances within the room. The collision checking will be either precise or based on the bounding box of the instance, depending on what kind of collision mask has been selected, but for precise collisions to work correctly, all instances in the check should have precise collision masks."
place_empty.htm+html.body.p:92-3,Note that the given x/y coordinates will be floored to the nearest integer before the check is performed.
place_empty.htm+html.body.h4:94-3,Syntax:
place_empty.htm+html.body.p:95-3,"place_empty(x, y, [object_id]);"
place_empty.htm+html.body.table.tbody.tr.th:99-9,Argument
place_empty.htm+html.body.table.tbody.tr.th:100-9,Description
place_empty.htm+html.body.table.tbody.tr.td:103-9,x
place_empty.htm+html.body.table.tbody.tr.td:104-9,The x position to check.
place_empty.htm+html.body.table.tbody.tr.td:107-9,y
place_empty.htm+html.body.table.tbody.tr.td:108-9,The y position to check.
place_empty.htm+html.body.table.tbody.tr.td:111-9,[object_id]
place_empty.htm+html.body.table.tbody.tr.td:112-9,Optional! The object to check against.
place_empty.htm+html.body.h4:117-3,Returns:
place_empty.htm+html.body.p:118-3,Boolean
place_empty.htm+html.body.h4:120-3,Example:
place_empty.htm+html.body.p:121-3,"{ANY_CODE} if place_empty(mouse_x, mouse_y, obj_Enemy)<br /> {nbsp_x3}{ <br /> {nbsp_x3}x = mouse_x;<br /> {nbsp_x3}y = mouse_y;<br /> {nbsp_x3}}"
place_empty.htm+html.body.p:124-3,"The above code will check for a collision with any other instance of the object ""obj_Enemy"", as if the calling instance were to be placed at the same position as the mouse. If there is no collision detected, then the instance has its x/y coordinates set to those of the mouse."
place_empty.htm+html.body.div.div.div.div:132-9,"Back: <a href=""Collisions.htm"">Collisions</a>"
place_empty.htm+html.body.div.div.div.div:133-9,"Next: <a href=""place_free.htm"">place_free</a>"
place_empty.htm+html.body.p:145-1,{SEARCH_RESULT} Page that gives an overview of the funtion place_empty
