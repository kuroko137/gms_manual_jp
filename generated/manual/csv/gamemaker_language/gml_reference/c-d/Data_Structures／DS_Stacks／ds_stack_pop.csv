ds_stack_pop.htm+html.head.title:55-3,ds_stack_pop
ds_stack_pop.htm+html.head.title:59-3,ds_stack_pop
ds_stack_pop.htm+html.body.div.div.div[title]:73-7,ds_stack_pop
ds_stack_pop.htm+html.body.div.div.div:73-7,ds_stack_pop
ds_stack_pop.htm+html.body.h1:86-3,ds_stack_pop
ds_stack_pop.htm+html.body.p:87-3,"This function will <i>pop</i> the top value off of the DS stack , removing it from the stack and returning the value to be stored in a variable. If the stack is empty then the function will return the constant <tt>undefined</tt>, otherwise it will return the real or string value contained in the stack."
ds_stack_pop.htm+html.body.h4:90-3,Syntax:
ds_stack_pop.htm+html.body.p:91-3,ds_stack_pop(id);
ds_stack_pop.htm+html.body.table.tbody.tr.th:95-9,Argument
ds_stack_pop.htm+html.body.table.tbody.tr.th:96-9,Description
ds_stack_pop.htm+html.body.table.tbody.tr.td:99-9,id
ds_stack_pop.htm+html.body.table.tbody.tr.td:100-9,The id of the data structure to pop from.
ds_stack_pop.htm+html.body.h4:105-3,Returns:
ds_stack_pop.htm+html.body.p:106-3,Data type value that is stored in the stack or undefined
ds_stack_pop.htm+html.body.h4:108-3,Example:
ds_stack_pop.htm+html.body.p:109-3,"{ANY_CODE} if !ds_stack_empty(move_stack)<br /> {nbsp_x4}{ <br /> {nbsp_x1} {nbsp_x1} var xx = ds_stack_pop(move_stack);<br /> {nbsp_x1} {nbsp_x1} var{nbsp_x1}yy = ds_stack_pop(move_stack);<br /> {nbsp_x4}move_towards_point(xx, yy, 4);<br /> {nbsp_x4}}"
ds_stack_pop.htm+html.body.p:112-3,"The above code checks the DS stack indexed in the variable ""move_stack"" to see if it is empty, and if it is not, it then pops the top two values from the stack and use them to set a direction for movement."
ds_stack_pop.htm+html.body.div.div.div.div:119-9,"Back: <a href=""ds_stack_create.htm"">ds_stack_create</a>"
ds_stack_pop.htm+html.body.div.div.div.div:120-9,"Next: <a href=""ds_stack_push.htm"">ds_stack_push</a>"
ds_stack_pop.htm+html.body.p:132-1,{SEARCH_RESULT} Reference page for ds_stack_pop
