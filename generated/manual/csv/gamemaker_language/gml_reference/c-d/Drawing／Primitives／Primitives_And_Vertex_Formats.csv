Primitives_And_Vertex_Formats.htm+html.head.title:55-3,Primitives And Vertex Formats
Primitives_And_Vertex_Formats.htm+html.head.title:59-3,Primitives And Vertex Formats
Primitives_And_Vertex_Formats.htm+html.body.div.div.div[title]:73-7,Primitives And Vertex Formats
Primitives_And_Vertex_Formats.htm+html.body.div.div.div:73-7,Primitives And Vertex Formats
Primitives_And_Vertex_Formats.htm+html.body.h1:86-3,Primitives And Vertex Formats
Primitives_And_Vertex_Formats.htm+html.body.p:87-3,"A primitive is a type of drawing done using points to define what is shown on the screen. They can be made up of single points, lines, or triangles and can be coloured, have alpha blending and even be given a texture, which means that they can be used to create some very exciting effects in a 2D game! For example, you can create a rectangle using multiple triangle primitives, then texture it with a flag sprite and in the draw event of an instance have that flag ""wave"" in the wind and distort the sprite you used by simply modifying the points that form the primitive."
Primitives_And_Vertex_Formats.htm+html.body.p:90-3,"<b>WARNING! </b>These functions do not work with the HTML5 module unless you have enabled OpenGL in the <a href=""../../../../Settings/Game_Options/HTML5.htm"">Game Options</a>."
Primitives_And_Vertex_Formats.htm+html.body.p:91-3,Information on drawing primitives can be found on the following pages:
Primitives_And_Vertex_Formats.htm+html.body.ul.li:94-5,draw_primitive_begin
Primitives_And_Vertex_Formats.htm+html.body.ul.li:95-5,draw_primitive_begin_texture
Primitives_And_Vertex_Formats.htm+html.body.ul.li:96-5,draw_primitive_end
Primitives_And_Vertex_Formats.htm+html.body.ul.li:97-5,draw_vertex
Primitives_And_Vertex_Formats.htm+html.body.ul.li:98-5,draw_vertex_colour
Primitives_And_Vertex_Formats.htm+html.body.ul.li:99-5,draw_vertex_texture
Primitives_And_Vertex_Formats.htm+html.body.ul.li:100-5,draw_vertex_texture_colour
Primitives_And_Vertex_Formats.htm+html.body.p:103-3,GameMaker Studio 2 permits you to define your own <strong>vertex formats</strong> from which you can create your own custom primitives. This can greatly speed up shader operations or can be used to extend their capabilities and create surprising effects. You can find information on this in the following sections:
Primitives_And_Vertex_Formats.htm+html.body.ul.li:107-5,vertex_format_begin
Primitives_And_Vertex_Formats.htm+html.body.ul.li:108-5,vertex_format_add_colour
Primitives_And_Vertex_Formats.htm+html.body.ul.li:109-5,vertex_format_add_position
Primitives_And_Vertex_Formats.htm+html.body.ul.li:110-5,vertex_format_add_position_3d
Primitives_And_Vertex_Formats.htm+html.body.ul.li:111-5,vertex_format_add_texcoord
Primitives_And_Vertex_Formats.htm+html.body.ul.li:112-5,vertex_format_add_normal
Primitives_And_Vertex_Formats.htm+html.body.ul.li:113-5,vertex_format_add_custom
Primitives_And_Vertex_Formats.htm+html.body.ul.li:114-5,vertex_format_end
Primitives_And_Vertex_Formats.htm+html.body.ul.li:115-5,vertex_format_delete
Primitives_And_Vertex_Formats.htm+html.body.p:118-3,Once you have created your vertex format (see the section above) you can then use it to build the primitives that you want to draw using the following veretx buffer functions:
Primitives_And_Vertex_Formats.htm+html.body.ul.li:121-5,vertex_create_buffer
Primitives_And_Vertex_Formats.htm+html.body.ul.li:122-5,vertex_create_buffer_ext
Primitives_And_Vertex_Formats.htm+html.body.ul.li:123-5,vertex_create_buffer_from_buffer
Primitives_And_Vertex_Formats.htm+html.body.ul.li:124-5,vertex_create_buffer_from_buffer_ext
Primitives_And_Vertex_Formats.htm+html.body.ul.li:125-5,vertex_get_buffer_size
Primitives_And_Vertex_Formats.htm+html.body.ul.li:126-5,vertex_get_number
Primitives_And_Vertex_Formats.htm+html.body.ul.li:127-5,vertex_delete_buffer
Primitives_And_Vertex_Formats.htm+html.body.ul.li:128-5,vertex_begin
Primitives_And_Vertex_Formats.htm+html.body.ul.li:129-5,vertex_colour
Primitives_And_Vertex_Formats.htm+html.body.ul.li:130-5,vertex_normal
Primitives_And_Vertex_Formats.htm+html.body.ul.li:131-5,vertex_position
Primitives_And_Vertex_Formats.htm+html.body.ul.li:132-5,vertex_position_3d
Primitives_And_Vertex_Formats.htm+html.body.ul.li:133-5,vertex_argb
Primitives_And_Vertex_Formats.htm+html.body.ul.li:134-5,vertex_texcoord
Primitives_And_Vertex_Formats.htm+html.body.ul.li:135-5,vertex_float1
Primitives_And_Vertex_Formats.htm+html.body.ul.li:136-5,vertex_float2
Primitives_And_Vertex_Formats.htm+html.body.ul.li:137-5,vertex_float3
Primitives_And_Vertex_Formats.htm+html.body.ul.li:138-5,vertex_float4
Primitives_And_Vertex_Formats.htm+html.body.ul.li:139-5,vertex_ubyte4
Primitives_And_Vertex_Formats.htm+html.body.ul.li:140-5,vertex_end
Primitives_And_Vertex_Formats.htm+html.body.ul.li:141-5,vertex_freeze
Primitives_And_Vertex_Formats.htm+html.body.ul.li:142-5,vertex_submit
Primitives_And_Vertex_Formats.htm+html.body.p:145-3,"<b>IMPORTANT!</b> The primitives that you build should follow the format that you have set using the Vertex Format functions, so if you have defined a vertex format with only positional data, there is no point building your primitive with colour data. You should note that the order in which you add properties to the primitive you are building is defined by the order in which you added these properties when creating the vertex format, so if you have defined the vector format with the order position, colour and texture coordinate, you <i>must</i> add these properties to the primitive being built in the same order otherwise you will get errors."
Primitives_And_Vertex_Formats.htm+html.body.p:148-3,"For an overview of how to build primitives using the vertex functions, see:"
Primitives_And_Vertex_Formats.htm+html.body.ul.li:150-5,Guide To Primitives And Vertex Building
Primitives_And_Vertex_Formats.htm+html.body.div.div.div.div:158-9,"Back: <a href=""../Drawing.htm"">Drawing</a>"
Primitives_And_Vertex_Formats.htm+html.body.div.div.div.div:159-9,"Next: <a href=""../Surfaces/Surfaces.htm"">Surfaces</a>"
Primitives_And_Vertex_Formats.htm+html.body.p:171-1,{SEARCH_RESULT} Reference section for the Primitive And Vertex Format functions and variables
