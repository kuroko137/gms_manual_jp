ds_list_destroy.htm+html.head.title:55-3,ds_list_destroy
ds_list_destroy.htm+html.head.title:59-3,ds_list_destroy
ds_list_destroy.htm+html.body.div.div.div[title]:73-7,ds_list_destroy
ds_list_destroy.htm+html.body.div.div.div:73-7,ds_list_destroy
ds_list_destroy.htm+html.body.h1:86-3,ds_list_destroy
ds_list_destroy.htm+html.body.p:87-3,"This function will remove the given list data-structure from memory, freeing up the resources it was using and removing all values that it contained. This function should always be used when you are finished using the ds_list to prevent memory leaks that can slow down and crash your game. Note that destroying a list will de-reference any data structures stored in it giving a memory leak, so you would need to go through the list and destroy all data structure items manually before destroying it to prevent this. The only time this is not required is when you have flagged any items in the list as another <a href=""DS_Lists.htm"">DS list</a> or as a <a href=""../DS_Maps/DS_Maps.htm"">DS map</a>, in which case these items will be destroyed and their memory cleaned up automatically as well."
ds_list_destroy.htm+html.body.p:91-3,"<b>IMPORTANT!</b> When you create a data structure, the index value to identify it is an integer value starting at 0. This means that data structures of different types can have the <b>same</b> index value, so if in doubt you should be using the <span style=""font-size:1px;""><a href=""../ds_exists.htm""><tt style=""font-size: 14px"">ds_exists()</tt></a></span> function before accessing them. Also note that indices are re-used, so a destroyed data structure index value may be used by a newly created one afterwards so we recommend always setting the variable that held the DS index to -1 after destroying."
ds_list_destroy.htm+html.body.h4:95-3,Syntax:
ds_list_destroy.htm+html.body.p:96-3,ds_list_destroy(id);
ds_list_destroy.htm+html.body.table.tbody.tr.th:100-9,Argument
ds_list_destroy.htm+html.body.table.tbody.tr.th:101-9,Description
ds_list_destroy.htm+html.body.table.tbody.tr.td:104-9,id
ds_list_destroy.htm+html.body.table.tbody.tr.td:105-9,The id of the data structure to remove.
ds_list_destroy.htm+html.body.h4:110-3,Returns:
ds_list_destroy.htm+html.body.p:111-3,N/A
ds_list_destroy.htm+html.body.h4:113-3,Example:
ds_list_destroy.htm+html.body.p:114-3,{ANY_CODE} if (lives == 0)<br /> {nbsp_x4}{ <br /> {nbsp_x4}ds_list_destroy(AI_list); <br /> {nbsp_x4}AI_list = -1;<br /> {nbsp_x4}room_goto(rm_Menu); <br /> {nbsp_x4}}
ds_list_destroy.htm+html.body.p:119-3,"The above code will check the value of the built in global variable ""lives"" and if it is 0, it destroys the DS list indexed in the variable ""AI_list"" and then changes rooms."
ds_list_destroy.htm+html.body.div.div.div.div:126-9,"Back: <a href=""DS_Lists.htm"">DS Lists</a>"
ds_list_destroy.htm+html.body.div.div.div.div:127-9,"Next: <a href=""ds_list_clear.htm"">ds_list_clear</a>"
ds_list_destroy.htm+html.body.p:139-1,{SEARCH_RESULT} Reference page for ds_list_destroy
