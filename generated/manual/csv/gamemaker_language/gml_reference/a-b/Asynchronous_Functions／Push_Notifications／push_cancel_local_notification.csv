push_cancel_local_notification.htm+html.head.title:55-3,push_cancel_local_notification
push_cancel_local_notification.htm+html.head.title:59-3,push_cancel_local_notification
push_cancel_local_notification.htm+html.body.div.div.div[title]:73-7,push_cancel_local_notification
push_cancel_local_notification.htm+html.body.div.div.div:73-7,push_cancel_local_notification
push_cancel_local_notification.htm+html.body.h1:86-3,push_cancel_local_notification
push_cancel_local_notification.htm+html.body.p:87-3,"This function cancels the given push notification. You can get the ID for the notification to cancel using the functions <a href=""push_get_first_local_notification.htm""><tt>push_get_first_local_notification()</tt></a> and <a href=""push_get_next_local_notification.htm""><tt>push_get_next_local_notification()</tt></a> and the function will return <tt>true</tt> on success or <tt>false</tt> otherwise (for example if the notification does not exist or has already been triggered)."
push_cancel_local_notification.htm+html.body.p:88-3,<b>NOTE</b>: This function is limited to the <b>iOS</b> and <b>Android</b> target modules.
push_cancel_local_notification.htm+html.body.h4:90-3,Syntax:
push_cancel_local_notification.htm+html.body.p:91-3,push_cancel_local_notification(ID);
push_cancel_local_notification.htm+html.body.table.tbody.tr.th:95-9,Argument
push_cancel_local_notification.htm+html.body.table.tbody.tr.th:96-9,Description
push_cancel_local_notification.htm+html.body.table.tbody.tr.td:99-9,ID
push_cancel_local_notification.htm+html.body.table.tbody.tr.td:100-9,The ID of the notification to cancel.
push_cancel_local_notification.htm+html.body.h4:105-3,Returns:
push_cancel_local_notification.htm+html.body.p:106-3,Real
push_cancel_local_notification.htm+html.body.h4:108-3,Example :
push_cancel_local_notification.htm+html.body.p:109-3,"{ANY_CODE} var map = ds_map_create();<br /> var ntf = push_get_first_local_notification(map);<br /> while(ntf &gt;= 0)<br /> {nbsp_x4}{ <br /> {nbsp_x4}var data = ds_map_find_value(map, ""data"");<br /> {nbsp_x4}if data == ""Daily_Reward""<br /> {nbsp_x8}{ <br /> {nbsp_x8}push_cancel_local_notification(ntf); <br /> {nbsp_x8}} <br /> {nbsp_x4}ntf = push_get_next_local_notification(map);<br /> {nbsp_x4}} <br /> ds_map_destroy(map);"
push_cancel_local_notification.htm+html.body.p:116-3,"The above code creates a <tt>DS Map</tt> and then requests data for the first available notification in the queue. If a notification exists, the map is populated and the code then checks the ""data"" key for a specific string. If the string is found, the notification is canceled and moves on to check the next notification until all in the queue have been checked."
push_cancel_local_notification.htm+html.body.div.div.div.div:124-9,"Back: <a href=""Push_Notifications.htm"">Push Notifications</a>"
push_cancel_local_notification.htm+html.body.div.div.div.div:125-9,"Next: <a href=""push_local_notification.htm"">push_local_notification</a>"
push_cancel_local_notification.htm+html.body.p:137-1,{SEARCH_RESULT} Reference page for push_cancel_local_notification
