path_delete_point.htm+html.head.title:55-3,path_delete_point
path_delete_point.htm+html.head.title:59-3,path_delete_point
path_delete_point.htm+html.body.div.div.div[title]:73-7,path_delete_point
path_delete_point.htm+html.body.div.div.div:73-7,path_delete_point
path_delete_point.htm+html.body.h1:86-3,path_delete_point
path_delete_point.htm+html.body.p:87-3,"With this function you can remove a point from the specified path. Path points are numbered from 0 so the first point is always the 0th point and the last path point will be <a href=""../path_get_number.htm""><tt>path_get_number()</tt></a> - 1. If you call this function on a path asset, <strong>then the removal of the point will be permanent</strong> and all instances assigned the path in the future will be missing the point that was removed. If this is not what you require, then you should use a function like <span class=""inline""><a href=""path_duplicate.htm"">path_duplicate()</a></span> to create a copy of the path first, then call this function on the duplicated asset (don't forget to call <span class=""inline""><a href=""path_delete.htm"">path_delete()</a></span> on the asset when it is no longer required)."
path_delete_point.htm+html.body.h4:91-3,Syntax:
path_delete_point.htm+html.body.p:92-3,"path_delete_point(ind, n);"
path_delete_point.htm+html.body.table.tbody.tr.th:96-9,Argument
path_delete_point.htm+html.body.table.tbody.tr.th:97-9,Description
path_delete_point.htm+html.body.table.tbody.tr.td:100-9,index
path_delete_point.htm+html.body.table.tbody.tr.td:101-9,The index of the path to delete a point from.
path_delete_point.htm+html.body.table.tbody.tr.td:104-9,n
path_delete_point.htm+html.body.table.tbody.tr.td:105-9,The defining point to delete.
path_delete_point.htm+html.body.h4:110-3,Returns:
path_delete_point.htm+html.body.p:111-3,N/A
path_delete_point.htm+html.body.h4:113-3,Example:
path_delete_point.htm+html.body.p:114-3,"{ANY_CODE} var _col = true;<br /> while (_col)<br /> { <br /> var _num ={nbsp_x1}path_get_number(mypath) - 1;<br /> if (_num &gt; 2)<br /> {nbsp_x1} {nbsp_x1} {<br /> {nbsp_x4}var _x1{nbsp_x1}= path_get_point_x(my_path, _num);<br /> {nbsp_x4}var _y1{nbsp_x1}= path_get_point_y(my_path, _num);<br /> {nbsp_x1} {nbsp_x1} var _x2 = path_get_point_x(my_path, _num -1);<br /> {nbsp_x1} var _y2 = path_get_point_y(my_path, _num -1);<br /> {nbsp_x1} {nbsp_x1} if collision_line(_x1, _y1, _x2, _y2, obj_Wall, true, false)<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} {<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x2}path_delete_point(mypath, _num);<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} _num -= 1;<br /> {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1} }<br /> {nbsp_x1} {nbsp_x1} else _col = false;<br /> {nbsp_x1} }<br /> else _col = false;<br /> }"
path_delete_point.htm+html.body.p:119-3,"The above code generates a loop that checks the points on a backwards from the end for a collision with the given object. If a collision is found, a path point is deleted, until there is no collision, or the path is only 2 points long."
path_delete_point.htm+html.body.div.div.div.div:126-9,"Back: <a href=""Path_Manipulation.htm"">Path Manipulation</a>"
path_delete_point.htm+html.body.div.div.div.div:127-9,"Next: <a href=""path_clear_points.htm"">path_clear_points</a>"
path_delete_point.htm+html.body.p:140-1,{SEARCH_RESULT} Page explaining the function path_delete_point
