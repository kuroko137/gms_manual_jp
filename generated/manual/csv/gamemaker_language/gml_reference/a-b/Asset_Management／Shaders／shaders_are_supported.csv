shaders_are_supported.htm+html.head.title:55-3,shaders_are_supported
shaders_are_supported.htm+html.head.title:59-3,shaders_are_supported
shaders_are_supported.htm+html.body.div.div.div[title]:73-7,shaders_are_supported
shaders_are_supported.htm+html.body.div.div.div:73-7,shaders_are_supported
shaders_are_supported.htm+html.body.h1:86-3,shaders_are_supported
shaders_are_supported.htm+html.body.p:87-3,"This function will do a check to see if the chosen target platform supports shaders, returning <tt>true</tt> if they do, and <tt>false</tt> if they do not. It is important to note that on <b>Android</b>, if the project does not have any shader resources defined, then the function will <i>always return <tt>false</tt></i>, regardless of whether the device supports shaders or not."
shaders_are_supported.htm+html.body.h4:90-3,Syntax:
shaders_are_supported.htm+html.body.p:91-3,shaders_are_supported();
shaders_are_supported.htm+html.body.h4:93-3,Returns:
shaders_are_supported.htm+html.body.p:94-3,Boolean
shaders_are_supported.htm+html.body.h4:96-3,Example:
shaders_are_supported.htm+html.body.p:97-3,{ANY_CODE} global.GFX = false;<br /> if shaders_are_supported()<br /> {nbsp_x4}{ <br /> {nbsp_x4}if shader_is_compiled(sh_glass) &amp;&amp; shader_is_compiled(sh_warp)<br /> {nbsp_x8}{ <br /> {nbsp_x8}global.GFX = true;<br /> {nbsp_x8}} <br /> {nbsp_x4}}
shaders_are_supported.htm+html.body.p:102-3,"The above code will set a global variable to <tt>false</tt>, and then if the platform supports shaders and both the shaders being checked have compiled correctly, it will be set to <tt>true</tt>."
shaders_are_supported.htm+html.body.div.div.div.div:109-9,"Back: <a href=""Shaders.htm"">Shaders</a>"
shaders_are_supported.htm+html.body.div.div.div.div:110-9,"Next: <a href=""shader_current.htm"">shader_current</a>"
shaders_are_supported.htm+html.body.p:122-1,{SEARCH_RESULT} Page outlining the function shaders_are_supported
