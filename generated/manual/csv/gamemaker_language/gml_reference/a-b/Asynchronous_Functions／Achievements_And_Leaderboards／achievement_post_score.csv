achievement_post_score.htm+html.head.title:55-3,achievement_post_score
achievement_post_score.htm+html.head.title:59-3,achievement_post_score
achievement_post_score.htm+html.body.div.div.div[title]:73-7,achievement_post_score
achievement_post_score.htm+html.body.div.div.div:73-7,achievement_post_score
achievement_post_score.htm+html.body.h1:86-3,achievement_post_score
achievement_post_score.htm+html.body.p:87-3,"You can use this function to send your score to the chosen leaderboard and achievement service. On Android, you send the ID of the score table as a string (this is the unique leaderboard ID that got assigned when you set up the leaderboard), while on all other platforms you supply the defined leaderboard name as a string, and then you give the actual score value. The function will trigger a <a href=""../../../../The_Asset_Editors/Object_Properties/Async_Events/Social.htm"">Social Asynchronous Event</a> where the returned <a href=""../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm""><tt>async_load</tt></a> DS map will have the following key/value pairs:"
achievement_post_score.htm+html.body.ul.li:90-5,"""<b>type</b>"" - This is the type of event that has been fired, which will be the string ""<tt>achievement_post_score_result</tt>"" for this function."
achievement_post_score.htm+html.body.ul.li:91-5,"""<b>id</b>"" - This is the ID of the event, and, for this function, it will return a GML constant <tt>GooglePlayServices_EVENT_ID_POST_SCORE</tt>."
achievement_post_score.htm+html.body.ul.li:92-5,"""<b>leaderboard_id</b>"" - This is the unique ID of leaderboard that has been updated."
achievement_post_score.htm+html.body.ul.li:93-5,"""<b>status</b>"" - This will be 1 if the scores were updated successfully, or 0 if the request failed"
achievement_post_score.htm+html.body.ul.li:94-5,"""<b>daily_new_best</b>"" - This will be 1 if the score submitted was the user's best in the last day, or 0 otherwise."
achievement_post_score.htm+html.body.ul.li:95-5,"""<b>daily_best</b>"" - This will hold the user's top score from the last day of playing."
achievement_post_score.htm+html.body.ul.li:96-5,"""<b>weekly_new_best</b>"" - This will be 1 if the score submitted was the user's best in the last week, or 0 otherwise."
achievement_post_score.htm+html.body.ul.li:97-5,"""<b>weekly_best</b>"" - This holds the user's top score from the last week."
achievement_post_score.htm+html.body.ul.li:98-5,"""<b>all_time_new_best</b>"" - This will be 1 if the score submitted was the user's best of all time, or 0 otherwise."
achievement_post_score.htm+html.body.ul.li:99-5,"""<b>all_time_best</b>"" - This holds the user's top score of all time."
achievement_post_score.htm+html.body.h4:102-3,Syntax:
achievement_post_score.htm+html.body.p:103-3,"{ANY_CODE} achievement_post_score(leaderboard, score)"
achievement_post_score.htm+html.body.table.tbody.tr.th:107-9,Argument
achievement_post_score.htm+html.body.table.tbody.tr.th:108-9,Description
achievement_post_score.htm+html.body.table.tbody.tr.td:111-9,leaderboard
achievement_post_score.htm+html.body.table.tbody.tr.td:112-9,The name/ID of the leaderboard.
achievement_post_score.htm+html.body.table.tbody.tr.td:115-9,score
achievement_post_score.htm+html.body.table.tbody.tr.td:116-9,The score to be sent.
achievement_post_score.htm+html.body.h4:121-3,Returns:
achievement_post_score.htm+html.body.p:122-3,N/A
achievement_post_score.htm+html.body.h4:124-3,Extended Example:
achievement_post_score.htm+html.body.p:125-3,"{ANY_CODE} if achievement_available()<br /> {nbsp_x1} {nbsp_x1} {<br /> {nbsp_x1} {nbsp_x1} achievement_post_score(global.LeaderboardID, 1000);<br /> {nbsp_x1} {nbsp_x1} }"
achievement_post_score.htm+html.body.p:126-3,"The above code checks to see if the chosen leaderboard and achievement service is available and if so it posts a score to the score table called ""Leaderboard"". This will trigger a Social Async Event which can be parsed like this:"
achievement_post_score.htm+html.body.p:127-3,"{ANY_CODE} if async_load[? ""id""] == GooglePlayServices_EVENT_ID_POST_SCORE<br /> {nbsp_x4}{ <br /> {nbsp_x4}if async_load[? ""type""] == ""achievement_post_score_result""<br /> {nbsp_x8}{ <br /> {nbsp_x8}if async_load[? ""status""] == 1<br /> {nbsp_x12}{ <br /> {nbsp_x12}global.Best_Day = async_load[? ""daily_best""];<br /> {nbsp_x12}global.Best_Week = async_load[? ""weekly_best""];<br /> {nbsp_x12}global.Best = async_load[? ""all_time_best""];<br /> {nbsp_x12}} <br /> {nbsp_x8}} <br /> {nbsp_x4}}"
achievement_post_score.htm+html.body.p:134-3,"The above code checks the <tt>async_load</tt> DS map for the ""id"" and ""type"" keys that correspond to this function, and then it checks the status of the event. If the status is 1, then some values from the DS map are stored in global variables."
achievement_post_score.htm+html.body.div.div.div.div:142-9,"Back: <a href=""Achievements_And_Leaderboards.htm"">Achievements And Leaderboards</a>"
achievement_post_score.htm+html.body.div.div.div.div:143-9,"Next: <a href=""achievement_increment.htm"">achievement_increment</a>"
achievement_post_score.htm+html.body.p:155-1,{SEARCH_RESULT} Reference page for achievement_post_score
