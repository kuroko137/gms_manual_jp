buffer_create_from_vertex_buffer.htm+html.head.title:55-3,buffer_create_from_vertex_buffer
buffer_create_from_vertex_buffer.htm+html.head.title:59-3,buffer_create_from_vertex_buffer
buffer_create_from_vertex_buffer.htm+html.body.div.div.div[title]:73-7,buffer_create_from_vertex_buffer
buffer_create_from_vertex_buffer.htm+html.body.div.div.div:73-7,buffer_create_from_vertex_buffer
buffer_create_from_vertex_buffer.htm+html.body.h1:86-3,buffer_create_from_vertex_buffer
buffer_create_from_vertex_buffer.htm+html.body.p:87-3,"You use this function to allocate a portion of memory as a buffer in your game filled with the data from a previously created <a href=""../Drawing/Primitives/Primitives_And_Vertex_Formats.htm"">vertex buffer</a>. The function returns a unique <i>buffer id</i> that should be stored in a variable and used for all further function calls to the buffer. The function takes the id for the vertex buffer to use (as returned by the function <a href=""../Drawing/Primitives/vertex_create_buffer.htm""><tt>vertex_create_buffer()</tt></a>, for example) with the following constants being used to define the buffer type:"
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.th:93-9,Constant
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.th:94-9,Description
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:97-9,buffer_fixed
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:98-9,A buffer of fixed size.
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:101-9,buffer_grow
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:102-9,"A buffer that will ""grow"" dynamically as data is added"
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:105-9,buffer_wrap
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:106-9,"A buffer where the data will ""wrap"". When the data being added reaches the limit of the buffer size, the overwrite will be placed back at the start of the buffer, and further writing will continue from that point."
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:109-9,buffer_fast
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:110-9,"Special ""stripped"" buffer that is extremely fast to read/write to. Can only be used with <tt>buffer_u8</tt> <a href=""buffer_write.htm"">data types</a>, and <i>must</i> be 1 byte aligned."
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:113-9,buffer_vbuffer
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:114-9,This type of buffer is to be used as a vertex buffer only.
buffer_create_from_vertex_buffer.htm+html.body.p:119-3,"Apart from the buffer type, you will also have to set the <i>byte alignment</i> for the buffer. This value will vary depending on the data that you wish to store in the buffer, and in most cases a value of 1 is perfectly fine. However, be aware that for some operations a specific alignment is <i>essential</i>, and an incorrect alignment may cause errors (for further details on alignment see <a href=""../../../Additional_Information/Guide_To_Using_Buffers.htm"">Buffers</a>). The following is a general guide to show which values are most appropriate for each data type (when in doubt, use an alignment of 1):"
buffer_create_from_vertex_buffer.htm+html.body.ul.li:123-5,Strings should be aligned to 1 byte.
buffer_create_from_vertex_buffer.htm+html.body.ul.li:124-5,"Signed or unsigned 8bit integers can be aligned to any value, but note that for a fast buffer (see <a href=""buffer_write.htm""><tt>buffer_write()</tt></a>) it <i>must</i> be aligned to 1."
buffer_create_from_vertex_buffer.htm+html.body.ul.li:125-5,Signed or unsigned 16bit integers should be aligned to 2 bytes.
buffer_create_from_vertex_buffer.htm+html.body.ul.li:126-5,Signed or unsigned 32bit integers should be aligned to 4 bytes
buffer_create_from_vertex_buffer.htm+html.body.ul.li:127-5,Floats of up to 16bits should be aligned to 2 bytes. <i>(Not currently supported!)</i>
buffer_create_from_vertex_buffer.htm+html.body.ul.li:128-5,Floats of up to 32bits should be aligned to 4 bytes.
buffer_create_from_vertex_buffer.htm+html.body.ul.li:129-5,Floats of up to 64bits should be aligned to 8 bytes.
buffer_create_from_vertex_buffer.htm+html.body.p:131-3,"<b>NOTE</b>: Vertex buffers are 1 byte aligned, but you can create the buffer with any alignment depending on how you want to treat the data, as the vertex data is simply a raw memory copy into the buffer."
buffer_create_from_vertex_buffer.htm+html.body.p:132-3,"<b>NOTE</b>: It's important that you remove any dynamically created resources like this from memory when you no longer need them to prevent memory leaks, so when you are finished with the buffer that you have created you should free it up again using <span style=""font-size:1px;""><a href=""buffer_delete.htm""><tt style=""font-size: 14px"">buffer_delete()</tt></a></span>. Also note that the vertex buffer used to create the new buffer is not removed from memory either and you should use the function <span style=""font-size:1px;""><a href=""../Drawing/Primitives/vertex_delete_buffer.htm""><tt style=""font-size: 14px"">vertex_delete_buffer()</tt></a></span> when it is no longer required."
buffer_create_from_vertex_buffer.htm+html.body.h4:136-3,Syntax:
buffer_create_from_vertex_buffer.htm+html.body.p:137-3,"buffer_create_from_vertex_buffer(vertex_buffer, type, alignment)"
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.th:141-9,Argument
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.th:142-9,Description
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:145-9,vertex_buffer
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:146-9,The vertex buffer index to use.
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:149-9,type
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:150-9,The type of buffer to create (see the constants list above).
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:153-9,alignment
buffer_create_from_vertex_buffer.htm+html.body.table.tbody.tr.td:154-9,The byte alignment for the buffer
buffer_create_from_vertex_buffer.htm+html.body.h4:159-3,Returns:
buffer_create_from_vertex_buffer.htm+html.body.p:160-3,Int (Vertex buffer ID)
buffer_create_from_vertex_buffer.htm+html.body.h4:162-3,Example:
buffer_create_from_vertex_buffer.htm+html.body.p:163-3,"{ANY_CODE} player_buffer = buffer_create_from_vertex_buffer(model_buffer, buffer_grow, 1);"
buffer_create_from_vertex_buffer.htm+html.body.p:164-3,"The above code allocates memory to a buffer then copies the data from the given vertex buffer into it, returning the index of the new buffer which is stored in the variable ""player_buffer"", for future use."
buffer_create_from_vertex_buffer.htm+html.body.div.div.div.div:171-9,"Back: <a href=""Buffers.htm"">Buffers</a>"
buffer_create_from_vertex_buffer.htm+html.body.div.div.div.div:172-9,"Next: <a href=""buffer_create_from_vertex_buffer_ext.htm"">buffer_create_from_vertex_buffer_ext</a>"
buffer_create_from_vertex_buffer.htm+html.body.p:189-1,{SEARCH_RESULT} Reference page for buffer_create_from_vertex_buffer
