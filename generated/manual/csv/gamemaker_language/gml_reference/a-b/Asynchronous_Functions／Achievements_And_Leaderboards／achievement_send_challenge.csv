achievement_send_challenge.htm+html.head.title:55-3,achievement_send_challenge
achievement_send_challenge.htm+html.head.title:59-3,achievement_send_challenge
achievement_send_challenge.htm+html.body.div.div.div[title]:73-7,achievement_send_challenge
achievement_send_challenge.htm+html.body.div.div.div:73-7,achievement_send_challenge
achievement_send_challenge.htm+html.body.h1:86-3,achievement_send_challenge
achievement_send_challenge.htm+html.body.p:87-3,"This function will send a challenge across the network to the chosen player. You can get the <i>playerid</i> using the <a href=""achievement_load_friends.htm""><tt>achievement_load_friends()</tt></a> or the <a href=""achievement_load_leaderboard.htm""><tt>achievement_load_leaderboard()</tt></a> functions and you must also supply the <i>challengeid</i> which is the unique value given the challenge when you created it on your iTunes Connect or Google Play dashboard. You must also supply a score, and a short text message as well as set the challenge <i>type</i>. This can be one of the following <b>constants</b>:"
achievement_send_challenge.htm+html.body.table.tbody.tr.th:93-9,Constant
achievement_send_challenge.htm+html.body.table.tbody.tr.th:94-9,Description
achievement_send_challenge.htm+html.body.table.tbody.tr.td:97-9,achievement_type_score_challenge
achievement_send_challenge.htm+html.body.table.tbody.tr.td:98-9,A challenge based on the score value.
achievement_send_challenge.htm+html.body.table.tbody.tr.td:101-9,achievement_type_achievement_challenge
achievement_send_challenge.htm+html.body.table.tbody.tr.td:102-9,A challenge based on an achievement.
achievement_send_challenge.htm+html.body.p:107-3,"This function will trigger a callback <a href=""../../../../The_Asset_Editors/Object_Properties/Async_Events/Social.htm"">Social Asynchronous Event</a> for the player that is to receive the challenge, and in this event you will have a DS map referenced in the variable <tt>async_load</tt>. The <i>id</i> key of this <tt>DS Map</tt> is used to identify the correct callback (there can be more than one trigger function for any given asynchronous event), and will be paired with the <b>constant</b> <tt>achievement_challenge_received</tt> as well as a number of other key/value pairs for each player. The exact contents of the map are shown below:"
achievement_send_challenge.htm+html.body.p:109-3,"<b>NOTE</b>: that the user can also receive toast notifications for challenges received, but this will depend on the values you have chosen using the function <span style=""font-size:1px;""><a href=""achievement_show_challenge_notifications.htm""><tt style=""font-size: 14px"">achievement_show_challenge_notifications()</tt></a></span>."
achievement_send_challenge.htm+html.body.ul.li:111-5,"""<b>id</b>"" - For this function it should be <tt>achievement_leaderboard_info</tt>"
achievement_send_challenge.htm+html.body.ul.li:112-5,"""<b>playerid</b>"" - The player ID for the challenge."
achievement_send_challenge.htm+html.body.ul.li:113-5,"""<b>issuerid</b>"" - The issuer ID for the challenge."
achievement_send_challenge.htm+html.body.ul.li:114-5,"""<b>state</b>"" - The state of the challenge, which will have a value of 0 - 3 (as a string) for <i>invalid</i>, <i>pending</i>, <i>completed</i> or <i>declined</i>."
achievement_send_challenge.htm+html.body.ul.li:115-5,"""<b>message</b>"" - The text message for challenge."
achievement_send_challenge.htm+html.body.ul.li:116-5,"""<b>completeddate</b>"" - The completion date for challenge."
achievement_send_challenge.htm+html.body.ul.li:117-5,"""<b>issueddate</b>"" - The issue date for challenge."
achievement_send_challenge.htm+html.body.ul.li:118-5,"""<b>type</b>"" - The type of challenge given. Can be one of the two constants listed above"
achievement_send_challenge.htm+html.body.ul.li:119-5,"""<b>identifier</b>"" - The identifying string for the challenge, as set on the provider dashboard"
achievement_send_challenge.htm+html.body.ul.li:120-5,"""<b>score</b>"" - The score tied in with the challenge (if applicable)."
achievement_send_challenge.htm+html.body.h4:123-3,Syntax:
achievement_send_challenge.htm+html.body.p:124-3,"{ANY_CODE} achievement_send_challenge(playerid, challengeid, score, type, message)"
achievement_send_challenge.htm+html.body.table.tbody.tr.th:128-9,Argument
achievement_send_challenge.htm+html.body.table.tbody.tr.th:129-9,Description
achievement_send_challenge.htm+html.body.table.tbody.tr.td:132-9,playerid
achievement_send_challenge.htm+html.body.table.tbody.tr.td:133-9,The unique ID of the player to challenge.
achievement_send_challenge.htm+html.body.table.tbody.tr.td:136-9,challengeid
achievement_send_challenge.htm+html.body.table.tbody.tr.td:137-9,The unique challenge ID (as found on the provider dashboard).
achievement_send_challenge.htm+html.body.table.tbody.tr.td:140-9,score
achievement_send_challenge.htm+html.body.table.tbody.tr.td:141-9,The score to beat.
achievement_send_challenge.htm+html.body.table.tbody.tr.td:144-9,type
achievement_send_challenge.htm+html.body.table.tbody.tr.td:145-9,the type of challenge to be issued - one of two <b>constants</b> given below.
achievement_send_challenge.htm+html.body.table.tbody.tr.td:148-9,message
achievement_send_challenge.htm+html.body.table.tbody.tr.td:149-9,The message to attach to the challenge.
achievement_send_challenge.htm+html.body.h4:154-3,Returns:
achievement_send_challenge.htm+html.body.p:155-3,N/A
achievement_send_challenge.htm+html.body.h4:157-3,Extended Example:
achievement_send_challenge.htm+html.body.p:158-3,To send a challenge over the network you would have this code:
achievement_send_challenge.htm+html.body.p:159-3,"{ANY_CODE} achievement_send_challenge(global.playerid[0], global.challengeid[0], score, achievement_type_score_challenge, ""Beat that sucker!"");"
achievement_send_challenge.htm+html.body.p:160-3,"This request will then trigger the <b>Social Event</b> in your game for the player that the challenge was directed at, and this can be dealt with in the following way:"
achievement_send_challenge.htm+html.body.p:161-3,"{ANY_CODE} var ident = ds_map_find_value(async_load, ""id"");<br /> if ident == achievement_challenge_received<br /> {nbsp_x4}{ <br /> {nbsp_x4}player_id = ds_map_find_value(async_load, ""playerid"");<br /> {nbsp_x4}issuer_id = ds_map_find_value(async_load, ""issuerid"");<br /> {nbsp_x4}state = ds_map_find_value(async_load, ""state"");<br /> {nbsp_x4}message = ds_map_find_value(async_load, ""message"");<br /> {nbsp_x4}date_completed = ds_map_find_value(async_load, ""completeddate"");<br /> {nbsp_x4}date_issued = ds_map_find_value(async_load, ""issueddate"");<br /> {nbsp_x4}ach_type = ds_map_find_value(async_load, ""type"");<br /> {nbsp_x4}ach_ident = ds_map_find_value(async_load, ""identifier"");<br /> {nbsp_x4}ach_score = ds_map_find_value(async_load, ""score"");<br /> {nbsp_x4}}"
achievement_send_challenge.htm+html.body.p:165-3,"The above code checks the returned <tt>DS Map</tt> in the <b>Social Asynchronous Event</b> and if its ""id"" matches the constant being checked, it then extracts the relevant values for each of the keys in the map and stores them in variables for future use."
achievement_send_challenge.htm+html.body.div.div.div.div:173-9,"Back: <a href=""Achievements_And_Leaderboards.htm"">Achievements And Leaderboards</a>"
achievement_send_challenge.htm+html.body.div.div.div.div:174-9,"Next: <a href=""achievement_reset.htm"">achievement_reset</a>"
achievement_send_challenge.htm+html.body.p:189-1,{SEARCH_RESULT} Reference page for achievement_send_challenge
achievement_send_challenge.htm+html.body.p:189-69,{INDEX_KEYWORD} achievement_type_score_challenge
achievement_send_challenge.htm+html.body.p:189-125,{INDEX_KEYWORD} achievement_type_achievement_challenge
