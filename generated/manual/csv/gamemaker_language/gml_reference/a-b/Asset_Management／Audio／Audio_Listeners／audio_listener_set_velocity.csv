audio_listener_set_velocity.htm+html.head.title:55-3,audio_listener_set_velocity
audio_listener_set_velocity.htm+html.head.title:59-3,audio_listener_set_velocity
audio_listener_set_velocity.htm+html.body.div.div.div[title]:73-7,audio_listener_set_velocity
audio_listener_set_velocity.htm+html.body.div.div.div:73-7,audio_listener_set_velocity
audio_listener_set_velocity.htm+html.body.h1:86-3,audio_listener_set_velocity
audio_listener_set_velocity.htm+html.body.p:87-3,"This function can be used to give the given listener <em>Doppler </em>effects and simulate audio motion based on the vector that is resolved from the given relative x, y and z positions. The default listener index is 0, but you can use the function <a href=""audio_get_listener_info.htm""><tt>audio_get_listener_info()</tt></a> to get the different indices available for the target platform."
audio_listener_set_velocity.htm+html.body.p:89-3,"If the given listener is not ever going to move, or the movement is not a constant motion, you would normally not need to set these values, but, for example, if you are making a scrolling game where the player has a constant bottom to top movement and the enemies a constant top to bottom movement, you would set the listener <i>and</i> emitter velocities (for emitters you would use <a href=""../Audio_Emitters/audio_emitter_velocity.htm""><tt>audio_emitter_velocity()</tt></a>) to the appropriate vectors to simulate the correct Doppler effect as they move past the player instance."
audio_listener_set_velocity.htm+html.body.p:92-3,The image below shows how this could be setup for the example game given above:
audio_listener_set_velocity.htm+html.body.p.img[alt]:93-6,{IMG_TXT} Audio Listener Set Velocity Example
audio_listener_set_velocity.htm+html.body.h4:94-3,Syntax:
audio_listener_set_velocity.htm+html.body.p:95-3,"audio_listener_set_velocity(index, x, y, z);"
audio_listener_set_velocity.htm+html.body.table.tbody.tr.th:99-9,Argument
audio_listener_set_velocity.htm+html.body.table.tbody.tr.th:100-9,Description
audio_listener_set_velocity.htm+html.body.table.tbody.tr.td:103-9,index
audio_listener_set_velocity.htm+html.body.table.tbody.tr.td:104-9,The listener to get the data for (default 0).
audio_listener_set_velocity.htm+html.body.table.tbody.tr.td:107-9,x
audio_listener_set_velocity.htm+html.body.table.tbody.tr.td:108-9,The x velocity of the listener (default 0).
audio_listener_set_velocity.htm+html.body.table.tbody.tr.td:111-9,y
audio_listener_set_velocity.htm+html.body.table.tbody.tr.td:112-9,The y velocity of the listener (default 0).
audio_listener_set_velocity.htm+html.body.table.tbody.tr.td:115-9,z
audio_listener_set_velocity.htm+html.body.table.tbody.tr.td:116-9,The z velocity of the listener (default 0).
audio_listener_set_velocity.htm+html.body.h4:121-3,Returns:
audio_listener_set_velocity.htm+html.body.p:122-3,N/A
audio_listener_set_velocity.htm+html.body.h4:124-3,Example:
audio_listener_set_velocity.htm+html.body.p:125-3,"{ANY_CODE} var num = audio_get_listener_count();<br /> for(var i = 0; i &lt; num; ++i;)<br /> {nbsp_x3}{ <br /> {nbsp_x3}var info = audio_get_listener_info(i);<br /> {nbsp_x3}var data = audio_listener_get_data(info[? ""index""]);<br /> {nbsp_x3}if data[? ""vx""] != 0<br /> {nbsp_x6}{ <br /> {nbsp_x6}audio_listener_set_velocity(info[? ""index""], 0, 0, 0);<br /> {nbsp_x6}} <br /> {nbsp_x3}ds_map_destroy(info); <br /> {nbsp_x3}ds_map_destroy(data); <br /> {nbsp_x3}}"
audio_listener_set_velocity.htm+html.body.p:132-3,"The above code checks the number of listeners available then loops through them and if their x velocity is not 0, it sets their velocity values to 0, 0, 0."
audio_listener_set_velocity.htm+html.body.div.div.div.div:139-9,"Back: <a href=""Audio_Listeners.htm"">Audio Listeners</a>"
audio_listener_set_velocity.htm+html.body.div.div.div.div:140-9,"Next: <a href=""audio_listener_set_orientation.htm"">audio_listener_set_orientation</a>"
audio_listener_set_velocity.htm+html.body.p:153-1,{SEARCH_RESULT} Page explaining the function audio_listener_set_velocity
