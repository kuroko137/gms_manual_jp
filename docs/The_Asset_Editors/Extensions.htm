<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "..";
    gCommonRootRelPath = "..";
    gTopicId = "5.1";
  
//]]></script>

  <script type="text/javascript" src="../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>拡張機能</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>拡張機能</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how the extension editor works" />
  <meta name="rh-index-keywords" content="Extension Editor" />
  <meta name="search-keywords" content="extensions,extension editor" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="拡張機能">
        <span>拡張機能</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>拡張機能エディタ</h1>
  <p><strong>拡張機能パッケージ</strong>を利用すると GameMaker Language (GML) に関数や<a class="tooltip" title="A constant is a term used to describe a named value that does not change throughout the execution of the program. GameMaker Studio 2 has a number of built-in constants - for example os_windows - but you can also create your own constant values for use in your projects (called Macros) and extensions.">定数</a><span class="glossextra"></span>を追加したり、ゲームのアセットやプロジェクトそのものを他の人と簡単にやり取りすることができます。新しく機能を追加するものであれば、外部 <a class="tooltip" title="SDK stands for 'Software Development Kit'. This usually refers to a collection of software and/or packages used for developing applications for a specific device or operating system.">SDK</a><span class="glossextra"></span> や、他の言語 （Android 向けの Java など）あるいは GML で書かれた<a class="tooltip" title="Source code is the fundamental component of a computer program that is required for the program to run.">ソースコード</a>をゲームに結び付けることも可能です。</p>
  <p><img alt="拡張機能プロパティ" class="center" src="../assets/Images/Asset_Editors/Editor_Extensions.png" style="width: 100%; max-width: 465px;" />サードパーティーの拡張機能は基本的に <a href="https://marketplace.yoyogames.com/">GameMaker マーケットプレイス</a>にあり、サブスクライブすると<a href="../Introduction/The_Marketplace.htm">マーケットプレイスライブラリ</a>のウィンドウに登録されてインストールできるようになります。マーケットプレイスから拡張機能パッケージを入手しなくても、<a href="../Introduction/The_Asset_Browser.htm">アセットブラウザ</a>を右クリック<img_tag=RMB_Icon:0>して「<em>既存のアセットを追加</em>」を選び、場所を指定することでも拡張機能をプロジェクトに追加できます。</p>
  <p>以前のバージョンの GameMaker Studio で作成された<span class="inline">*.GMEZ</span> ファイルがある場合、右クリック<img_tag=RMB_Icon:0>メニューから「<em>拡張機能のインポート</em>」を選んで追加できます。</p>
  <p class="note"><strong>注意</strong>: <span class="inline">*.GEX</span> の拡張機能は古い形式であり、GameMaker Studio 2 のプロジェクトには対応していないためインポートできません。</p>
  <p>アセットブラウザに拡張機能を追加できたら、名前とバージョン番号、出力させるプラットフォームを設定しましょう。チェックを外したプラットフォームでは、実行ファイルの一部として拡張機能が出力されなくなります。また、拡張機能のプロパティを各プラットフォームと一致させたのち、拡張機能のファイル出力先を以下に合わせて編集しなくてはなりません。</p>
  <ul class="colour">
    <li class="dropspot"><strong>すべての対象</strong>: GML 拡張機能です。GameMaker Language (GML) で作られた拡張機能のため、すべての対象プラットフォームと互換性があります。</li>
    <li class="dropspot"><strong>Windows (通常, UWP, XBoxOne)</strong>: Windows の <span class="inline">DLL</span> ファイル（ダイナミックリンクライブラリ）を利用できるようになります。<a href="../Settings/Game_Options/Windows.htm">Windows ゲーム設定</a>で 「x64 Windows ランタイムを使用」にチェックした場合、<strong>必ず 64bit 互換の DLL だけを利用</strong>してください。32bit の DLL は 64bit の実行ファイルでは動作しません。</li>
    <li class="dropspot"><strong>macOS</strong>: macOS が対象にされていると標準的な <span class="inline">DyLib</span> ファイルを拡張機能に利用できます。</li>
    <li class="dropspot"><strong>Ubuntu (Linux)</strong>: Ubuntu が対象にされている場合、拡張機能では <span class="inline">SO</span> ファイルを利用しなくてはなりません。</li>
    <li class="dropspot"><strong>HTML5</strong>: これらのプラットフォームでは <span class="inline">JavaScript</span> の拡張機能を利用できます。</li>
    <li class="dropspot"><strong>Android</strong>: このプラットフォームでは <span class="inline">Java</span> または <span class="inline">Android Framework SDK</span> で書かれた拡張機能を必要とします。</li>
    <li class="dropspot"><strong>iOS</strong> / <strong> tvOS</strong>: このプラットフォーム用の拡張機能には Objective C で書かれた<span class="inline">*.mm</span> および<span class="inline">*.h</span> ファイル、またフレームワークを使用している場合は、コンパイル済みの<span class="inline">*.a</span> ネイティブファイルが必要です。</li>
    <li class="dropspot"><strong>PlayStation</strong>: PlayStation 3 および 4 では <span class="inline">PRX</span> ファイルの拡張機能にする必要があり、この <span class="inline">PRX</span> ファイルはそれぞれの仕様 （PS3 および PS4）に合わせなければなりません。PSVita 用のプロジェクトであれば <span class="inline">SUPRX</span> の拡張機能にしてください。</li>
  </ul>
  <p class="note"><strong>注意</strong>: 一部の拡張機能では GameMaker 側でプラットフォーム、設計された CPU アーキテクチャを正しく識別させるために特定の命名規則を守らなくてはなりません。詳しくは<a href="Extension_Creation/Creating_An_Extension.htm">拡張機能の作り方</a>のセクションを参照してください。</p>
  <p>Since a single extension can have various associated files, it's possible to create a single extension for multiple platforms, in which case you want to specify <em>all </em>the compatible platforms in the main extension editor (ie: tick the checkbox beside them) and then in the individual file properties for each part of the extension, set the platform that those files should be exported to.</p>
  <p>To change the target platform for a specific extension file or placeholder you must first open the extension properties (double click <img alt="LMB Icon" class="icon" src="../assets/Images/Icons/Icon_LMB.png" style="width: 100%; max-width: 21px;" /> the extension in the Asset Browser or use <img alt="RMB Icon" class="icon" src="../assets/Images/Icons/Icon_RMB.png" style="width: 100%; max-width: 21px;" /> and select <em>Open Properties</em>), and then once in the extension properties select the resource file from the right that you want to edit:</p>
  <p class="dropspot"><img alt="Extension Target Platforms" class="center" src="../assets/Images/Asset_Editors/Editor_Extensions_Targets.png" style="width: 100%; max-width: 1049px;" /></p>
  <p class="note"><strong>NOTE</strong>: If you are exporting to the macOS or Ubuntu target, then you can set the "Uncompress as zip file" option to preserve file permissions for the extension.</p>
  <p>Once you have installed your extension, you can use the functions and constants for it just as you would the built in functions and constants used in the GameMaker Language. If your game is cross-platform (for example, it is designed to run on both Windows and Android targets), then you should use the <a href="../GameMaker_Language/GML_Reference/OS_And_Compiler/OS_And_Compiler.htm">OS constants and functions</a> to check the platform before calling extension specific functions to prevent issues, for example:</p>
  <p class="code">switch(os_type)<br />     { <br />     case os_android:<br />         call_android_extension_function(x, y, z);<br />         break; <br />     case os_windows:<br />         call_windows_extension_function(x, y, z);<br />         break; <br />     }
  </p>
  <p>Note that for different platforms your extensions can share function names, so if you have an extension with distinct files to (for example) pop up a message for Windows and for Android, both extension files can share the same function name as long as they are both set to export only to their respective platforms.</p>
  <p>If you want to create your won extensions, then you can find the basic required information from the following pages:</p>
  <ul class="colour">
    <li><a href="Extension_Creation/Creating_An_Extension.htm">Creating An Extension</a></li>
    <li><a href="Extension_Creation/Android_Extensions.htm">Android Extensions</a></li>
    <li><a href="Extension_Creation/iOS_Extensions.htm">iOS / tvOS Extensions</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <h1>YoYo Games 3rd Party Extensions</h1>
  <p>Legacy versions of GameMaker had a lot of 3rd party functionality built in, but this was inefficient and difficult to maintain, since if any specific functionality was changed by the third party, then the whole GameMaker <a class="tooltip" title="The IDE, or Integrated Development Environment, is a software application that provides comprehensive facilities to computer programmers for software development. In this case, the entire frontend of GameMaker Studio 2 is considered the IDE, and includes sections to create graphics, add sounds, and add code to make your games.">IDE</a> and <a class="tooltip" title="The runtime in GameMaker Studio 2 is the collection of compiler assets that is required by the program to create a final executable package for a given target platform. These are installed seperately from the IDE, and can be changed and updated at any time.">Runtime</a> would have to be updated. So, current versions have adopted the use of extensions packages to add third party support to your games. This means that you can add only those extra functions that you require and that you can even adapt and edit them to suit your specific needs.</p>
  <p>Most of these extensions will be downloaded and installed for you when you select a specific <a href="../Settings/Game_Options.htm">Game Options</a> (like Facebook or Google Mobile Ads, for example), but you can find further information about them from the appropriate section for each platform on the YoYo Games Knowledge Base:</p>
  <ul class="colour">
    <li><a href="https://help.yoyogames.com/hc/en-us/categories/204246668-GameMaker-Studio-2">GameMaker Studio 2 Platforms And Setup</a></li>
  </ul>
  <p>You can find the extensions themselves from the following Marketplace page:</p>
  <ul class="colour">
    <li><a href="https://marketplace.yoyogames.com/publishers/23/yoyo-games">YoYo Games Marketplace Assets</a></li>
  </ul>
  <p>Note that these extensions come with a demo and a help file (in <span class="inline">*.pdf</span> format) that explains how to use them, and as such their functions are not covered in the manual.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="The_Asset_Editors.htm">The Asset Editors</a></div>
        <div style="float:right">Next: <a href="Fonts.htm">Fonts</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
Extensions
Extension Editor
Android Extensions
iOS Extensions
-->
  <!-- TAGS
extension_editor
-->

</body></html>