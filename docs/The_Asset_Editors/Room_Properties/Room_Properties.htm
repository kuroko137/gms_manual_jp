<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.3.0_2";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>ルームプロパティ</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ルームプロパティ</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the different room properties" />
  <meta name="rh-index-keywords" content="Rooms - Room Settings" />
  <meta name="search-keywords" content="room settings,cameras,viewports,room size,room properties,view cameras" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="ルームプロパティ">
        <span>ルームプロパティ</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>ルームプロパティ</h1>
  <p><img alt="ルームエディタのプロパティ" class="center" src="../../assets/Images/Asset_Editors/Editor_Room_RoomSettings.png" style="width: 100%; max-width: 335px;" />ルームプロパティの領域では、継承の切り替えやルームの名前、ルームを<strong>永続的</strong>にするかを設定できます。普通はルームを出てから戻ってきても、そのルームは初期設定にリセットされます。ほとんどのゲームでは問題ありませんが、RPG のような一方通行でなく、ルームを行ったり来たりするゲームの場合、最後に出ていった状態のままにしておきたいはずです。<strong>永続的</strong>はそのような場合のためのオプションで、チェックを入れるとルームの状態が記憶され、戻ってきても最後に出ていったままの状態となり、ゲームを再起動しないかぎり開始時の状態にリセットされなります。ただし永続的としてチェックしているオブジェクトは<em></em>例外であり、それらのインスタンスはルームに<em>留まらず</em>、次のルームまで移動します。</p>
  <p>その下にあるのは<strong>表示バッファをクリア</strong>というオプションです。このオプションがチェックされている場合、<a class="tooltip" title="表示バッファは、あらゆるものが最終的に描画される「キャンバス」です。表示バッファを直接対象とするイベント（Pre Drawイベントなど）もありますが、それ以外のイベントはまずアプリケーションサーフェスを対象とし、それから表示バッファに描画を行います。">表示バッファ</a>が単色で塗りつぶされます。ビューが常に画面全体を覆っていたり、背景が全画面描画されているならチェックを外しても問題ありませんが（再描画が省略されるためゲームの最適化につながります）、ビューを重ねていて画面上に空きスペースが残っている場合や、背景画像が少しでも透けている場合はチェックを入れるようにしてください。そうするとビューがない部分も指定した描画色で塗りつぶされます。なお現時点では描画色を設定するには、コードから <a href="../../GameMaker_Language/GML_Reference/Cameras_And_Display/The_Game_Window/window_set_colour.htm"><span class="inline">window_set_colour()</span></a>関数を呼び出す必要があります。</p>
  <p class="note"><strong>注意</strong>: アスペクト比の自動補正を<a href="../../Settings/Game_Options.htm">ゲームオプション</a>から有効にしている場合、このオプションは<strong>常に</strong>チェックしておきましょう。そうしないとゲームが描画されるレターボックス（黒枠）の表示がおかしくなります。オプションを利用しない場合はチェックを外すと、ゲームのパフォーマンスが少しだけ向上します （Android などのモバイルプラットフォームでは特に有効です）。</p>
  <p>ルームには大きさがあり、ピクセル単位で幅と高さを設定しなくてはなりません。あとは必要に応じて<strong>生成コード</strong>を追加しましょう。生成コードは下のボタンから追加でき（その隣にある継承ボタンからは、ルームに生成コードを引き継がせるかを切り替えできます）、ボタンをクリックするとコードエディタ、または DnD™ エディタが開きます。エディタに入力した関数 / アクションおよびコードはルームの「<em>開始時</em>」に実行され、各インスタンスの Create イベントよりも後、Room Start イベントよりも前に実行されます（イベントの順番については<a href="../Object_Properties/Event_Order.htm">こちら</a>に詳しい情報があります）。生成コードはルームに入るたびに実行されます。永続的としてフラグ付けされている場合は最初に入ったときにだけ実行され、それ以降は実行されません。</p>
  <p>一番下にあるボタンをクリックすると、このように<strong>インスタンス生成順序</strong>ウィンドウが開きます。</p>
  <p><img alt="インスタンス生成順序ウィンドウ" class="center" src="../../assets/Images/Asset_Editors/Editor_Room_CreationOrder.png" style="width: 100%; max-width: 300px;" />このウィンドウにはルームの各インスタンスが、生成される順番どおりにリスト表示されます。特定のインスタンスを他のインスタンスより先に生成したい場合、そのインスタンスを目当ての位置にドラッグ<img alt="[左クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" style="width: 100%; max-width: 21px;" />するといいでしょう。なおインスタンスはリストで指定したとおりに、上から下の順番で生成されます。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <h1>カメラとビューポート</h1>
  <p>この領域では、ルームの<strong>カメラ</strong>と<strong>ビューポート</strong>を設定できます。カメラの「視野」にあたるカメラビューを利用すると、ルームの各部分を画面上のさまざまな位置に描画したり、ルームのある部分だけを画面全体に描画するといったことができます。多くの横スクロールゲームでは、カメラビューをプレイヤーキャラクターに追従させています。というのもステージ全体を画面内に収めてしまうと、プレイヤーキャラクターがあまりにも小さく表示されてしまうだけでなく、先に何があるのか見えてしまうからです。カメラビューはマルチプレイや対戦型のゲームにも利用でき、画面を分割するよう設定すれば片方の画面にプレイヤーを、もう片方の画面に相手を映すことができます。GameMaker Studio 2 ではこうした仕組みを、カメラビューによって簡単に実現できます。</p>
  <p><img alt="カメラとビューポートのプロパティ" class="center" src="../../assets/Images/Asset_Editors/Editor_Room_RoomViews.png" style="width: 100%; max-width: 319px;" />ビュープロパティの一番上にあるのは、ビューの継承を切り替えるボタンです。その下にあるのは<strong>ビューポートを有効</strong>というオプションで、ゲームのカメラビューを有効とするには<em>チェックしなくてはなりません</em>。</p>
  <p class="note"><strong>メモ</strong>: ビューポートの 3 つの主要設定は継承を切り替えることができ、それぞれのカメラビューごとに切り替え可能です。</p>
  <p>さらに下にあるのは<strong>ビューポートの背景をクリア</strong>というオプションで、<a class="tooltip" title="The application surface is a special built-in surface that GameMaker Studio 2 will draw everything to in the Draw Events of a game (a surface is essentially an area of memory reserved for graphics). This surface is then drawn to the display buffer at the end of each game frame, displaying its contents to the player.">アプリケーションサーフェス</a>をウィンドウ色でクリアします。サーフェス全体に描画するつもりならチェックを外しても問題ありません。</p>
  <p>カメラビューは 2 つに分かれた値から設定し、これらはカメラビュー、ビューが描画される画面上のポートごとに区分されています。何かと混同しやすいので、設定の仕方について説明する前に少し補足をしましょう。</p>
  <ul class="colour">
    <li><strong>カメラ</strong>: ルーム内の地点であり、ルームを画面上に表示するための基準となります。ルームエディタでの理論地点にあたり、ビューおよびビューポート設定から自動的に位置が定められます。</li>
    <li><strong>ビュー</strong>: カメラに映される内容であり、カメラの位置、射影、回転に基づいています。</li>
    <li><strong>ビューポート</strong>: カメラビューが表示される物理的な画面領域です。</li>
  </ul>
  <p><img alt="カメラビューの例" class="center" src="../../assets/Images/Asset_Editors/Camera_Example.png" style="width: 100%; max-width: 854px;" />たとえばルームに 640x480 のカメラビューを追加し、ポートを 320x240 に設定した場合、画面上にはポートのサイズに合わせて縮小されたビューが表示されます。同じようにビューの値を小さくし、ポートの値を大きくすれば、ポートのサイズに合わせて画像が拡大され、画面上にはより大きく表示されます。このように画面（ポート）のサイズはそのままにカメラビューを切り替えれば、画面の同じ領域にルームのより広い / 狭い部分を表示できます。</p>
  <p>カメラビューはルームでは長方形の領域として定められ、左上にあたる位置、そして幅と高さを変更できます。ビューの次はビューポートを設定し、カメラビューの領域がウィンドウのどこに表示されるかを決めなくてはなりません。こちらも左上にあたる位置、サイズから指定します（位置を 0,0 以外にすると結果がおかしくなる場合があります）。ポートは複数追加でき、指定した順番どおりに重ねて描画することができます。</p>
  <p>ここで覚えておきたいのは、画面全体の領域は必ず<em>長方形として定められる</em>ということです。ポートをオフセットでずらしても長方形のままで、空きスペースは<a class="tooltip" title="表示バッファは、あらゆるものが最終的に描画される「キャンバス」です。表示バッファを直接対象とするイベント（Pre Drawイベントなど）もありますが、それ以外のイベントはまずアプリケーションサーフェスを対象とし、それから表示バッファに描画を行います。">表示バッファ</a>のウィンドウ色で塗りつぶされます。このような場合では、<strong>表示バッファをクリア</strong>にチェックしないとポートの間のスペースに画像の乱れが生じるでしょう。以下の図はその例で、オフセットしたビューポートが 2 つあるもののウィンドウは真四角であり、「裏」には表示バッファに描画された直線があります。</p>
  <p><img alt="オブジェクトエディタの描画後" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_PostDraw.png" style="width: 100%; max-width: 710px;" />カメラには<strong>オブジェクト追従</strong>というオプションもあり、カメラに追従させたい（ビューの中心としたい）オブジェクトを指定できます。メニューアイコンをクリック<img alt="[左クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" style="width: 100%; max-width: 21px;" />するとリストが開きますので、好きなオブジェクトを選びましょう。なお、指定したオブジェクトのインスタンスがルームに複数存在する場合、カメラが追うのはそのうちの 1 つだけとなります。</p>
  <p>通常動作ではインスタンスがバッファ区間に近づきすぎたときにだけ移動し、この区間はビューの外周に見えない境界線を築きます。この区間は<strong>水平ボーダー</strong>および<strong>垂直ボーダー</strong>の値によって定義可能で、たとえばこれらの値を 64 にした場合、外周から 64 ピクセル以内に入るまでビューは移動せず、キャラクターに追従しません。</p>
  <p>その下からは、バッファ区間にキャラクターが入ったときにカメラが移動する<strong>水平</strong>および<strong>垂直速度</strong>を指定できます。デフォルト値は-1 ですが、この値にするとインスタンスがバッファ区間から出た瞬間、ビューがインスタンスの位置まで「一瞬」で移動することになります。時間をかけて移動させたい場合、-1 以外に設定することでカメラの水平・垂直スクロール速度を調整できます。値を 0 にするとビューが移動しなくなり、0 より大きい正の値にすると、そのままフレームごとに移動するピクセル数となります。たとえば水平速度を 5 にした場合、ビューはフレームごとに 5 ピクセル、水平に向かってオブジェクトに追従します。</p>
  <p> </p>
  <p> </p>
  <h1>ルーム物理</h1>
  <p>組み込み物理機能をゲームで利用する前に、まずは<strong>ルーム物理</strong>の領域内にある「<em>物理を有効</em>」にチェックを入れ、ルームが物理ルームであることを明示しなければなりません（ここでは他のルーム設定と同じように継承の切り替えもできます）。チェックを入れたら、物理世界のプロパティ設定を行いましょう。これらは基本的なプロパティで、ルームの物理インスタンスが動作可能となるよう事前に設定しておく必要があります。なお、物理世界はコードからより精密に制御することが可能です（詳しくは<a href="../../GameMaker_Language/GML_Reference/Physics/Physics.htm">物理関数</a>を参照）。</p>
  <p><img alt="ルームの物理プロパティ" class="center" src="../../assets/Images/Asset_Editors/Editor_Room_RoomPhysics.png" style="width: 100%; max-width: 355px;" />次は物理世界の<strong>重力</strong>を設定しましょう。重力の強さと方向は、(0, 0) 地点を中心とした X / Y 位置の<a class="tooltip" title="A vector is a mathematical construct that has a size, called the magnitude, and a direction. In GameMaker, a vector is usually used to show the distance and direction something moved in. A vector can also be used to define images and certain image formats like SWF use vector maths to define the images they contain.">ベクトル</a>として計算されます。たとえば X が 0 で Y が 1 なら重力は<em>下向き</em>となり、力は秒間 1 メートルとなります（具体的な説明については<a href="../../GameMaker_Language/GML_Reference/Physics/The_Physics_World/The_Physics_World.htm">物理世界</a>を参照してください）。</p>
  <p>最後に、物理演算の基準となる<strong>ピクセル / メートル比</strong>を設定しておきましょう。物理機能は現実世界の寸法で動作するため必ず設定する必要があり、各オブジェクトの平均ピクセルサイズが、シミュレーションされた物理オブジェクトのおおよその適正サイズに変換されるまで値を調整しなくてはなりません。</p>
  <p>ルームの物理を有効にした場合、ルームのインスタンスを移動させるには<em>物理関数および変数を利用することになります</em>。簡単に言うと、インスタンスの X / Y 位置・速度・方向を変えることによる「従来式」、物理的な力と衝突を利用する「物理式」の移動システムがあるということです。これらのシステムは<strong>互いに排他的</strong>であり、物理インスタンスを物理用でない関数によって動かすことはできず、非物理インスタンスを物理用の関数によって動かすこともできません。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る: <a href="../Rooms.htm">ルームエディタ</a></div>
        <div style="float:right">次へ: <a href="Room_Inheritance.htm">ルームの継承</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
Room Properties
View Ports
View Cameras
-->
  <!-- TAGS
rooms_properties
-->

</body></html>