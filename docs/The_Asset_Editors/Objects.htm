<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "..";
    gCommonRootRelPath = "..";
    gTopicId = "5.2";
  
//]]></script>

  <script type="text/javascript" src="../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>オブジェクト</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>オブジェクト</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how the object editor works" />
  <meta name="rh-index-keywords" content="Object Editor" />
  <meta name="search-keywords" content="objects,object editor" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="オブジェクト">
        <span>オブジェクト</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>オブジェクトエディタ</h1>
  <p><img alt="オブジェクトエディタ" class="center" src="../assets/Images/Asset_Editors/Editor_Objects.png" style="width: 100%; max-width: 788px;" />オブジェクトとは、ゲームをさまざまな面でコントロールしたり、決められた動作を取らせるためのリソースです。ほとんどの場合、オブジェクトにはルーム内で表示されるようスプライトが割り当てられますが、ユーザーの操作を受け付けたり、時間に関わるものなどは、画面に表示されない制御用のオブジェクトとして扱う場合もあります。オブジェクトには挙動を与え、イベントや他のオブジェクトに反応させることができます。ゲーム内で目にする要素の多くは、オブジェクトおよびオブジェクト同士のやり取りに由来していると言えるでしょう。ここで「由来」という言葉を使ったのは、オブジェクトはルームに配置するものではなく、正確にはそのコピーとも言える<strong>インスタンス</strong>を配置することになるからです。これは必ず覚えておきたい点で、インスタンス（実物）とオブジェクト（設計図）は<em>同じものではなく</em>、それぞれの機能は影響し合うものの独立しているということです。</p>
  <p>具体的にするために、GameMaker Studio 2 で作られたゲームを考えてみましょう。キャラクター、モンスター、球体、壁などといったさまざまなものは、<a href="../Introduction/The_Asset_Browser.htm">アセットブラウザ</a>から作成したオブジェクトからなります。<a href="Rooms.htm">ルームエディタ</a>を開き、そうして作成した<em>オブジェクト</em>をルームにドラッグしてください。するとオブジェクトの基礎をコピーした<em>インスタンス</em>が作られます。ルームに置かれたインスタンスは、エディタおよびコードから改変でき、拡大縮小したり色を乗せるなど、元となったオブジェクトのさまざまな要素を変えることが可能です。このように<strong>インスタンス</strong>に変更を加えたり、影響が及ぶことについて話している場合は、<em>ルームに置かれたオブジェクトのコピー</em>が対象となることを意味します。対象となるのは 1 つのコピーだけで、自分以外のインスタンスは対象となりません。ただし<strong>オブジェクト</strong>に変更を加えたり、影響が及ぶことについて話している場合、それはアセットブラウザのオブジェクトを改変するということであり、そうして加えた変更は既存のインタンスすべてに反映されます。オブジェクトとはインスタンスのひな形であり、そのインスタンスをルームに置くことでゲームを形作るのです。</p>
  <p>ゲームで使うオブジェクトを作成するには、アセットブラウザを右クリック<img alt="[右クリックアイコン]" class="icon" src="../assets/Images/Icons/Icon_RMB.png" style="width: 100%; max-width: 21px;" />して「<em>オブジェクトを作成</em>」を選びましょう。ページの上部にある画像のウィンドウが開きます。このウィンドウは次の領域に分かれています。</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true">詳細</span><span data-close-text="true">詳細</span></a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">ここではオブジェクトに名前をつけることができます。名前には半角スペースや許可されていない文字を含めることはできません（英数字および "_" 記号のみ利用できます）。覚えやすいようになるべく短い名前をつけるといいでしょう、そうすればオブジェクトが多くなってきても簡単に見分けることができます。一般的によく使われている方式は、"<span class="inline">obj_Ship</span>" や "<span class="inline">Ship_obj</span>" のように、名前の間に接頭語または接尾語（この例では obj_と_obj）を挟むというものです。</p>
    <p class="dropspot">次は必要に応じて、オブジェクトのスプライトを選びましょう。スプライト欄を左クリック<img alt="[左クリックアイコン]" class="icon" src="../assets/Images/Icons/Icon_LMB.png" style="width: 100%; max-width: 21px;" />すると<strong>アセットエクスプローラー</strong>が開き、アセットブラウザの利用可能なスプライトがこのように一覧表示されます。</p>
    <p class="dropspot"><img alt="アセットエクスプローラー" class="center" src="../assets/Images/Asset_Editors/Editor_Objects_AssetExplorer.png" style="width: 100%; max-width: 795px;" />オブジェクトにスプライトを割り当てると、<em>スプライト編集</em>ボタン<img alt="[スプライト編集アイコン]" class="icon" src="../assets/Images/Icons/Icon_EditSprite.png" style="width: 100%; max-width: 24px;" />をクリックして<a href="Sprites.htm">スプライトのプロパティ</a>を変更できるようになります。割り当てるスプライトがなく、新しく作成したい場合は、<em>スプライト追加</em>ボタン<img alt="[スプライト追加アイコン]" class="icon" src="../assets/Images/Icons/Icon_NewSprite.png" style="width: 100%; max-width: 24px;" />をクリックすると新しいスプライトを作成してオブジェクトに割り当てることができます。<em>イメージ編集</em>ボタン<img alt="[イメージ編集アイコン]" class="icon" src="../assets/Images/Icons/Icon_EditImage.png" style="width: 100%; max-width: 24px;" />をクリックすると<a href="Image_Editor.htm">イメージエディタ</a>を開き、現在のスプライトのイメージを編集できます。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#"><span data-open-text="true">コリジョンマスク</span><span data-close-text="true">コリジョンマスク</span></a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">スプライト割り当て領域の下にあるのは、特定の<strong>コリジョンマスク</strong>を指定するためのボタンです。デフォルトでは、オブジェクトのコリジョン情報は割り当てられたスプライトから生成されますが、別のスプライトの形状から生成したい場合もあるでしょう。たとえば見下ろし型のゲームで、メインのスプライトを長方形コリジョンマスクにしている場合、よりスムーズに衝突させるには円形マスクに変えたほうがいいかもしれません。そういったときは、コリジョンマスクのボタンをクリックして別のスプライトリソースを指定しましょう。オブジェクトのインスタンスをすでに割り当てたスプライトで<em>描画</em>しつつ、<em>コリジョン</em>を指定したスプライトのものにできます。コリジョンマスクについては、<a href="Sprites.htm">スプライトエディタ</a>のページでより詳しく解説されています。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#"><span data-open-text="true">プロパティ</span><span data-close-text="true">プロパティ</span></a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">プロパティに表示されているオプションは次のとおりです。<strong></strong></p>
    <ul class="dropspotlist">
      <li class="dropspot"><strong>可視</strong>: オブジェクトのインスタンスをルーム開始時に表示させるかどうかを示しています。通常は表示にしておくべきですが、非表示にしたほうが便利な場合もあります。たとえばモンスターの動きを制御するための中間地点としたり、あるいは値を監視したり、時間によってアクションを実行させるようなオブジェクトがそうなります。オブジェクトは非表示にしてもイベントに反応し、スプライトまたはマスクが割り当てられている場合は他のインスタンスとの衝突にも反応します。あくまで見えなくなるだけですが、<em><strong>Draw イベント</strong>は実行されなくなります</em>。デフォルトでは表示にチェックされています。<strong></strong></li>
      <li class="dropspot"><strong>ソリッド</strong>: チェックするとインスタンスがソリッド化し、<strong>Collision イベント</strong>の作動前に GameMaker Studio 2 側で衝突が解消されるようになります。この機能はとても簡易的なもので、実際には Collision イベントのコードまたは DnD™ が実行される直前に、インスタンスを衝突が検出される前の位置へ戻しているだけであり、有用な場面は限られています。</li>
      <li class="dropspot"><strong>永続的</strong>: 永続的にしたオブジェクトはルームが切り替わっても消えず、新しいルームに持ち越される持続的なオブジェクトとなります。これらのオブジェクトは破棄アクションまたはコードによって明示的に破棄した場合にのみ消滅します。そのためルームに置かれた永続的オブジェクトは、以降のすべてのルームにおいても利用可能なオブジェクトとなり、オブジェクトプロパティの各イベントに割り当てられているアクションを実行し続けます。ただし <strong>Create イベント</strong>は<em>例外</em>であり、発生するのは生成時の<em>一度だけ</em>で、ルーム変更時には発生しません。このオプションは、ルーム間を移動するメインキャラクターのインスタンス変数を保たせるような場合に便利ですが、永続的オブジェクトの生成・破棄はきちんと注意して適切に行ってください。もし何らかのミスがあれば、すぐさまプロジェクトにエラーが紛れ込むでしょう。</li>
    </ul>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#" style="margin-left:88px"><span data-open-text="true">永続的フラグとルームレイヤー</span><span data-close-text="true">永続的フラグとルームレイヤー</span></a>  </p>
    <div class="droptext" data-targetname="drop-down7">
      <p class="dropspot" style="margin-left: 132px">ルームでの生成時、永続的フラグが有効となっているインスタンスにはレイヤーないし深度が割り当てられます（どの関数でインスタンスを生成したかによって異なります）。ルーム変更時、前のルームと同じ名前または同じ深度のレイヤーがない場合、<strong>ルームをまたいで残ったインスタンスには新しいレイヤーが作成されて割り当てられます</strong>。インスタンスの生成時に名前つきのレイヤーを指定した場合、新しいレイヤーの名前は元レイヤーと同じになります。インスタンスに深度を割り当てた場合、新しいレイヤーの名前は "<span class="inline">_layer_XXX</span>" のようになります。この "<span class="inline">XXX</span>" は 16 進数となり、レイヤーの名前が他と同じにならないよう付加されます。これらのレイヤーは、<strong>Room End</strong> の時点でルームから削除されます。<br /><br />レイヤーと永続的インスタンスについては他にも注意点があります。インスタンスが生成時に名前つきレイヤーに割り当てられている状態で、以降のルームに同じ名前のレイヤーがあった場合、そのインスタンスは深度を無視して同じ名前のレイヤーに割り当てられます。<br /><br />最後に、永続的インスタンスが生成時と<em>同じ</em>深度のレイヤーがあるルームに移動した場合、そのレイヤーに<em>割り当てられることはなく</em>、同じ深度の新しいレイヤーが作成されます（命名ルールは上記と同じです）。</p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#" style="margin-left: 88px"><span data-open-text="true">永続的フラグとイベント</span><span data-close-text="true">永続的フラグとイベント</span></a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p class="dropspot" style="margin-left: 132px">前の段落にあるように、永続的オブジェクトでは <strong>Create イベント</strong>が<em>一度しか</em>実行されないものの、<strong>Game Start</strong> 、<strong>Game End</strong> 、<strong>Room Start</strong> 、<strong>Room End</strong> イベントはそれぞれのタイミングで実行されます。ただし <span class="inline">game_restart()</span>関数などによってゲームをリスタートした場合、<em>永続的オブジェクトはすべて削除され、ゲームによって再生成されるまでは存在しなくなります</em>。<br /><br />また、永続的オブジェクトを<strong>非アクティブ</strong>にした場合、<strong>Room End</strong> イベントが作動するまでに再アクティブにしないと別のルームに渡らなくなります。再アクティブにするには<em>ゲームの 1 ステップすべてが必要となるため</em>、そのすべてを利用できない <strong>Room End</strong> イベント内で再アクティブにすることはできません。永続的オブジェクトを非アクティブにするときは、その点を踏まえてコードを書いてください。</p>
    </div>
    <ul class="dropspotlist">
      <li class="dropspot"><strong>物理を使用</strong>: 物理を使用にチェックすると、オブジェクトが GameMaker Studio 2 によって物理世界（<strong></strong><a href="Rooms.htm">ルームエディタ</a>で設定）に組み込まれるようになります。また、チェックすると新しいウィンドウが隣に開き、オブジェクトの各インスタンスの物理プロパティを定義できます。詳しくは<a href="Object_Properties/Physics_Objects.htm">物理オブジェクト</a>の該当項目を参照してください。</li>
    </ul>
  </div>
  <p> </p>
  <p>オブジェクトエディタの最後の領域はオブジェクトの各<strong>オプション</strong>を扱うもので、以下のページで説明されています。</p>
  <ul class="colour">
    <li><a href="Object_Properties/Object_Events.htm">オブジェクトイベント</a></li>
    <li><a href="Object_Properties/Parent_Objects.htm">親オブジェクト</a></li>
    <li><a href="Object_Properties/Physics_Objects.htm">物理オブジェクト</a></li>
    <li><a href="Object_Properties/Object_Variables.htm">オブジェクト変数</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る: <a href="The_Asset_Editors.htm">アセットエディタ</a></div>
        <div style="float:right">次へ: <a href="Paths.htm">パス</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
Object Editor
Objects
-->
  <!-- TAGS
object_editor
-->

</body></html>