<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.2.1";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>オブジェクトイベント</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>オブジェクトイベント</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the events system and the different events in an object" />
  <meta name="rh-index-keywords" content="Objects - Events" />
  <meta name="search-keywords" content="events,object events,events list" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="オブジェクトイベント">
        <span>オブジェクトイベント</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>オブジェクトイベント</h1>
  <p>オブジェクトの<strong>イベント</strong>とはいったい何でしょうか？要約するとプログラムした内容を実行するための、ゲームループ内における個々のタイミングのことです。GameMaker Studio 2 はこうしたイベントの繰り返しで動きます。ルームが開始され、終了するまでの間にはこのゲームループが実行され、<strong>ステップ</strong>ごとに一連のイベントを実行およびチェックします。オブジェクトには、それらのイベントに応答するコードまたは DnD™ アクションを追加することができます（なお、ステップとはルームの速度によって決まる、ゲーム内での最小時間単位（瞬間）のことであり、<strong>フレーム</strong>とも呼びます）。</p>
  <p>オブジェクトのイベント、コードの典型的な設定例を見てみましょう。</p>
  <p><img alt="オブジェクトエディタのイベントビュー" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Events.png" style="width: 100%; max-width: 1203px;" />画像のオブジェクトにはいくつかのイベントが並んでいますが、実際にオブジェクトを作成すると、最初はイベントが何もありません。使いたいイベント、そしてイベントの作動時に取らせるオブジェクトの動作は自分で決めることになります。イベントを追加するには、リストの下側にある<em></em>「イベントを追加」ボタンをクリックしてください。以下のメニューが開きます。</p>
  <p><img alt="オブジェクトエディタのイベントリスト" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_EventList.png" style="width: 100%; max-width: 161px;" />このリストには、オブジェクトに応答させられる基本的なイベントの一覧とカテゴリが表示されており、イベントのカテゴリ内には動作を突き詰めるためのサブイベントが用意されています。たとえば <strong></strong><strong>Key Pressed</strong><img alt="[Key Pressアイコン]" src="../../assets/Images/Icons/Icon_KeyboardPress.png" style="width: 100%; max-width: 16px;" /> というイベントカテゴリをクリックすると奥にメニューが開き、オブジェクトを<em></em>任意のキーに応答させるイベント群が表示されます。イベントを決定すると、右側にコードウィンドウ（または DnD™ ワークスペースウィンドウ）が開きます。ここからコードを編集することで、そのイベントに対する動作ないし反応をオブジェクトに実装できます。</p>
  <p>オブジェクトに追加したイベントを右クリック<img alt="[右クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" style="width: 100%; max-width: 21px;" />した場合は、以下のメニュー項目が表示されます。</p>
  <p><img alt="オブジェクトエディタのイベントメニュー" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_RMBMenu.png" style="width: 100%; max-width: 292px;" />こちらは項目の一覧です。</p>
  <ul class="colour">
    <li><strong>イベントを追加</strong> - イベントリストから新しいイベントを追加します。</li>
    <li>イベントの<strong>切り取り</strong> / <strong>コピー</strong> / <strong>貼り付け</strong> - 選択したイベントを切り取り・コピー・貼り付けします。<img alt="[CTRL アイコン]" class="icon" src="../../assets/Images/Icons/Icon_Ctrl.png" style="width: 100%; max-width: 55px;" /> / <img alt="[CMD アイコン]" class="icon" src="../../assets/Images/Icons/Icon_Cmd.png" style="width: 100%; max-width: 55px;" /> + <span class="inline">X</span> 、<img alt="[CTRL アイコン]" class="icon" src="../../assets/Images/Icons/Icon_Ctrl.png" style="width: 100%; max-width: 55px;" /> / <img alt="[CMD アイコン]" class="icon" src="../../assets/Images/Icons/Icon_Cmd.png" style="width: 100%; max-width: 55px;" /> + <span class="inline">C</span> 、<img alt="[CTRL アイコン]" class="icon" src="../../assets/Images/Icons/Icon_Ctrl.png" style="width: 100%; max-width: 55px;" /> / <img alt="[CMD アイコン]" class="icon" src="../../assets/Images/Icons/Icon_Cmd.png" style="width: 100%; max-width: 55px;" /> + <span class="inline">V</span> という標準のキーボードショートカットでも同じことが可能です。</li>
    <li><strong>イベントの複製</strong> - 現在のイベントを複製します。イベントの内容はそのまま引き継がれ、新しく指定したイベントにコピーされます。</li>
    <li><strong>イベントの変更</strong> - イベントを別のものに変更します。この項目を選ぶとイベントリストが表示され、指定した別のイベントに現在のイベントの内容が移されます（同時に現在のイベントは削除されます）</li>
    <li><strong>DnD™ / コードに変換</strong> - オブジェクトのイベントはプロジェクト作成時に選択した、コードまたは Drag and Drop™ アクションのいずれかの方式で作成されますが、この項目を選ぶとプロジェクトの形式を問わず、イベントをもう一方のものに変更できます。</li>
    <li><strong>イベントの削除</strong> - 選択されているイベントをすべて削除します。</li>
  </ul>
  <p>イベントを削除する際は、<img alt="[Shift アイコン]" class="icon" src="../../assets/Images/Icons/Icon_Shift.png" style="width: 100%; max-width: 55px;" />を押しながらクリック<img alt="[左クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" style="width: 100%; max-width: 21px;" />すると複数のイベントをまとめて削除できます。なお、<strong>オブジェクトエディタ</strong>から追加したイベントはいずれも各オブジェクト内でのみ使われます。また、イベントは 2 つのタイプに分別できます。</p>
  <ul class="colour">
    <li>1 ゲームステップごとに作動するもの</li>
    <li>インスタンスがルームの端まで移動、あるいはキーボードやマウスを押したときなど、ゲームイベントによって「作動」するもの</li>
  </ul>
  <p>以下はイベントの一覧となります。</p>
  <p> </p>
  <p><img alt="Create イベントのアイコン" src="../../assets/Images/Icons/Icon_Create.png" style="width: 100%; max-width: 16px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#"><span data-open-text="true">Create</span><span data-close-text="true">Create</span></a></p>
  <div class="droptext" data-targetname="drop-down8">
    <p class="dropspot">オブジェクトのインスタンスが最初に生成されたときに起きるイベントです。ルームエディタによって配置されたシーケンス内で最初に起きるイベントであり、ルームに入ったタイミングで発生します。そのためこのイベントは、<a class="tooltip" title="A variable is a named value within a program which can be modified, stored and displayed whenever required. For example, if we have an integer variable with a name XYZ and it stores a value 10, we can then do things like A = XYZ + 10, which will set the value of the variable A to 20, since XYZ is 10 and we are adding 10 to it. You can also change variable values using operators, so doing XYZ = XYZ + 100 would modify the value of our XYZ variable to be equal to 110. Variables can also be used to store identifiers and references to different assets.">変数</a><span class="glossextra"></span>の初期化、<a href="../Timelines.htm">タイムライン</a>の開始、<a href="../Paths.htm">パス</a>の設定といった用途にもっとも適しています。あるいは一度だけ実行したいコードや、インスタンスがルームに生成された最初のタイミングで実行したいコードがある場合などにも活用できるでしょう。オブジェクトエディタから追加できる<strong>オブジェクト変数</strong>、またはルームエディタから追加できる<strong>インスタンス変数</strong>がオブジェクトにある場合、それらの変数は先に初期化され、その後で <strong>Create イベント</strong>が実行されます。</p>
    <p class="dropspot">ちなみに Create イベントで設定したものには、ルームエディタの<a href="../Room_Properties/Layer_Properties.htm">インスタンスの生成コード</a>から変更を加えることが可能です。この生成コードは Create イベントの直後に実行され、<strong>インスタンス変数</strong>を生成したり、それによってオブジェクト変数、および Create イベントに追加された変数を上書きすることができます。</p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Destroy イベントのアイコン" src="../../assets/Images/Icons/Icon_Destroy.png" style="width: 100%; max-width: 16px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#"><span data-open-text="true">Destroy</span><span data-close-text="true">Destroy</span></a></p>
  <div class="droptext" data-targetname="drop-down9">
    <p class="dropspot">このイベントはインスタンスが破棄されたタイミングで実行されます。オブジェクトの動作を用意する作業では見落とされがちですが、このイベントはとても便利なもので、敵がやられたときに爆発やパーティクルエフェクトを生じさせたり、ルームの別の場所から同じオブジェクトの新しいインスタンスを出現させたり、スコアに加点するなどといった用途に使えます。</p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Clean Up イベントのアイコン" src="../../assets/Images/Icons/Icon_Destroy.png" style="width: 100%; max-width: 16px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#"><span data-open-text="true">Clean Up</span><span data-close-text="true">Clean Up</span></a></p>
  <div class="droptext" data-targetname="drop-down10">
    <p class="dropspot"><span>ルームからオブジェクトのインスタンスが削除された後に呼び出されるイベントであり、以下の場合に作動します。</span></p>
    <ul class="dropspotlist">
      <li class="dropspot"><span>インスタンスが破棄された時</span></li>
      <li class="dropspot"><span>ルームが終了した時</span></li>
      <li class="dropspot"><span>ゲームが終了した時</span></li>
    </ul>
    <p class="dropspot"><span>このイベントはゲーム内で生じるサーフェス、データ構造などといった動的リソースを「除去」したり、インスタンスがゲームから削除されたときに<em></em>一度だけ処理を実行させるためのものです。</span></p>
    <p class="dropspot"><span>なお、このイベントは作動させた別のイベントの<em></em>直後に呼び出されますが、<strong>現在のイベントが終了するまで</strong>インスタンスがゲームから削除されることはありません。たとえば Step イベントで <span class="inline">instance_destroy()</span>を使用した場合、まず Destroy イベントが、その次に Clean Up イベントが呼び出され、それから <em></em>Step イベントの残りが最後まで実行されます。つまり <span class="inline">instance_destroy()</span>より後に呼び出されたコードも実行されることになり、コードを実行するために必要なデータ構造、あるいはリソースを除去した場合、エラーを引き起こす可能性があります。注意して扱ってください。</span>
    </p>
    <p> </p>
  </div>
  <p><img alt="Alarm イベントのアイコン" src="../../assets/Images/Icons/Icon_Alarm.png" style="width: 100%; max-width: 16px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#"><span data-open-text="true">Alarm</span><span data-close-text="true">Alarm</span></a></p>
  <div class="droptext" data-targetname="drop-down11">
    <p class="dropspot">このカテゴリには 12 のイベントがあり、それぞれがインスタンスに設定できるアラームと対応しています。<em></em>カテゴリをクリックすると以下のメニューが表示されます。</p>
    <p class="dropspot"><img alt="オブジェクトエディタの Alarm イベント" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_AlarmEvents.png" style="width: 100%; max-width: 230px;" />メニューから作成したいアラームを選択すると、イベントウィンドウに登録されてコードを追加できるようになります。アラームとは、具体的にはどのようなイベントでしょうか？これは事前に設定しなければ何もしない特別なイベントであり、設定をするとカウントダウンが始まり、カウントが 0 になると追加したコードおよびアクションを実行します。</p>
    <p class="dropspot">アラーム が 0 になってコードが実行されると、カウントは -1 となり、もう一度設定するまでは同じ値となります（そのためアラームの値が-1 より大きいかどうかをチェックすれば、アラームの動作状態を知ることができます）。たとえばオブジェクトの Create イベントで <span class="inline">alarm[0]</span> を 30 に設定した場合、<span class="inline">alarm[0]</span> イベントに追加したコードおよびアクションが実行されるまでの間に、GameMaker Studio 2 ではゲームステップが 30 カウントされることになります。なお、Alarm を 0 に設定した場合はコードが<em></em>実行されません。これはイベントは作動するものの、すぐに-1 となりコードが飛ばされるためです。イベントを 1 ステップ後に実行するときは、1 に設定しましょう。</p>
    <p class="dropspot">この便利なイベントを利用すれば、正確なタイミングで動きを設定することができます。アラームは繰り返すことも可能ですが、アラームを止めるためだけのイベントはありません。ここでは例として、3 秒ごとに右へ曲がるモンスターを作る場合について考えてみましょう。まず Create イベントでアラームをルーム速度 * 3 に設定し（ルーム速度が 30 なら 1 秒間のステップは 30 ステップとなり、それを 3 倍にすれば 3 秒になります）、次に Alarm イベントへ向きを設定するコードまたはアクションを追加し、最後にもう一度アラームをルーム速度 * 3 に設定するといった手順になるはずです。このようにすることで、一定間隔おきに処理が行われるシンプルなゲームループを築くことができます。</p>
    <p class="dropspot">注意点として、アラームにコードおよびアクションがない場合は<em></em>カウントダウンが始まりません。ただしコードやアクションを用意しなくても、コメントを 1 つでも入れておけばカウントダウンは始まり、通常と同じように設定したりチェックできるようになります。</p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Step イベントのアイコン" src="../../assets/Images/Icons/Icon_Step.png" style="width: 100%; max-width: 16px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#"><span data-open-text="true">Step</span><span data-close-text="true">Step</span></a></p>
  <div class="droptext" data-targetname="drop-down12">
    <p class="dropspot">GameMaker Studio 2 では時間が<strong>ステップ</strong>という単位（<strong>フレーム</strong>とも呼びます）に分割されており、1 秒間のステップ数はルーム速度によって決まります。1 つ 1 つのステップは、ゲーム起動中に常時実行され、各イベントをチェックしてから必要に応じて作動させるループと言えるものです。そこから連想できるように、<strong>Step イベント</strong>とはゲーム内のステップをインスタンスが存在する限り毎回チェックするイベントとなっています。</p>
    <p class="dropspot">Step イベントは、実際には以下で説明されている 3 つのサブイベントからなります。</p>
    <p class="dropspot"><img alt="オブジェクトエディタの各 Step イベント" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Step.png" style="width: 100%; max-width: 239px;" />ほとんどの場合は普通の Step イベントで問題ありませんが、どのコードをどのタイミングで実行させるかをもう少しコントロールしたい場合もあるでしょう。そのために用意されているイベントが <strong>Begin Step</strong> と <strong>End Step</strong> イベントです。これら 3 つのイベントは毎ステップごとにチェックされますが、チェックの順番が変わることは決してなく、それは GameMaker Studio 2 のエンジン更新によって他のイベントに変更が入ったとしても同様であり、何かに先んじて処理を行うにはもっとも確実な手段であるということです。</p>
    <p class="dropspot">具体的にはどのような場面で使うのかというと、連続的に実行したいコードおよびアクションがある時です。たとえば他のオブジェクトの後ろについていくオブジェクトがある場合、Step イベントならオブジェクトが移動する方向を調整し、スムーズに後ろに移動させることができます。ただし Step イベントには、くれぐれも複雑なアクションを入れないようにしてください。ルームにそのオブジェクトのインスタンスを大量に配置する場合はなおさらで、ゲームが重くなる恐れがあります。常に実行しなくても、多くの場合ではアラームを利用したり、<strong>他</strong>のイベントを作動させることで解決できます。</p>
    <p class="dropspot"> </p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Collision イベントのアイコン" src="../../assets/Images/Icons/Icon_Collision.png" style="width: 100%; max-width: 16px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down13" href="#"><span data-open-text="true">Collision</span><span data-close-text="true">Collision</span></a></p>
  <div class="droptext" data-targetname="drop-down13">
    <p class="dropspot">ゲーム作りでは、2 つ以上のオブジェクトのインスタンスがぶつかったタイミングを把握することは非常に重要ですが、そのために用意されているイベントが <strong>Collision イベント</strong>です。このイベントをオブジェクトに追加すると、指定したオブジェクトとの衝突をチェックできるようになります。</p>
    <p class="dropspot">物理が有効でない場合、オブジェクトのマスクに応じて衝突（マスクはスプライトのプロパティから設定するか、オブジェクトのプロパティから個別に割り当てます）、および重なり合っているかが計算されます。もし衝突したインスタンスのどちらかにマスクが割り当てられていない場合（あるいはスプライトにマスクが設定されていない場合）、<em></em>たとえ画像が表示されていても衝突は検出されません。</p>
    <p class="dropspot">逆に<strong>物理</strong>が有効となっている場合、衝突および衝突に対する反応は、オブジェクトの物理プロパティから設定した<strong>コリジョン形状</strong>（<em></em>フィクスチャ）に基づいたものとなります。そのため衝突を扱うコードは不要となるかもしれませんが、このイベントは衝突を判定するために必要となり、<em></em>コメント行だけでも追加しなくてはなりません。</p>
    <p class="dropspot">最後に注意点として、あらゆる衝突は 1 ゲームステップごとに、Collision イベントが作動する前に計算され、Collision イベントが実行された時点で衝突の計算、コリジョンの事前割り当てが済んでいることになります。よって仮に Collision イベントでインスタンスを生成し、衝突をチェックしようとした場合、ゲームループが次の<a class="tooltip" title="An iteration is a single pass through a set of operations in your project code. One form of iteration in computer programming is via loops. A loop will repeat a certain segment of code until a condition is met and it can proceed further. Each time the computer runs a loop, it is known as an iteration. In simple terms, iteration is the process of repeating a particular snippet of code over and over again to perform a certain action.">反復</a>に入るまで衝突の検出・解消はされません。</p>
    <p class="dropspot"> </p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Keyboard アイコン" src="../../assets/Images/Icons/Icon_Keyboard.png" style="width: 100%; max-width: 16px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#"><span data-open-text="true">Keyboard,</span><span data-close-text="true">Keyboard,</span></a> <img alt="[Keyboard Press アイコン]" src="../../assets/Images/Icons/Icon_KeyboardPress.png" style="width: 100%; max-width: 16px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#"><span data-open-text="true">Keyboard Press,</span><span data-close-text="true">Keyboard Press,</span></a> <img alt="[Keyboard Release アイコン]" src="../../assets/Images/Icons/Icon_KeyboardRelease.png" style="cursor: nwse-resize; width: 100%; max-width: 15px;" /> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#"><span data-open-text="true">Keyboard Release</span><span data-close-text="true">Keyboard Release</span></a></p>
  <div class="droptext" data-targetname="drop-down14">
    <p class="dropspot">プレイヤーがゲームをさまざまな形で操作できるようにすることは重要ですが、GameMaker Studio 2 ではそのために総合的な Keyboard イベントが用意されており、これらは 3 つのカテゴリから選択します。基本となるキーボードカテゴリでは、指定したキーが押されている限り毎ステップ続けて作動しますが、Press と Release のカテゴリにあるイベントはキーが押された / 離された最初のタイミングでのみ作動します。</p>
    <p class="dropspot">覚えておきたい点として、Keyboard はどのキーであってもルーム内のすべてのアクティブなインスタンス内で作動しますが、そのキーに対するイベントが定義されている場合にのみインスタンスは応答します。また、オブジェクトには複数の Keyboard イベントを追加でき、そのオブジェクトのインスタンスはゲーム実行中にそれらのイベントすべてに応答します。</p>
    <p class="dropspot">Keyboard イベントを追加しようとすると、キーボードのサブイベントメニューが表示されます。このメニューからチェックさせたいキーを指定してください。</p>
    <p class="dropspot"><img alt="オブジェクトエディタの各 Keyboard イベント" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Keyboard.png" style="width: 100%; max-width: 600px;" />ほとんどのキーは見てのとおりですが、項目ごとに簡単に説明しましょう。一番上に並んでいるのは矢印キーで、その下にはよく使われる修飾キーが、もう一つ下にはキーボードの他のキー（さらに項目が分かれ、<img alt="[Escape アイコン]" class="icon" src="../../assets/Images/Icons/Icon_Escape.png" style="width: 100%; max-width: 55px;" />や<img alt="[Insert アイコン]" class="icon" src="../../assets/Images/Icons/Icon_Insert.png" style="width: 100%; max-width: 55px;" />のような特定のキーを指定できます）があり、一番下には <strong>No Key</strong> と <strong>Any Key</strong> という 2 つの特別なサブイベントが並んでいます。名前のとおり、これらは 1 つでもキーが<em></em>押されているか、あるいはどのキーも<em></em>押されていないかをチェックするためのサブイベントです。なお、テンキーの数字キーは <strong>NumLock</strong> が有効でなければイベントが起きないためご注意ください。</p>
    <p class="dropspot">キーボードの <strong>Press</strong> と <strong>Release</strong> イベントは通常の Keyboard イベントとほとんど同じものですが、連続して作動せず、一度しか作動しないという違いがあります。キーボードのキーが押されたと記録されると、まず <strong>Keyboard Pressed</strong> イベント（および通常の Keyboard イベント）が起こり、キーが押されていると判定されなくなると <strong>Keyboard Release</strong> イベントが一度だけ作動します。</p>
    <p class="dropspot"> </p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Mouse アイコン" src="../../assets/Images/Icons/Icon_MouseEvent.png" style="width: 100%; max-width: 16px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down16" href="#"><span data-open-text="true">Mouse</span><span data-close-text="true">Mouse</span></a></p>
  <div class="droptext" data-targetname="drop-down16">
    <p class="dropspot">Mouse カテゴリに分けられているイベントを指定すると、ゲームの挙動をより精密に操作することができます。実際には以下のイベントからなります。</p>
    <p class="dropspot"><img alt="オブジェクトエディタの各 Mouse イベント" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Mouse.png" style="width: 100%; max-width: 439px;" />左<img alt="[左クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" style="width: 100%; max-width: 21px;" />、右<img alt="[右クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" style="width: 100%; max-width: 21px;" />、中央<img alt="[中央マウスボタンアイコン]" class="icon" src="../../assets/Images/Icons/Icon_MMB.png" style="width: 100%; max-width: 21px;" />マウスボタンのイベント（<strong>通常</strong>、<strong>Pressed</strong> 、<strong>Released</strong> のいずれか）はそれらのイベントが追加されているインスタンスのマスクに対して動作します。つまり、GameMaker Studio 2 では、Mouse イベントが存在するインスタンスのコリジョンマスクに対してこれらのボタンが押されたときにルームでのマウス位置がチェックされます。さらにインスタンスの<a class="tooltip" title="For sprites, the bounding-box is the name given to the edges of the area that collisions will initially be detected in, and it doesn't have to be the same size as the sprite it's being applied to. For sequences, the bounding box is the outer edge of the total space that one or more assets occupy in the canvas.">境界ボックス</a>と接していると、このイベントが作動します。そのためこのイベントを追加したインスタンスには有効なコリジョンマスク付きのスプライト、あるいはオブジェクトプロパティで指定できるオブジェクトのマスクスプライトを必ず用意しなくてはなりません。これらのイベントは名前のとおり、指定したマウスボタンが押された / 離されたときに一度だけ、あるいはボタンを押し続けている限りステップごとに連続して作動するものです。
    </p>
    <p class="dropspot">Mouse Enter 、Mouse Leave イベントはインスタンスのマスクに応じるという点では各クリックイベントと似ていますが、こちらはマウスのカーソルがインスタンスに接触、または離脱した（接触しなくなった）最初のタイミングで作動します。ただし連続的には作動せず、オブジェクトにカーソルが接触または離脱してから一度だけ起こります。そのためカーソルが上に乗ったら変化し、離れたら元に戻る UI のボタンなどを作成する場合に最適です。</p>
    <p class="dropspot">また、Mouse イベントには <strong>Global</strong> というサブメニューがあり、カーソルがインスタンスの上、または近くになくても記録される Mouse イベントを利用できます。これらのイベントは<em></em>あらゆるインスタンスに対して起こり、イベントにコードまたはアクションが設定されている場合、ゲームルームでのマウス位置を区別せずに実行されます。</p>
    <p class="dropspot">なお、モバイルまたはタッチスクリーンデバイスでは左マウスボタン<img alt="[左クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" style="width: 100%; max-width: 21px;" />がスクリーンへのタップとして扱われ、右マウスボタン<img alt="[右クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" style="width: 100%; max-width: 21px;" />はダブルタップとして扱われます（これらの挙動はコードから変更可能です）。</p>
    <p class="dropspot"> </p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Gestures アイコン" src="../../assets/Images/Icons/Icon_Gesture.png" style="width: 100%; max-width: 16px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down18" href="#"><span data-open-text="true">Gesture</span><span data-close-text="true">Gesture</span></a></p>
  <div class="droptext" data-targetname="drop-down18">
    <p class="dropspot">ユーザーによる画面へのタッチ（モバイル）、またはマウスのクリックと移動（それ以外のプラットフォーム）によって作動するイベントです。これらのイベントは Mouse イベントと同じように、通常版と <em>Global</em> 版があります。通常版はスプライトないしマスクがあるインスタンス、およびその<a class="tooltip" title="For sprites, the bounding-box is the name given to the edges of the area that collisions will initially be detected in, and it doesn't have to be the same size as the sprite it's being applied to. For sequences, the bounding box is the outer edge of the total space that one or more assets occupy in the canvas.">境界ボックス</a>に接触した場合にのみ作動します。いっぽうで Global 版は、画面の<em></em>どこに触れても作動します。</p>
    <p class="dropspot">以下は Gesture イベントの検出方式です。</p>
    <ul class="dropspotlist">
      <li class="dropspot"><img alt="Tap アイコン" class="icon" src="../../assets/Images/Icons/Icon_Tap.png" style="width: 100%; max-width: 20px;" /> <strong>Tap 系列</strong>- ユーザーがクリック / タッチして素早く離した時</li>
      <li class="dropspot"><img alt="Drag アイコン" class="icon" src="../../assets/Images/Icons/Icon_Drag.png" style="width: 100%; max-width: 20px;" /> <strong>Drag 系列</strong>- ユーザーがタッチ / クリックし続けながら指 / カーソルを動かした時</li>
      <li class="dropspot"><img alt="Flick アイコン" class="icon" src="../../assets/Images/Icons/Icon_Flick.png" style="width: 100%; max-width: 20px;" /> <strong>Flick 系列</strong> - ユーザーがタッチ / クリックしたまま素早く動かして離した時</li>
      <li class="dropspot"><img alt="Pinch アイコン" class="icon" src="../../assets/Images/Icons/Icon_Pinch.png" style="width: 100%; max-width: 20px;" /> <strong>Pinch 系列</strong> - ユーザーが 2 本の指を画面に当て、合わさるように / 離すように動かした時</li>
      <li class="dropspot"><img alt="Rotate アイコン" class="icon" src="../../assets/Images/Icons/Icon_Rotate.png" style="width: 100%; max-width: 20px;" /> <strong>Rotate 系列 </strong>- ユーザーが 2 本の指を画面に当て、その位置を中心に回した時</li>
    </ul>
    <p class="dropspot"><img alt="オブジェクトエディタの各 Gesture イベント" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Gesture.png" style="width: 100%; max-width: 368px;" />The different events will always contain a DS Map called the "<span class="inline">event_data</span>" map, which will contain a number of key/value pairs with data on the touch/click position and movement. For full details on all the available sub-events and how they work, please see the following section:</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="Gesture_Events.htm">The Gesture Event</a></li>
    </ul>
    <p class="dropspot"> </p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Other Icon" src="../../assets/Images/Icons/Icon_Other.png" style="width: 100%; max-width: 16px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down19" href="#"><span data-open-text="true">Other</span><span data-close-text="true">Other</span></a></p>
  <div class="droptext" data-targetname="drop-down19">
    <p class="dropspot">There are a number of special events for use when making games with GameMaker Studio 2 and they are mostly grouped together under the Other event and can be selected from the pop up menu of sub events that comes up when you select this. Here is an image of all these other events:</p>
    <p class="dropspot"><img alt="Object Editor Other Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_OtherEvents.png" style="width: 100%; max-width: 612px;" />For more information on each of the events listed in the image above, please see the following section:</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="Other_Events.htm">The Other Events</a></li>
    </ul>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Draw Event" src="../../assets/Images/Icons/Icon_Draw.png" style="width: 100%; max-width: 16px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down20" href="#"><span data-open-text="true">Draw</span><span data-close-text="true">Draw</span></a></p>
  <div class="droptext" data-targetname="drop-down20">
    <p class="dropspot">This event category is the one that governs what you see on the screen when you run your game, and is split into various discreet events:</p>
    <p class="dropspot"><img alt="Draw Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Draw.png" style="width: 100%; max-width: 268px;" />As you can see, the draw event category has multiple different event types. <strong>Draw Begin</strong>, <strong>Draw </strong>and <strong>Draw End</strong> are the "standard" draw events which you will probably use most. By default the main Draw event is always called for every instance, regardless of whether it has a sprite or not, although if you flag the instance as invisible, the event will not be triggered (so keep this in mind if you have any game logic in the draw event of an invisible object, as it won't run). The main draw event is also where GameMaker Studio 2 default draws the instance sprite when there is no code nor actions in the event (ie: you haven't added it into the event list for the object). Default drawing uses the sprite associated with the instance and will draw that with any transforms set in code or actions applied.</p>
    <p class="dropspot">The standard draw events draw <em>before </em>the <strong>Draw GUI </strong>events and <em>between </em>the <strong>Pre Draw </strong>and <strong>Post Draw </strong>events, meaning that everything that is drawn in this event is drawn beneath that of the <strong>Draw GUI </strong>event, regardless of the layer (ie: anything drawn in the Draw GUI event will always be drawn over anything drawn in the normal draw event, regardless of layer order).</p>
    <p class="dropspot">Note that the above is simply an overview of how the Draw Events work, but for full details on all the available sub-events, please see the following section:</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="Draw_Events.htm">The Draw Event</a></li>
    </ul>
    <p> </p>
    <p> </p>
    <p class="dropspot"> </p>
  </div>
  <p><img alt="Async Event" src="../../assets/Images/Icons/Icon_Async.png" style="width: 100%; max-width: 16px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down21" href="#"><span data-open-text="true">Asynchronous</span><span data-close-text="true">Asynchronous</span></a></p>
  <div class="droptext" data-targetname="drop-down21">
    <p class="dropspot">This event category is special in that the events it contains are not triggered by default by GameMaker Studio 2, but rather by the end of some other action, like the loading of a file, or the reply from a web server. The category is split into the following events:</p>
    <p class="dropspot"><img alt="Object Editor Asynchronous Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Async.png" style="width: 100%; max-width: 316px;" /></p>
    <p class="dropspot">So, say you want to add an image file to GameMaker Studio 2. Well, you would code this in another event (maybe the Create Event) of an object and then have that object draw a loading bar while waiting (for example), polling the appropriate asynchronous event until the <a class="tooltip" title="A callback is simply a function that runs and then triggers another function (or code block) when it has finished doing whatever it was assigned to do. For example, the funtion sprite_add() will trigger a callback in the asynchronous Image Loaded event when the sprite has been loaded.">callback</a> that tells GameMaker Studio 2 the file has loaded. You can then use the data returned in this event to do other things, like change room, or purchase an item.</p>
    <p class="dropspot">Note that the above is simply an overview of how the Asynchronous Event works, but for full details on all the available sub-events, please see the following section:</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="Async_Events.htm">Asynchronous Events List</a></li>
    </ul>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p>You should also note that you can name events, or at least give them a short descriptive text that will be shown beside them in the Event Editor. To do this, simply add the following into the very first line of the code editor for the event:</p>
  <p class="code">/// @description Your text here</p>
  <p>So, you could have something like this in - for example - an <strong>Alarm </strong>event</p>
  <p class="code">/// @description This is the AI Fight alarm</p>
  <p>And now in your Event Editor you'll see this:</p>
  <p><img alt="Object Editor Named Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_NamedEvents.png" style="width: 100%; max-width: 310px;" /></p>
  <p>For DnD™ users, adding a comment requires the use of the <strong>Execute Code</strong> action, which should be placed at the very top of the actions for the event, before everything else. When you add this action, you then give it the same line of code that is shown above to name the event, eg:</p>
  <p><img alt="Naming An Event In DnD" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_DnD_NamedEvents.png" style="width: 100%; max-width: 452px;" />For additional information on some of the above events and general event running order, please see the following sections:</p>
  <ul class="colour">
    <li><a href="Event_Order.htm">Event Order</a></li>
    <li><a href="Other_Events.htm">The Other Events</a></li>
    <li><a href="Draw_Events.htm">The Draw Events</a></li>
    <li><a href="Async_Events.htm">The Async Events</a></li>
    <li><a href="Gesture_Events.htm">The Gesture Events</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Objects.htm">The Object Editor</a></div>
        <div style="float:right">Next: Parent Objects</div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
Object Events
Named Events
-->
  <!-- TAGS
object_events
-->

</body></html>