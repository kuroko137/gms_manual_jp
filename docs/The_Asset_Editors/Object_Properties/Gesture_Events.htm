<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.2.1.1_1";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>Gesture イベント</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Gesture イベント</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the gesture events." />
  <meta name="rh-index-keywords" content="Objects - Gesture Events,event_data" />
  <meta name="search-keywords" content="flick,pan,rotate,gesture,gesture events,tap" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Gesture イベント">
        <span>Gesture イベント</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Gesture イベント</h1>
  <p><img alt="Gesture イベント" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Gesture.png" style="width: 100%; max-width: 368px;" /></p>
  <p>Gesture イベントのカテゴリ内にあるイベントは、GameMaker Studio 2 によってマウスの「ジェスチャー」、またはタッチスクリーンイベントが検出されたときに作動します （Gesture イベントはモバイルに向けて特化しており、他のターゲットプラットフォームでもマウスは検出されるものの、マルチタッチは検出できません）。このジェスチャーシステムの目的は、マウス / タッチを直接読み取る一連の機能よりも高い水準で入力を認識することであり、タッチ式デバイスでの一般的な入力をより簡単に実装できるよう設計されています。</p>
  <p class="note">注意: Gesture イベントは HTML5 プラットフォームでは作動しません。これはイベントを通したマルチタッチに対応していないためです。HTML5 でジェスチャーを使いたい場合は、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/Device_Input.htm">デバイス関数</a>を利用してください。</p>
  <p>ジェスチャーの検出対象は<strong>インスタンス</strong>、<strong>グローバル</strong>から指定でき、インスタンスの Gesture イベントはルーム内のインスタンスをタッチ / クリックした最初のタイミングで作動します。なお、イベントを作動させるにはインスタンスに有効なコリジョンマスクが必要となります。一方で Global の Gesture イベントはルームのどこをクリック / タッチしても作動し、同じイベントが追加されているすべてのインスタンスが対象となります（詳しくは<a href="../Sprites.htm">スプライトエディタ - コリジョンマスク</a>、<a href="../Objects.htm">オブジェクトエディタ - コリジョンマスク</a>を参照してください）。</p>
  <p>ジェスチャーが認識されると、そのジェスチャーに応じるすべてのイベントが作動します。どのようなジェスチャーでも必ず <a href="../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS マップ</a>が生成され、<span class="inline">event_data</span> という組み込み変数に保存されます。利用可能となるキーは生成されたイベントによって異なり、このページの各項に示されています。</p>
  <p class="note"><strong>注意</strong>: <span class="inline">event_data</span> 変数は Gesture イベント内でのみ有効となります。参照先となる DS マップはイベント開始時に自動で生成、終了時に破棄され、その他のときは変数の値が -1 にリセットされます。</p>
  <p>注意点として、タッチされた位置に複数のインスタンスが存在し、それぞれにジェスチャーイベントがあった場合、一番上のインスタンスだけではなく、<em></em>すべてのインスタンスのイベントが作動します。また、複数のカメラビューを利用中にインスタンスをドラッグした場合、最初にタッチ / クリックを受け付けたビューを基準として値が返されます。これはそのインスタンスへのジェスチャーに連なるイベントでも当てはまります。つまり、あるビューのインスタンスをタッチしてドラッグし、別のビューで離した場合、最初にジェスチャーを検出したビューを基準として値が返されます。</p>
  <p> </p>
  <p><img src="../../assets/Images/Icons/Icon_Tap.png" style="margin-left: 0px; width: 100%; max-width: 20px;" />  <img src="../../assets/Images/Icons/Icon_Drag.png" style="width: 100%; max-width: 20px;" />  <img src="../../assets/Images/Icons/Icon_Flick.png" style="width: 100%; max-width: 20px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true">Tap / Drag / Flick 系列イベント </span><span data-close-text="true">Tap / Drag / Flick 系列イベント</span></a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">Tap / Drag / Flick のイベントはいずれも画面を一度クリック / タッチしてから始まり、<span class="inline">event_data </span>DS マップには以下のキーが含まれます。</p>
    <ul class="dropspotlist">
    </ul>
    <table>
      <tbody>
        <tr>
          <th>キー</th>
          <th>説明</th>
        </tr>
        <tr>
          <td>"<span class="inline">gesture</span>"</td>
          <td><br /> 再生中のジェスチャーに割り当てられる<i></i>固有の ID 値です。利用することで、複数の段階に分けられるジェスチャー （Drag Start 、Dragging 、Drag End など）を関連付けることができます。</td>
        </tr>
        <tr>
          <td>"<span class="inline">touch</span>"</td>
          <td><br /> 同じジェスチャーに記録されているタッチのインデックスです。通常は 0 から始まり、押さえている指の数に応じて増加します。すべての指が離されると 0 に戻りますが、もう一度タッチしてイベントが作動したときに画面のどこかに触れている場合、0 より大きい値となります。</td>
        </tr>
        <tr>
          <td>"<span class="inline">posX</span>"</td>
          <td><br /> タッチのルーム空間における X 位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">posY</span>"</td>
          <td><br /> タッチのルーム空間における Y 位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">rawposX</span>"</td>
          <td><br /> タッチのウィンドウ空間における<i></i>元 X 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_x.htm"><span class="inline"><tt>device_mouse_raw_x()</tt></span></a>で取得できるマウス位置に相当します。</td>
        </tr>
        <tr>
          <td>"<span class="inline">rawposY</span>"</td>
          <td><br /> タッチのウィンドウ空間における<i></i>元 Y 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_y.htm"><span class="inline"><tt>device_mouse_raw_y()</tt></span></a>で取得できるマウス位置に相当します。</td>
        </tr>
        <tr>
          <td>"<span class="inline">guiposX</span>"</td>
          <td><br /> タッチの GUI 空間における X 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_x_to_gui.htm"><span class="inline"><tt>device_mouse_x_to_gui()</tt></span></a>で取得できるマウス位置に相当します。</td>
        </tr>
        <tr>
          <td>"<span class="inline">guiposY</span>"</td>
          <td><br /> タッチの GUI 空間における Y 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_y_to_gui.htm"><span class="inline"><tt>device_mouse_y_to_gui()</tt></span></a>で取得できるマウス位置に相当します。</td>
        </tr>
        <tr>
          <td>"<span class="inline">diffX</span>"</td>
          <td><br /> 現在のタッチ、直前のタッチとのルーム空間における X 位置の差分値です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">diffY</span>"</td>
          <td><br /> 現在のタッチ、直前のタッチとのルーム空間における Y 位置の差分値です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">rawdiffX</span>"</td>
          <td><br /> 現在のタッチ、直前のタッチとの X 位置（元位置）の差分値です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">rawdiffY</span>"</td>
          <td><br /> 現在のタッチ、直前のタッチとの Y 位置（元位置）の差分値です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">guidiffX</span>"</td>
          <td><br /> 現在のタッチ、直前のタッチとの GUI 空間における X 位置の差分値です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">guidiffY</span>"</td>
          <td><br /> 現在のタッチ、直前のタッチとの GUI 空間における Y 位置の差分値です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">viewstartposX</span>"</td>
          <td><br /> 同じジェスチャーにおけるルームの X 開始位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">viewstartposY</span>"</td>
          <td><br /> 同じジェスチャーにおけるルームの Y 開始位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">rawstartposX</span>"</td>
          <td><br /> 同じジェスチャーにおけるルームの元 X 開始位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">rawstartposY</span>"</td>
          <td><br /> 同じジェスチャーにおけるルームの元 Y 開始位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">guistartposX</span>"</td>
          <td><br /> 同じジェスチャーにおける GUI 空間の X 開始位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">guistartposY</span>"</td>
          <td><br /> 同じジェスチャーにおける GUI 空間の Y 開始位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">isflick</span>"</td>
          <td><b><br />Drag End イベントでのみ利用可能です</b>。ドラッグの終了時にフリックとして検出されると 1 になります。よってドラッグを扱う場合、<b>Flick イベント</b>を別に用意する必要はありません。</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#"><span data-open-text="true">Tap</span><span data-close-text="true">Tap</span></a></p>
    <div class="droptext" data-targetname="drop-down11">
      <p class="dropspot">Tap イベントは、インスタンスがタッチまたはクリックされたときに作動します。Global イベントにした場合、ルームのどこかをタッチまたはクリックしたことがゲーム側で記録されると作動します。すばやくタッチして離すとタップになりますが、長くタッチした場合はドラッグとして扱われます（この場合は Tap イベントではなくドラッグの Gesture イベントが作動します）。このイベントでは、イベントについての情報を取得できる <span class="inline">event_data</span> DS マップが生成されます。以下は使用例です。</p>
      <h4>Create イベント</h4>
      <p class="code">x_goto = x;<br /> y_goto = y;</p>
      <h4>Tap イベント</h4>
      <p class="code">x_goto = event_data[? "posX"];<br /> y_goto = event_data[? "posY"];</p>
      <h4>Step イベント</h4>
      <p class="code">var _pd = point_distance(x, y, x_goto, y_goto);<br /> move_towards_point(x_goto, y_goto, clamp(_pd, 0, 5);</p>
      <p class="dropspot">上記のコードは画面へのタップを検出し、タップした位置を取得してインスタンスをその位置に移動させています。なお、タップの検出時間をより長く、または短くしたい場合、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_drag_time.htm"><span class="inline">gesture_drag_time()</span></a>関数から設定可能です。この関数では、最初に検出されてからタップがドラッグに変わるまでの時間を設定でき、高い値にするとタップの検出時間が長く、低い値にすると短くなります（値は秒単位であり、デフォルトでは 0.16 です）。</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#"><span data-open-text="true">Double Tap</span><span data-close-text="true">Double Tap</span></a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p class="dropspot">Double Tap イベントはインスタンスを連続して 2 回タッチまたはクリックすると作動します。Global イベントにした場合、ルームのどこかを素早く 2 回タッチまたはクリックしたことがゲーム側で記録されると作動します。すばやく 2 回タッチして離すとダブルタップになりますが、1 回でも長押ししてしまうとドラッグとして扱われます（この場合は Tap イベントではなくドラッグの Gesture イベントが作動します）。このイベントでは、イベントについての情報を取得できる <span class="inline">event_data</span> DS マップが生成されます。以下は使用例です。</p>
      <h4>Create イベント</h4>
      <p class="code">x_goto = x;<br /> y_goto = y;</p>
      <h4>Double Tap イベント</h4>
      <p class="code">instance_destroy();</p>
      <p class="dropspot">上記のコードは、ダブルタップを検出するとインスタンスを破棄します。なお、関数 <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_double_tap_time.htm"><span class="inline">gesture_double_tap_time()</span></a>によってダプルタップが作動するまでのタップ間隔を設定できます（秒単位であり、デフォルト値は 0.16 です）。さらに <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_double_tap_distance.htm"><span class="inline">gesture_double_tap_distance()</span></a>関数では、タップ間の距離を設定可能です （2 回目のタップがこの距離より遠いと、通常の Tap イベントとして扱われます）。</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#"><span data-open-text="true">Drag Start</span><span data-close-text="true">Drag Start</span></a></p>
    <div class="droptext" data-targetname="drop-down7">
      <p class="dropspot">タッチまたはクリックしたまま離さないでいると、Drag Start イベントが作動します。タッチし始めてから一定時間（デフォルトでは 0.16 秒）が過ぎると 1 回だけ作動し、この時間は <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_drag_time.htm"><span class="inline">gesture_drag_time()</span></a>から変更できます。イベントの作動後は、タッチ / クリックをやめるまで Dragging イベントが毎ステップごとに作動します。このイベントでは、イベントについての情報を取得できる <span class="inline">event_data</span> DS マップが生成されます。以下は使用例です。</p>
      <h4>Create イベント</h4>
      <p class="code">drag_offsetX = 0;<br /> drag_offsetY = 0;</p>
      <h4>Drag Start イベント</h4>
      <p class="code">drag_offsetX = x - event_data[?"posX"];<br /> drag_offsetY = y - event_data[?"posY"];</p>
      <p class="dropspot">上記のコードでは、Drag Start イベントによってタッチ / クリック位置を取得し、X と Y 軸のオフセット値として利用しています。このオフセット値はインスタンスのドラッグ時に、タッチ / クリックの検出位置までインスタンスが急に飛ばないようにするための値です（以下の Dragging イベントから続きを確認できます）。</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#"><span data-open-text="true">Dragging</span><span data-close-text="true">Dragging</span></a></p>
    <div class="droptext" data-targetname="drop-down8">
      <p class="dropspot">Dragging イベントは Drag Start イベントの直後に起こり、インスタンスを （Global イベントの場合は画面を）タッチ / クリックしたまま、ドラッグしきい値の距離より大きく動かしている限り毎ステップごとに作動します。デフォルトの距離は 0.1 インチですが、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_drag_distance.htm"><span class="inline">gesture_drag_distance()</span></a>から変更可能です。動かしていない、または動かした距離がしきい値より小さいと作動しません。このイベントでは、イベントについての情報を取得できる <span class="inline">event_data</span> DS マップが生成されます。以下は使用例です。</p>
      <h4>Create イベント</h4>
      <p class="code">drag_offsetX = 0;<br /> drag_offsetY = 0;</p>
      <h4>Drag Start イベント</h4>
      <p class="code">drag_offsetX = x - event_data[?"posX"];<br /> drag_offsetY = y - event_data[?"posY"];</p>
      <h4>Dragging イベント</h4>
      <p class="code">x = event_data[?"posX"] + drag_offsetX;<br /> y = event_data[?"posY"] + drag_offsetY;</p>
      <p class="dropspot">上記のコードでは、Drag Start イベントで設定したオフセット変数を利用し、Dragging イベントの作動時にインスタンスを移動させています。</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#"><span data-open-text="true">Drag End</span><span data-close-text="true">Drag End</span></a></p>
    <div class="droptext" data-targetname="drop-down9">
      <p class="dropspot">Drag End イベントはインスタンスへの （Global イベントの場合は画面への）タッチ / クリックをやめたときに作動します。イベントについての情報を取得できる <span class="inline">event_data</span> DS マップも生成されますが、このイベントでは "<span class="inline">isflick</span>" というキーが新たに追加されます。ドラッグしてからの秒間距離をもとにフリックの判定が行われ、設定した距離よりも大きいと <span class="inline">isflick</span>" キーは true に、小さいと false になります。デフォルトでは秒間 2 インチですが、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_flick_speed.htm"><span class="inline">gesture_flick_speed()</span></a>関数によって別の値に変更可能です。なお、Flick イベントはこの "isflick" 変数が true になると作動する専用イベントとなっています。以下は Drag End イベントの使用例です。</p>
      <h4>Create イベント</h4>
      <p class="code">flickVelX = 0.0;<br /> flickVelY = 0.0;</p>
      <h4>Drag End イベント</h4>
      <p class="code">isFlick = event_data[?"isflick"];<br /> if (isFlick)<br />     {<br />     flickVelX = event_data[?"diffX"];<br />     flickVelY = event_data[?"diffY"];<br />     }<br /> else <br />     {<br />     flickVelX = 0;<br />     flickVelY = 0;<br />     }</p>
      <h4>Step イベント</h4>
      <p class="code">x += flickVelX;<br /> y += flickVelY;<br /> flickVelX *= 0.7;<br /> flickVelY *= 0.7;</p>
      <p class="dropspot">上記のコードでは、直前の Dragging イベントおよび現在の Drag End イベントにおける X / Y 位置との差分値を取得し、移動距離がフリックしきい値よりも大きい場合、Step イベントに変数を設定してインスタンスを移動させています。</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#"><span data-open-text="true">Flick</span><span data-close-text="true">Flick</span></a></p>
    <div class="droptext" data-targetname="drop-down10">
      <p class="dropspot">Flick イベントはタッチ / クリックでドラッグを開始して離したとき、ドラッグ位置、離した位置との秒間距離が 2 インチを上回っている場合に作動します（デフォルトの条件であり <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_flick_speed.htm"><span class="inline">gesture_flick_speed()</span></a>関数によって変更可能です）。このイベントでは、イベントについての情報を取得できる <span class="inline">event_data</span> DS マップが生成されます。以下は使用例です。</p>
      <h4>Create イベント</h4>
      <p class="code">flickVelX = 0.0;<br /> flickVelY = 0.0;</p>
      <h4>Flick イベント</h4>
      <p class="code">flickVelX = event_data[?"diffX"];<br /> flickVelY = event_data[?"diffY"];</p>
      <h4>Step イベント</h4>
      <p class="code">x += flickVelX;<br /> y += flickVelY;<br /> flickVelX *= 0.7;<br /> flickVelY *= 0.7;</p>
      <p class="dropspot">上記のコードでは、直前の Dragging イベントおよび現在の Flick イベントにおける X / Y 位置の差分値を取得し、移動距離がフリックしきい値よりも大きい場合、Step イベントに変数を設定してインスタンスを移動させています。</p>
    </div>
    <p> </p>
  </div>
  <p><img src="../../assets/Images/Icons/Icon_Pinch.png" style="margin-left: 60px; width: 100%; max-width: 20px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#"><span data-open-text="true">Pinch 系列イベント </span><span data-close-text="true">Pinch 系列イベント</span></a> </p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">Pinch イベントはデバイスの画面を同時に 2 箇所タッチしていると認識され、片方（あるいは両方）のタッチが一定距離より大きく移動した場合に作動します。Pinch と Rotate イベントのどちらが検出されるかは、それぞれのタッチの動きの角度によって決まります。以下は Pinch イベントの場合です。</p>
    <ul class="dropspotlist">
      <li class="dropspot">片方の指を動かさず、もう片方を反対の指に近づけるよう、または離すようにしきい値の角度内で動かしている（この角度は <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_towards.htm"><span class="inline">gesture_pinch_angle_towards()</span></a>関数、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_away.htm"><span class="inline">gesture_pinch_angle_away()</span></a>関数によって設定できます）</li>
      <li class="dropspot">両方の指を動かした場合、それぞれの速度方向がおおむね逆であり、同じ角度しきい値チェックによってほぼ一直線に動いていると判定されている</li>
    </ul>
    <p class="dropspot">上記の基準どおりのタッチと動きが検出されると Pinch イベントが作動し、イベント内には以下のキーからなる <span class="inline">event_data</span> DS マップが自動追加されます。</p>
    <ul class="dropspotlist">
    </ul>
    <table>
      <tbody>
        <tr>
          <th>キー</th>
          <th>説明</th>
        </tr>
        <tr>
          <td>"gesture"</td>
          <td><br /> 再生中のジェスチャーに割り当てられる<i></i>固有の ID 値です。利用することで、複数の段階に分けられるジェスチャー （Drag Start 、Dragging 、Drag End など）を関連付けることができます。</td>
        </tr>
        <tr>
          <td>"touch1"</td>
          <td><br /> ジェスチャーに含まれている最初のタッチのインデックスです。通常は 0 となりますが、もう一度タッチしてイベントが作動したときに画面のどこかに触れている場合、0 より大きい値となります。</td>
        </tr>
        <tr>
          <td>"touch2"</td>
          <td><br /> ジェスチャーに含まれている 2 回目のタッチのインデックスです。通常は touch1 より 1 大きい値となりますが、ほかの個所で検出されているタッチの数によって変動します。</td>
        </tr>
        <tr>
          <td>"posX1"</td>
          <td><br /> 最初のタッチのルーム空間における X 位置です。</td>
        </tr>
        <tr>
          <td>"posY1"</td>
          <td><br /> 最初のタッチのルーム空間における Y 位置です。</td>
        </tr>
        <tr>
          <td>"rawposX1"</td>
          <td><br /> 最初のタッチのウィンドウ空間における<i></i>元 X 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_x.htm"><span class="inline"><tt>device_mouse_raw_x()</tt></span></a>で取得できるマウス位置に相当します。</td>
        </tr>
        <tr>
          <td>"rawposY1"</td>
          <td><br /> 最初のタッチのウィンドウ空間における<i></i>元 Y 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_y.htm"><span class="inline"><tt>device_mouse_raw_y()</tt></span></a>で取得できるマウス位置に相当します。</td>
        </tr>
        <tr>
          <td>"guiposX1"</td>
          <td><br /> 最初のタッチの GUI 空間における X 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_x_to_gui.htm"><span class="inline"><tt>device_mouse_x_to_gui()</tt></span></a>で取得できるマウス位置に相当します。</td>
        </tr>
        <tr>
          <td>"guiposY1"</td>
          <td><br /> 最初のタッチの GUI 空間における Y 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_y_to_gui.htm"><span class="inline"><tt>device_mouse_y_to_gui()</tt></span></a>で取得できるマウス位置に相当します。</td>
        </tr>
        <tr>
          <td>"posX2"</td>
          <td><br /> 2 回目のタッチのルーム空間における X 位置です。</td>
        </tr>
        <tr>
          <td>"posY2"</td>
          <td><br /> 2 回目のタッチのルーム空間における Y 位置です。</td>
        </tr>
        <tr>
          <td>"rawposX2"</td>
          <td><br /> 2 回目のタッチのウィンドウ空間における<i></i>元 X 位置です。</td>
        </tr>
        <tr>
          <td>"rawposY2"</td>
          <td><br /> 2 回目のタッチのウィンドウ空間における<i></i>元 Y 位置です。</td>
        </tr>
        <tr>
          <td>"guiposX2"</td>
          <td><br /> 2 回目のタッチの GUI 空間における X 位置です。</td>
        </tr>
        <tr>
          <td>"guiposY2"</td>
          <td><br /> 2 回目のタッチの GUI 空間における Y 位置です。</td>
        </tr>
        <tr>
          <td>"midpointX"</td>
          <td><br /> ルーム空間における 2 つのタッチの X 位置の中間地点です。</td>
        </tr>
        <tr>
          <td>"midpointY"</td>
          <td><br /> ルーム空間における 2 つのタッチの Y 位置の中間地点です。</td>
        </tr>
        <tr>
          <td>"rawmidpointX"</td>
          <td><br /> ウィンドウ空間における元 X 位置の中間地点です。</td>
        </tr>
        <tr>
          <td>"rawmidpointY"</td>
          <td><br /> ウィンドウ空間における元 Y 位置の中間地点です。</td>
        </tr>
        <tr>
          <td>"guimidpointX"</td>
          <td><br /> GUI 空間における X 位置の中間地点です。</td>
        </tr>
        <tr>
          <td>"guimidpointY"</td>
          <td><br /> GUI 空間における Y 位置の中間地点です。</td>
        </tr>
        <tr>
          <td>"relativescale"</td>
          <td><br /> ジェスチャーの直前のイベントとのスケール差分値です（ <b>Pinch In</b> のイベントでは必ず 1.0 より小さくなり、<b>Pinch Out</b> のイベントでは必ず 1.0 より大きくなります）。</td>
        </tr>
        <tr>
          <td>"absolutescale"</td>
          <td><br /> ジェスチャー開始時に指が置かれていた位置との相対スケールです（たとえば指同士の距離が半分となった場合は 0.5 、倍となった場合は 2.0 になります）。</td>
        </tr>
      </tbody>
    </table>
    <p class="dropspot"> </p>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#"><span data-open-text="true">Pinch Start</span><span data-close-text="true">Pinch Start</span></a></p>
    <div class="droptext" data-targetname="drop-down12">
      <p class="dropspot">Pinch Start イベントはインスタンスを（イベントが Global なら画面を）2 本の「指」でタッチしたまま、片方または両方の指を動かしたときに作動します。タッチしてから 2 本の指を離すように、あるいは近づけるように最小判定距離より大きく動かし（デフォルトでは 0.1 ですが <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_distance.htm"><span class="inline">gesture_pinch_distance()</span></a>によって変更可能です）、さらにタッチ間の角度が定義値以内であれば（デフォルトでは 45° ですが <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_towards.htm"><span class="inline">gesture_pinch_angle_towards()</span></a>および <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_away.htm"><span class="inline">gesture_pinch_angle_away()</span></a>によって変更可能です）Pinch Start イベントが作動します。このイベントでは変数を設定したり、位置情報を保存して後のイベントから利用できます。以下は使用例です。</p>
      <h4>Pinch Start イベント</h4>
      <p class="code">pinching = true;<br /> pinch_x = event_data[? "midpointX"]; pinch_y = event_data[? "midpointY"];</p>
      <p class="dropspot">上記のコードは、ピンチのジェスチャーを検出し、中間地点を保存します。</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down13" href="#"><span data-open-text="true">Pinch In / Pinch Out</span><span data-close-text="true">Pinch In / Pinch Out</span></a></p>
    <div class="droptext" data-targetname="drop-down13">
      <p class="dropspot">Pinch In と Pinch Out のイベントはステップごとに起こり、タッチしてから動かした距離が最小しきい値より大きい場合に作動し（デフォルトの距離は +/- 0.1 インチですが、gesture_pinch_distance() 関数によって変更可能です）、動かさなければ作動しません。このイベントでは、イベントについての情報を取得できる <span class="inline">event_data</span> DS マップが生成されます。以下は使用例です。</p>
      <h4>Pinch In / Pinch Out イベント (Global)</h4>
      <p class="code">var _scale = event_data[? "relativescale"];<br /> var _w = camera_get_view_width(view_camera[0]);<br /> var _h = camera_get_view_height(view_camera[0]);<br /> var _x = camera_get_view_x(view_camera[0]) + (_w / 2);<br /> var _y = camera_get_view_y(view_camera[0]) + (_h / 2);<br /> <br /> _w *= _scale;<br /> _h = _w * (room_height / room_width);<br /> _x -= _w / 2;<br /> _y -= _h / 2;<br /> <br /> camera_set_view_pos(view_camera[0], _x, _y);<br /> camera_set_view_size(view_camera[0], _w, _h);</p>
      <p class="dropspot">上記のコードは、タッチの相対スケールに合わせてビューを拡大縮小します。</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#"><span data-open-text="true">Pinch End</span><span data-close-text="true">Pinch End</span></a><strong></strong></p>
    <div class="droptext" data-targetname="drop-down14">
      <p class="dropspot">Pinch End イベントはデバイスからいずれか（または両方）の指を離すと作動し、イベントについての情報を取得できる <span class="inline">event_data</span> DS マップが生成されます。以下は使用例です。</p>
      <h4>Pinch End イベント</h4>
      <p class="code">var _pinchx = event_data[? "midpointX"];<br /> var _pinchy = event_data[? "midpointY"];<br /> var _w = camera_get_view_width(view_camera[0]);<br /> var _h = camera_get_view_height(view_camera[0]);<br /> var _x = _pinchx - (_w / 2);<br /> var _y = _pinchy - (_h / 2);<br /> <br /> camera_set_view_pos(view_camera[0], _x, _y);</p>
      <p class="dropspot">上記のコードではタッチが解除されたとき、2 つのタッチの中間地点に合わせてビューの位置を設定します。</p>
      <p><strong></strong></p>
    </div>
    <p class="dropspot"> </p>
  </div>
  <p><img src="../../assets/Images/Icons/Icon_Rotate.png" style="margin-left: 56px; width: 100%; max-width: 20px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down15" href="#"><span data-open-text="true">Rotate 系列イベント </span><span data-close-text="true">Rotate 系列イベント</span></a></p>
  <div class="droptext" data-targetname="drop-down15">
    <p class="dropspot">Rotate イベントはデバイスの画面を同時に 2 箇所タッチしていると認識され、時間内に一貫した回転が見られると作動します。Pinch と Rotate イベントのどちらが検出されるかは、それぞれのタッチの動きの角度によって決まります。以下は Rotate イベントの場合です。</p>
    <ul class="dropspotlist">
      <li class="dropspot">両方の指で最小時間より長く押し続ける（デフォルトでは 0.16 秒ですが、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_time.htm"><span class="inline">gesture_rotate_time()</span></a>関数から変更可能です）</li>
      <li class="dropspot">最小時間内に一貫した方向に回転させる（時間内に回転の方向が変わってしまうと回転の開始となりません）</li>
      <li class="dropspot">回転量が最小角度しきい値を上回っている（デフォルトでは 5° ですが、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_angle.htm"><span class="inline">gesture_rotate_angle()</span></a>関数によって変更可能です）</li>
    </ul>
    <p class="dropspot">上記の基準どおりのタッチと動きが検出されると Rotate イベントが作動し、イベント内には以下のキーからなる <span class="inline">event_data</span> DS マップが自動追加されます。</p>
    <ul class="dropspotlist">
    </ul>
    <table>
      <tbody>
        <tr>
          <th>キー</th>
          <th>説明</th>
        </tr>
        <tr>
          <td>"gesture"</td>
          <td><br /> 再生中のジェスチャーに割り当てられる<i></i>固有の ID 値です。利用することで、複数の段階に分けられるジェスチャー （Drag Start 、Dragging 、Drag End など）を関連付けることができます。</td>
        </tr>
        <tr>
          <td>"touch1"</td>
          <td><br /> ジェスチャーに含まれている最初のタッチのインデックスです。通常は 0 となりますが、もう一度タッチしてイベントが作動したときに画面のどこかに触れている場合、0 より大きい値となります。</td>
        </tr>
        <tr>
          <td>"touch2"</td>
          <td><br /> ジェスチャーに含まれている 2 回目のタッチのインデックスです。通常は touch1 より 1 大きい値となりますが、ほかの個所で検出されているタッチの数によって変動します。</td>
        </tr>
        <tr>
          <td>"posX1"</td>
          <td><br /> 最初のタッチのルーム空間における X 位置です。</td>
        </tr>
        <tr>
          <td>"posY1"</td>
          <td><br /> 最初のタッチのルーム空間における Y 位置です。</td>
        </tr>
        <tr>
          <td>"rawposX1"</td>
          <td><br /> 最初のタッチのウィンドウ空間における<i></i>元 X 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_x.htm"><span class="inline"><tt>device_mouse_raw_x()</tt></span></a>で取得できるマウス位置に相当します。</td>
        </tr>
        <tr>
          <td>"rawposY1"</td>
          <td><br /> 最初のタッチのウィンドウ空間における<i></i>元 Y 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_y.htm"><span class="inline"><tt>device_mouse_raw_y()</tt></span></a>で取得できるマウス位置に相当します。</td>
        </tr>
        <tr>
          <td>"guiposX1"</td>
          <td><br /> 最初のタッチの GUI 空間における X 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_x_to_gui.htm"><span class="inline"><tt>device_mouse_x_to_gui()</tt></span></a>で取得できるマウス位置に相当します。</td>
        </tr>
        <tr>
          <td>"guiposY1"</td>
          <td><br /> 最初のタッチの GUI 空間における Y 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_y_to_gui.htm"><span class="inline"><tt>device_mouse_y_to_gui()</tt></span></a>で取得できるマウス位置に相当します。</td>
        </tr>
        <tr>
          <td>"posX2"</td>
          <td><br /> 2 回目のタッチのルーム空間における X 位置です。</td>
        </tr>
        <tr>
          <td>"posY2"</td>
          <td><br /> 2 回目のタッチのルーム空間における Y 位置です。</td>
        </tr>
        <tr>
          <td>"rawposX2"</td>
          <td><br /> 2 回目のタッチのウィンドウ空間における<i></i>元 X 位置です。</td>
        </tr>
        <tr>
          <td>"rawposY2"</td>
          <td><br /> 2 回目のタッチのウィンドウ空間における<i></i>元 Y 位置です。</td>
        </tr>
        <tr>
          <td>"guiposX2"</td>
          <td><br /> 2 回目のタッチの GUI 空間における X 位置です。</td>
        </tr>
        <tr>
          <td>"guiposY2"</td>
          <td><br /> 2 回目のタッチの GUI 空間における Y 位置です。</td>
        </tr>
        <tr>
          <td>"pivotX"</td>
          <td><br /> ルーム空間における回転軸の X 位置です。</td>
        </tr>
        <tr>
          <td>"pivotY"</td>
          <td><br /> ルーム空間における回転軸の Y 位置です。</td>
        </tr>
        <tr>
          <td>"rawpivotX"</td>
          <td><br /> ウィンドウ空間における回転軸の元 X 位置です。</td>
        </tr>
        <tr>
          <td>"rawpivotY"</td>
          <td><br /> ウィンドウ空間における回転軸の元 Y 位置です。</td>
        </tr>
        <tr>
          <td>"guipivotX"</td>
          <td><br /> GUI 空間における回転軸の X 位置です。</td>
        </tr>
        <tr>
          <td>"guipivotY"</td>
          <td><br /> GUI 空間における回転軸の Y 位置です。</td>
        </tr>
        <tr>
          <td>"relativeangle"</td>
          <td><br /> ジェスチャーの直前のイベントと比較した回転の差分値であり、度数で表されます。</td>
        </tr>
        <tr>
          <td>"absoluteangle"</td>
          <td><br /> ジェスチャー開始時に指が置かれていた位置との角度の差分値であり、度数で表されます。たとえばジェスチャーを開始してから指で 4 分の 1 回転させた場合、向きに応じて 90° または-90° になります。</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down16" href="#"><span data-open-text="true">Rotate Start</span><span data-close-text="true">Rotate Start</span></a></p>
    <div class="droptext" data-targetname="drop-down16">
      <p class="dropspot">Rotate Start イベントはインスタンスを（イベントが Global なら画面を）2 本の「指」でタッチしたまま、片方または両方の指で開始位置から回転させたときに作動します。短時間のうちに回転させる必要があり（デフォルトでは 0.16 秒ですが <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_time.htm"><span class="inline">gesture_rotate_time()</span></a>関数によって変更可能です）、最小しきい値より大きい角度でなければ作動しません（しきい値のデフォルトは 5° ですが <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_angle.htm"><span class="inline">gesture_rotate_angle()</span></a>関数によって変更可能です）。このどちらも true として判定されると Rotate Start が作動します。このイベントでは変数を設定したり、位置情報を保存して後の Rotate イベントから利用できます。以下は使用例です。</p>
      <h4>Create イベント</h4>
      <p class="code">rotating = false;<br /> view_a = camera_get_view_angle(view_camera[0]);</p>
      <h4>Rotate Start イベント</h4>
      <p class="code">rotating = true;</p>
      <p class="dropspot">上記のコードではビューカメラを回転させるための変数を設定し、Rotate Start イベントでそのうちの 1 つを true に変更しています。</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down17" href="#"><span data-open-text="true">Rotating</span><span data-close-text="true">Rotating</span></a></p>
    <div class="droptext" data-targetname="drop-down17">
      <p class="dropspot">Rotating イベントは画面にタッチしてから回転させるたびに、動きが最小角度しきい値よりも大きい場合にステップごとに作動します（デフォルトでは 5° ですが <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_angle.htm"><span class="inline">gesture_rotate_angle()</span></a>関数によって変更可能です）。このイベントでは以下のように変数を設定したり、インスタンスの操作を行うことができます。</p>
      <h4>Rotating イベント</h4>
      <p class="code">var _relangle = event_data[?"relativeangle"];<br /> var _a = camera_get_view_angle(view_camera[0]);<br /> _a += _relangle;<br /> camera_set_view_angle(view_camera[0], _a);</p>
      <p class="dropspot">上記のコードはタッチの回転する動きに合わせてカメラビューを回転させます。</p>
      <p class="dropspot"> <strong></strong></p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down18" href="#"><span data-open-text="true">Rotate End</span><span data-close-text="true">Rotate End</span></a><strong></strong></p>
    <div class="droptext" data-targetname="drop-down18">
      <p class="dropspot">Rotate End イベントはジェスチャー開始後、片方（または両方）の指を画面から離したときに作動します。このイベントでは以下のように変数を設定したり、インスタンスの操作を行うことができます。</p>
      <h4>Rotate End イベント</h4>
      <p class="code">rotating = false;</p>
      <h4>Step イベント</h4>
      <p class="code">if !rotating<br />     {<br />     var _a = camera_get_view_angle(view_camera[0]);<br />     var _adif = angle_difference(view_a, _a);<br />     _a += median(-5, _adif, 5);<br />     camera_set_view_angle(view_camera[0], _a);<br />     }</p>
      <p class="dropspot">上記のコードでは、Rotate End によってジェスチャーの終了が検出されると変数を代入しています。この変数は Step イベントにおいて、ビューカメラの回転を元の位置に戻すためのフラグとして扱われています。</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る: <a href="Object_Events.htm">オブジェクトイベント</a></div>
        <div style="float:right">次へ: <a href="Event_Order.htm">イベントの順番</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
Gesture Events
Flick Events
Pan Events
Rotate Events
Tap Events
Gestures
-->
  <!-- TAGS
gesture_events
-->

</body></html>