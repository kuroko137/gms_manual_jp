<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.2.1.1_1";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>Gesture イベント</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Gesture イベント</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the gesture events." />
  <meta name="rh-index-keywords" content="Objects - Gesture Events,event_data" />
  <meta name="search-keywords" content="flick,pan,rotate,gesture,gesture events,tap" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Gesture イベント">
        <span>Gesture イベント</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Gesture イベント</h1>
  <p><img alt="Gesture イベント" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Gesture.png" style="width: 100%; max-width: 368px;" /></p>
  <p>Gesture イベントのカテゴリ内にあるイベントは、GameMaker Studio 2 によってマウスの「ジェスチャー」、またはタッチスクリーンイベントが検出されたときに作動します （Gesture イベントはモバイルに向けて特化しており、他のターゲットプラットフォームでもマウスは検出されるものの、マルチタッチは検出できません）。このジェスチャーシステムの目的は、マウス / タッチを直接読み取る一連の機能よりも高い水準で入力を認識することであり、タッチ式デバイスでの一般的な入力をより簡単に実装できるよう設計されています。</p>
  <p class="note">注意: Gesture イベントは HTML5 プラットフォームでは作動しません。これはイベントを通したマルチタッチに対応していないためです。HTML5 でジェスチャーを使いたい場合は、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/Device_Input.htm">デバイス関数</a>を利用してください。</p>
  <p>ジェスチャーの検出対象は<strong>インスタンス</strong>、<strong>グローバル</strong>から指定でき、インスタンスの Gesture イベントはルーム内のインスタンスをタッチ / クリックした最初のタイミングで作動します。なお、イベントを作動させるにはインスタンスに有効なコリジョンマスクが必要となります。一方で Global の Gesture イベントはルームのどこをクリック / タッチしても作動し、同じイベントが追加されているすべてのインスタンスが対象となります（詳しくは<a href="../Sprites.htm">スプライトエディタ - コリジョンマスク</a>、<a href="../Objects.htm">オブジェクトエディタ - コリジョンマスク</a>を参照してください）。</p>
  <p>ジェスチャーが認識されると、そのジェスチャーに応じるすべてのイベントが作動します。どのようなジェスチャーでも必ず <a href="../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS マップ</a>が生成され、<span class="inline">event_data</span> という組み込み変数に保存されます。利用可能となるキーは生成されたイベントによって異なり、このページの各項に示されています。</p>
  <p class="note"><strong>注意</strong>: <span class="inline">event_data</span> 変数は Gesture イベント内でのみ有効となります。参照先となる DS マップはイベント開始時に自動で生成、終了時に破棄され、その他のときは変数の値が -1 にリセットされます。</p>
  <p>注意点として、タッチされた位置に複数のインスタンスが存在し、それぞれにジェスチャーイベントがあった場合、一番上のインスタンスだけではなく、<em></em>すべてのインスタンスのイベントが作動します。また、複数のカメラビューを利用中にインスタンスをドラッグした場合、最初にタッチ / クリックを受け付けたビューを基準として値が返されます。これはそのインスタンスへのジェスチャーに連なるイベントでも当てはまります。つまり、あるビューのインスタンスをタッチしてドラッグし、別のビューで離した場合、最初にジェスチャーを検出したビューを基準として値が返されます。</p>
  <p> </p>
  <p><img src="../../assets/Images/Icons/Icon_Tap.png" style="margin-left: 0px; width: 100%; max-width: 20px;" />  <img src="../../assets/Images/Icons/Icon_Drag.png" style="width: 100%; max-width: 20px;" />  <img src="../../assets/Images/Icons/Icon_Flick.png" style="width: 100%; max-width: 20px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true">Tap / Drag / Flick の各イベント </span><span data-close-text="true">Tap / Drag / Flick の各イベント</span></a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">Tap / Drag / Flick のイベントは画面を一度クリック / タッチすると始まり、<span class="inline">event_data</span>DS マップには以下のキーが含まれます。</p>
    <ul class="dropspotlist">
    </ul>
    <table>
      <tbody>
        <tr>
          <th>キー</th>
          <th>説明</th>
        </tr>
        <tr>
          <td>"<span class="inline">gesture</span>"</td>
          <td><br /> 再生されているジェスチャーの<i></i>固有 ID 値です。この ID によって、複数の段階に分かれているジェスチャー （Drag Start 、Dragging 、Drag End など）を繋ぎ合わせることができます。</td>
        </tr>
        <tr>
          <td>"<span class="inline">touch</span>"</td>
          <td><br /> 同じジェスチャーにおけるタッチのインデックスです。通常は 0 から始まり、押さえつける指の数に応じて増加します。すべての指が離されると 0 に戻りますが、もう一度タッチしてイベントが作動したときに画面のほかの部分に触れている場合、0 より大きい値となります。</td>
        </tr>
        <tr>
          <td>"<span class="inline">posX</span>"</td>
          <td><br /> タッチのルーム空間における X 位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">posY</span>"</td>
          <td><br /> タッチのルーム空間における Y 位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">rawposX</span>"</td>
          <td><br /> タッチのウィンドウ空間における<i></i>元 X 位置です（ <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_x.htm"><span class="inline"><tt>device_mouse_raw_x()</tt></span></a>で取得できるマウス位置と同一です）。</td>
        </tr>
        <tr>
          <td>"<span class="inline">rawposY</span>"</td>
          <td><br /> タッチのウィンドウ空間における Y 位置（<i></i>元座標）であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_y.htm"><span class="inline"><tt>device_mouse_raw_y()</tt></span></a>で取得できるマウス位置と同一です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">guiposX</span>"</td>
          <td><br /> タッチの GUI 空間における X 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_x_to_gui.htm"><span class="inline"><tt>device_mouse_x_to_gui()</tt></span></a>で取得できるマウス位置と同一です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">guiposY</span>"</td>
          <td><br /> タッチの GUI 空間における Y 位置であり、<a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_y_to_gui.htm"><span class="inline"><tt>device_mouse_y_to_gui()</tt></span></a>で取得できるマウス位置と同一です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">diffX</span>"</td>
          <td><br /> 同じジェスチャー内での、現在のタッチ位置と最後のタッチ位置のルーム空間における X の差分です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">diffY</span>"</td>
          <td><br /> 同じジェスチャー内での、現在のタッチ位置と最後のタッチ位置のルーム空間における Y の差分です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">rawdiffX</span>"</td>
          <td><br /> 同じジェスチャー内での、現在のタッチ位置と最後のタッチ位置の X の元差分です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">rawdiffY</span>"</td>
          <td><br /> 同じジェスチャー内での、現在のタッチ位置と最後のタッチ位置の Y の元差分です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">guidiffX</span>"</td>
          <td><br /> 同じジェスチャー内での、現在のタッチ位置と最後のタッチ位置の GUI 空間における X の差分です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">guidiffY</span>"</td>
          <td><br /> 同じジェスチャー内での、現在のタッチ位置と最後のタッチ位置の GUI 空間における Y の差分です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">viewstartposX</span>"</td>
          <td><br /> 現在のジェスチャーにおけるルームの X 開始位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">viewstartposY</span>"</td>
          <td><br /> 現在のジェスチャーにおけるルームの Y 開始位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">rawstartposX</span>"</td>
          <td><br /> 現在のジェスチャーにおけるルームの元 X 始点座標です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">rawstartposY</span>"</td>
          <td><br /> 現在のジェスチャーにおけるルームの元 Y 始点座標です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">guistartposX</span>"</td>
          <td><br /> 現在のジェスチャーにおける GUI 空間の X 開始位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">guistartposY</span>"</td>
          <td><br /> 現在のジェスチャーにおける GUI 空間の Y 開始位置です。</td>
        </tr>
        <tr>
          <td>"<span class="inline">isflick</span>"</td>
          <td><b><br />Drag End イベントでのみ利用可能です</b>。フリックによるドラッグの終了が検出されると 1 に設定されます。そのためドラッグの処理をする際、<b>Flick イベント</b>を別に用意する必要はありません。</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#"><span data-open-text="true">Tap</span><span data-close-text="true">Tap</span></a></p>
    <div class="droptext" data-targetname="drop-down11">
      <p class="dropspot">The Tap event will be triggered when an instance has been touched or clicked or - if it is a global event - when the game registers a touch or click anywhere in the room. A tap is considered a quick touch and release, and if the touch lasts too long then it will be considered a Drag (and trigger the Drag gesture events instead of the Tap event). This event will generate an <span class="inline">event_data</span> DS map which you can then use to get information about the event. For example:</p>
      <h4>Create Event</h4>
      <p class="code">x_goto = x;<br /> y_goto = y;</p>
      <h4>Tap Event</h4>
      <p class="code">x_goto = event_data[? "posX"];<br /> y_goto = event_data[? "posY"];</p>
      <h4>Step Event</h4>
      <p class="code">var _pd = point_distance(x, y, x_goto, y_goto);<br /> move_towards_point(x_goto, y_goto, clamp(_pd, 0, 5);</p>
      <p class="dropspot">The above code will detect a tap on the screen and then get the position of the tap to move the instance to that position. Note that if you want to have a longer or shorter tap detection time then you can set it with the function <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_drag_time.htm"><span class="inline">gesture_drag_time()</span></a>. This sets the time between the initial detection and the tap becoming a drag, so set it to a higher value to make tap detection longer or a lower value to make it shorter (value is in seconds and defaults to 0.16).</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#"><span data-open-text="true">Double Tap</span><span data-close-text="true">Double Tap</span></a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p class="dropspot">The Double Tap event will be triggered when an instance has been touched or clicked twice in quick succession (or - if it is a global event - when the game registers two quick touches or clicks anywhere in the room). A double tap is considered two quick touches and releases, but if any of the touches lasts too long then it will be considered a Drag (and trigger the Drag gesture events instead of the Double Tap event). This event will generate an <span class="inline">event_data</span> DS map which you can then use to get information about the event. For example:</p>
      <h4>Create Event</h4>
      <p class="code">x_goto = x;<br /> y_goto = y;</p>
      <h4>Double Tap Event</h4>
      <p class="code">instance_destroy();</p>
      <p class="dropspot">The above code simply detects a double tap and then destroys the instance. Note that you can set the time between taps to trigger a double tap using the function <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_double_tap_time.htm"><span class="inline">gesture_double_tap_time()</span></a> (which has a default value - in seconds - of 0.16) and you can also set the distance for detection between taps with the function <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_double_tap_distance.htm"><span class="inline">gesture_double_tap_distance()</span></a> (if a second tap is detected outside of this distance it will be considered a regular tap event).</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#"><span data-open-text="true">Drag Start</span><span data-close-text="true">Drag Start</span></a></p>
    <div class="droptext" data-targetname="drop-down7">
      <p class="dropspot">The Drag Start event will be triggered when the user maintains a touch or click without releasing it. It will be triggered once when a set time has passed after the initial touch, which is 0.16 seconds by default (although you can set this to any other value in seconds using the function <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_drag_time.htm"><span class="inline">gesture_drag_time()</span></a>). After this event has been triggered, and as long as the user has a touch/click held down, then the Dragging event will be triggered every step until the touch/click has been released. This event will generate an <span class="inline">event_data</span> DS map which you can then use to get information about the event. For example:</p>
      <h4>Create Event</h4>
      <p class="code">drag_offsetX = 0;<br /> drag_offsetY = 0;</p>
      <h4>Drag Start Event</h4>
      <p class="code">drag_offsetX = x - event_data[?"posX"];<br /> drag_offsetY = y - event_data[?"posY"];</p>
      <p class="dropspot">The above code uses the Drag Start event to get the position of the touch/click and use it to set an offset value for the x and y axis. This can then be used when dragging the instance to ensure that it doesn't "jump" to the position that the touch/click was detected at (see the Dragging event below for a continuation of this example).</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#"><span data-open-text="true">Dragging</span><span data-close-text="true">Dragging</span></a></p>
    <div class="droptext" data-targetname="drop-down8">
      <p class="dropspot">The Dragging event is triggered after the Drag Start event, and will be triggered for every step that the user maintains the touch/click on the instance (or the screen, if it's a global event) and moves more than the defined dragging threshold. This distance is 0.1 inches by default but can be set using the function <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_drag_distance.htm"><span class="inline">gesture_drag_distance()</span></a>. If there is no movement or the movement is under the defined threshold, the event will not be triggered. This event will generate an <span class="inline">event_data</span> DS map which you can then use to get information about the event. For example:</p>
      <h4>Create Event</h4>
      <p class="code">drag_offsetX = 0;<br /> drag_offsetY = 0;</p>
      <h4>Drag Start Event</h4>
      <p class="code">drag_offsetX = x - event_data[?"posX"];<br /> drag_offsetY = y - event_data[?"posY"];</p>
      <h4>Dragging Event</h4>
      <p class="code">x = event_data[?"posX"] + drag_offsetX;<br /> y = event_data[?"posY"] + drag_offsetY;</p>
      <p class="dropspot">The example code above uses the offset variables set in the Drag Start event to move the instance when the Dragging event is triggered.</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#"><span data-open-text="true">Drag End</span><span data-close-text="true">Drag End</span></a></p>
    <div class="droptext" data-targetname="drop-down9">
      <p class="dropspot">The Drag End event is triggered when the user releases the touch/click on the instance (or the screen if the event is global). This event will generate an <span class="inline">event_data</span> DS map which you can then use to get information about the event, but in this event the map will have an extra key: "<span class="inline">isflick</span>". Flick is calculated as the distance per second that the drag has occurred over, and the value for the "<span class="inline">isflick</span>" key will be true if it is greater than the defined distance per second value, or false otherwise. Note that the default is 2 inches per second, but you can set it to another value using the function <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_flick_speed.htm"><span class="inline">gesture_flick_speed()</span></a>. Also note that there is a dedicated Flick event which will also be triggered if the "isflick" variable is true. An example of use would be:</p>
      <h4>Create Event</h4>
      <p class="code">flickVelX = 0.0;<br /> flickVelY = 0.0;</p>
      <h4>Drag End Event</h4>
      <p class="code">isFlick = event_data[?"isflick"];<br /> if (isFlick)<br />     {<br />     flickVelX = event_data[?"diffX"];<br />     flickVelY = event_data[?"diffY"];<br />     }<br /> else <br />     {<br />     flickVelX = 0;<br />     flickVelY = 0;<br />     }</p>
      <h4>Step Event</h4>
      <p class="code">x += flickVelX;<br /> y += flickVelY;<br /> flickVelX *= 0.7;<br /> flickVelY *= 0.7;</p>
      <p class="dropspot">The above code simply gets the difference in x and y position of the last Dragging event and the current Drag End event, and if the movement has been greater than the flick threshold, it sets some variables that are use to the move the instance in the step event.</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#"><span data-open-text="true">Flick</span><span data-close-text="true">Flick</span></a></p>
    <div class="droptext" data-targetname="drop-down10">
      <p class="dropspot">The Flick event is only triggered when a touch/click has been held, dragged and then released and the distance between the last drag position and the release position is greater than 2 inches per second (this is the default setting, although this can be changed using the function <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_flick_speed.htm"><span class="inline">gesture_flick_speed()</span></a>). This event will generate an <span class="inline">event_data</span> DS map which you can then use to get information about the event. For example:</p>
      <h4>Create Event</h4>
      <p class="code">flickVelX = 0.0;<br /> flickVelY = 0.0;</p>
      <h4>Flick Event</h4>
      <p class="code">flickVelX = event_data[?"diffX"];<br /> flickVelY = event_data[?"diffY"];</p>
      <h4>Step Event</h4>
      <p class="code">x += flickVelX;<br /> y += flickVelY;<br /> flickVelX *= 0.7;<br /> flickVelY *= 0.7;</p>
      <p class="dropspot">The above code simply gets the difference in x and y position of the last Dragging event and the current Flick event, and if the movement has been greater than the flick threshold, it sets some variables that are use to the move the instance in the step event.</p>
    </div>
    <p> </p>
  </div>
  <p><img src="../../assets/Images/Icons/Icon_Pinch.png" style="margin-left: 60px; width: 100%; max-width: 20px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#"><span data-open-text="true">Pinch Events</span><span data-close-text="true">Pinch Events</span></a> </p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">The "Pinch" events are based on two touches to the devices screen being recognised at once, where one (or both) have moved more than a certain distance. The angle of movement of the touches along with the movement of each touch is what will determine the detection of a Pinch or Rotate event, where (in the case of the Pinch Event type):</p>
    <ul class="dropspotlist">
      <li class="dropspot">If one of the touches isn't moving, the other must be moving towards it or away from it within a threshold angle (which can be set using the functions <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_towards.htm"><span class="inline">gesture_pinch_angle_towards()</span></a> and - <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_away.htm"><span class="inline">gesture_pinch_angle_away()</span></a>).</li>
      <li class="dropspot">If both touches are moving, their velocities must be in approximately opposite directions and the same angular threshold check is also done to ensure the touches are moving in approximate alignment.</li>
    </ul>
    <p class="dropspot">When two touches and a movement are detected with the above criteria, a Pinch Event will be triggered, and in each of the events the <span class="inline">event_data</span> DS Map will be populated with the following keys:</p>
    <ul class="dropspotlist">
    </ul>
    <table>
      <tbody>
        <tr>
          <th>キー</th>
          <th>説明</th>
        </tr>
        <tr>
          <td>"gesture"</td>
          <td><br /> 再生されているジェスチャーの<i></i>固有 ID 値です。この ID によって、複数の段階に分かれているジェスチャー （Drag Start 、Dragging 、Drag End など）を繋ぎ合わせることができます。</td>
        </tr>
        <tr>
          <td>"touch1"</td>
          <td><br /> This is the index of the first touch that is being used as part of the pinch gesture. In general this will be 0, but if the user is touching the screen anywhere else when this event is triggered by another touch, then the value will be greater than 0.</td>
        </tr>
        <tr>
          <td>"touch2"</td>
          <td><br /> This is the index of the second touch that is being used as part of the pinch gesture. In general this will be 1 more than the value for touch1, but may be some other value depending on the number of touches being detected elsewhere.</td>
        </tr>
        <tr>
          <td>"posX1"</td>
          <td><br /> This is the room-space X position of the first touch.</td>
        </tr>
        <tr>
          <td>"posY1"</td>
          <td><br /> This is the room-space Y position of the first touch.</td>
        </tr>
        <tr>
          <td>"rawposX1"</td>
          <td><br /> This is the <i>raw</i> window-space X position of the first touch (equivalent to getting the mouse position using <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_x.htm"><span class="inline"><tt>device_mouse_raw_x()</tt></span></a>).</td>
        </tr>
        <tr>
          <td>"rawposY1"</td>
          <td><br /> This is the <i>raw</i> window-space Y position of the first touch (equivalent to getting the mouse position using <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_y.htm"><span class="inline"><tt>device_mouse_raw_y()</tt></span></a>).</td>
        </tr>
        <tr>
          <td>"guiposX1"</td>
          <td><br /> This is the gui-space X position of the first touch (equivalent to getting the mouse position using <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_x_to_gui.htm"><span class="inline"><tt>device_mouse_x_to_gui()</tt></span></a>).</td>
        </tr>
        <tr>
          <td>"guiposY1"</td>
          <td><br /> This is the gui-space Y position of the second touch (equivalent to getting the mouse position using <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_y_to_gui.htm"><span class="inline"><tt>device_mouse_y_to_gui()</tt></span></a>).</td>
        </tr>
        <tr>
          <td>"posX2"</td>
          <td><br /> This is the room-space X position of the second touch.</td>
        </tr>
        <tr>
          <td>"posY2"</td>
          <td><br /> This is the room-space Y position of the second touch.</td>
        </tr>
        <tr>
          <td>"rawposX2"</td>
          <td><br /> This is the <i>raw</i> window-space X position of the first touch.</td>
        </tr>
        <tr>
          <td>"rawposY2"</td>
          <td><br /> This is the <i>raw</i> window-space Y position of the second touch.</td>
        </tr>
        <tr>
          <td>"guiposX2"</td>
          <td><br /> This is the gui-space X position of the second touch.</td>
        </tr>
        <tr>
          <td>"guiposY2"</td>
          <td><br /> This is the gui-space Y position of the second touch.</td>
        </tr>
        <tr>
          <td>"midpointX"</td>
          <td><br /> The X position of the mid point between the two touches in room space.</td>
        </tr>
        <tr>
          <td>"midpointY"</td>
          <td><br /> The Y position of the mid point between the two touches in room space.</td>
        </tr>
        <tr>
          <td>"rawmidpointX"</td>
          <td><br /> This is the raw window-space X position of the mid point.</td>
        </tr>
        <tr>
          <td>"rawmidpointY"</td>
          <td><br /> This is the raw window-space Y position of the mid point.</td>
        </tr>
        <tr>
          <td>"guimidpointX"</td>
          <td><br /> This the gui-space X position of the mid point.</td>
        </tr>
        <tr>
          <td>"guimidpointY"</td>
          <td><br /> This the gui-space Y position of the mid point.</td>
        </tr>
        <tr>
          <td>"relativescale"</td>
          <td><br /> This is difference in scale compared to the last event in this gesture (so for <b>Pinch In</b> events this will always be smaller than 1.0, whereas for <b>Pinch Out</b> events it will always be larger than 1.0)</td>
        </tr>
        <tr>
          <td>"absolutescale"</td>
          <td><br /> This is the scale compared to where the fingers were when the gesture started (so if the distance between the fingers has halved then this will be 0.5 whereas if the distance has doubled it will be 2.0).</td>
        </tr>
      </tbody>
    </table>
    <p class="dropspot"> </p>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#"><span data-open-text="true">Pinch Start</span><span data-close-text="true">Pinch Start</span></a></p>
    <div class="droptext" data-targetname="drop-down12">
      <p class="dropspot">The Pinch Start event will be triggered when an instance (or the screen if the event is global) has been touched by two "fingers" (and the touch is maintained) and then one or both of the "fingers" is moved. If the touches move away from each other or towards each other more than the minimum check distance (which is 0.1 inches by default, but it can be set using the function <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_distance.htm"><span class="inline">gesture_pinch_distance()</span></a>), and the angle between them is within the defined value (this defaults to 45° but can be set using <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_towards.htm"><span class="inline">gesture_pinch_angle_towards()</span></a> and <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_pinch_angle_away.htm"><span class="inline">gesture_pinch_angle_away()</span></a>), then a Pinch Start event will be triggered. In this event you can set variables or store position date for future use. For example:</p>
      <h4>Pinch Start Event</h4>
      <p class="code">pinching = true;<br /> pinch_x = event_data[? "midpointX"]; pinch_y = event_data[? "midpointY"];</p>
      <p class="dropspot">The above code will detect a pinch and store the midpoint position for that pinch.</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down13" href="#"><span data-open-text="true">Pinch In / Pinch Out</span><span data-close-text="true">Pinch In / Pinch Out</span></a></p>
    <div class="droptext" data-targetname="drop-down13">
      <p class="dropspot">The Pinch In and Pinch Out events will be triggered every step that the distance between the two touches that make up the pinch changes over the minimum threshold (set to +/- 0.1 inches by default, but you can change it using the function gesture_pinch_distance). If there is no movement of the pinch touches then these events will not trigger. These events will generate an <span class="inline">event_data</span> DS map which you can then use to get information about the event. For example:</p>
      <h4>Global Pinch In /Pinch Out Event</h4>
      <p class="code">var _scale = event_data[? "relativescale"];<br /> var _w = camera_get_view_width(view_camera[0]);<br /> var _h = camera_get_view_height(view_camera[0]);<br /> var _x = camera_get_view_x(view_camera[0]) + (_w / 2);<br /> var _y = camera_get_view_y(view_camera[0]) + (_h / 2);<br /> <br /> _w *= _scale;<br /> _h = _w * (room_height / room_width);<br /> _x -= _w / 2;<br /> _y -= _h / 2;<br /> <br /> camera_set_view_pos(view_camera[0], _x, _y);<br /> camera_set_view_size(view_camera[0], _w, _h);</p>
      <p class="dropspot">The above code will scale the view based on the relative scale of the pinch touches.</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#"><span data-open-text="true">Pinch End</span><span data-close-text="true">Pinch End</span></a><strong></strong></p>
    <div class="droptext" data-targetname="drop-down14">
      <p class="dropspot">The Pinch End event will be triggered when the user releases one (or both) of the touches from the device. This events will generate an <span class="inline">event_data</span> DS map which you can then use to get information about the event. For example:</p>
      <h4>Pinch End Event</h4>
      <p class="code">var _pinchx = event_data[? "midpointX"];<br /> var _pinchy = event_data[? "midpointY"];<br /> var _w = camera_get_view_width(view_camera[0]);<br /> var _h = camera_get_view_height(view_camera[0]);<br /> var _x = _pinchx - (_w / 2);<br /> var _y = _pinchy - (_h / 2);<br /> <br /> camera_set_view_pos(view_camera[0], _x, _y);</p>
      <p class="dropspot">The above code will set the view position to be centered on the midpoint of the two touches that made up the pinch when the touches are released.</p>
      <p><strong></strong></p>
    </div>
    <p class="dropspot"> </p>
  </div>
  <p><img src="../../assets/Images/Icons/Icon_Rotate.png" style="margin-left: 56px; width: 100%; max-width: 20px;" /><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down15" href="#"><span data-open-text="true">Rotate Events</span><span data-close-text="true">Rotate Events</span></a></p>
  <div class="droptext" data-targetname="drop-down15">
    <p class="dropspot">The "Rotate" events are based on two touches to the devices screen being recognised at once, and where there has been a consistent angular rotation between the two within a specific time. The angle of movement of the touches along with the movement of each touch is what will determine the detection of a Pinch or Rotate event, where (in the case of the Rotate Event type):</p>
    <ul class="dropspotlist">
      <li class="dropspot">Two touches must be held down for a specified minimum time (the default time is 0.16 seconds, but you can change it using the function <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_time.htm"><span class="inline">gesture_rotate_time()</span></a>).</li>
      <li class="dropspot">Within this minimum time period they must rotate in a consistent direction (if the rotation direction changes within that time then no rotate is started).</li>
      <li class="dropspot">The rotation amount must exceed the minimum threshold angle (which is set to 5° by default, but this can be changed using the function <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_angle.htm"><span class="inline">gesture_rotate_angle()</span></a>).</li>
    </ul>
    <p class="dropspot">When two touches and a movement are detected with the above criteria, a Rotate Event will be triggered, and in each of the events the <span class="inline">event_data</span> DS Map will be populated with the following keys:</p>
    <ul class="dropspotlist">
    </ul>
    <table>
      <tbody>
        <tr>
          <th>キー</th>
          <th>説明</th>
        </tr>
        <tr>
          <td>"gesture"</td>
          <td><br /> 再生されているジェスチャーの<i></i>固有 ID 値です。この ID によって、複数の段階に分かれているジェスチャー （Drag Start 、Dragging 、Drag End など）を繋ぎ合わせることができます。</td>
        </tr>
        <tr>
          <td>"touch1"</td>
          <td><br /> This is the index of the first touch that is being used as part of the pinch gesture. In general this will be 0, but if the user is touching the screen anywhere else when this event is triggered by another touch, then the value will be greater than 0.</td>
        </tr>
        <tr>
          <td>"touch2"</td>
          <td><br /> This is the index of the second touch that is being used as part of the pinch gesture. In general this will be 1 more than the value for touch1, but may be some other value depending on the number of touches being detected elsewhere.</td>
        </tr>
        <tr>
          <td>"posX1"</td>
          <td><br /> This is the room-space X position of the first touch.</td>
        </tr>
        <tr>
          <td>"posY1"</td>
          <td><br /> This is the room-space Y position of the first touch.</td>
        </tr>
        <tr>
          <td>"rawposX1"</td>
          <td><br /> This is the <i>raw</i> window-space X position of the first touch (equivalent to getting the mouse position using <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_x.htm"><span class="inline"><tt>device_mouse_raw_x()</tt></span></a>).</td>
        </tr>
        <tr>
          <td>"rawposY1"</td>
          <td><br /> This is the <i>raw</i> window-space Y position of the first touch (equivalent to getting the mouse position using <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_raw_y.htm"><span class="inline"><tt>device_mouse_raw_y()</tt></span></a>).</td>
        </tr>
        <tr>
          <td>"guiposX1"</td>
          <td><br /> This is the gui-space X position of the first touch (equivalent to getting the mouse position using <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_x_to_gui.htm"><span class="inline"><tt>device_mouse_x_to_gui()</tt></span></a>).</td>
        </tr>
        <tr>
          <td>"guiposY1"</td>
          <td><br /> This is the gui-space Y position of the second touch (equivalent to getting the mouse position using <a href="../../GameMaker_Language/GML_Reference/Game_Input/Device_Input/device_mouse_y_to_gui.htm"><span class="inline"><tt>device_mouse_y_to_gui()</tt></span></a>).</td>
        </tr>
        <tr>
          <td>"posX2"</td>
          <td><br /> This is the room-space X position of the second touch.</td>
        </tr>
        <tr>
          <td>"posY2"</td>
          <td><br /> This is the room-space Y position of the second touch.</td>
        </tr>
        <tr>
          <td>"rawposX2"</td>
          <td><br /> This is the <i>raw</i> window-space X position of the first touch.</td>
        </tr>
        <tr>
          <td>"rawposY2"</td>
          <td><br /> This is the <i>raw</i> window-space Y position of the second touch.</td>
        </tr>
        <tr>
          <td>"guiposX2"</td>
          <td><br /> This is the gui-space X position of the second touch.</td>
        </tr>
        <tr>
          <td>"guiposY2"</td>
          <td><br /> This is the gui-space Y position of the second touch.</td>
        </tr>
        <tr>
          <td>"pivotX"</td>
          <td><br /> The X position of the rotation pivot point in room space.</td>
        </tr>
        <tr>
          <td>"pivotY"</td>
          <td><br /> The Y position of the rotation pivot point in room space.</td>
        </tr>
        <tr>
          <td>"rawpivotX"</td>
          <td><br /> This is the raw window-space X position of the rotational pivot point.</td>
        </tr>
        <tr>
          <td>"rawpivotY"</td>
          <td><br /> This is the raw window-space Y position of the rotational pivot point.</td>
        </tr>
        <tr>
          <td>"guipivotX"</td>
          <td><br /> This the gui-space X position of the rotational pivot point.</td>
        </tr>
        <tr>
          <td>"guipivotY"</td>
          <td><br /> This the gui-space Y position of the rotational pivot point.</td>
        </tr>
        <tr>
          <td>"relativeangle"</td>
          <td><br /> This is difference in rotation compared to the last event in this gesture, measured in degrees</td>
        </tr>
        <tr>
          <td>"absoluteangle"</td>
          <td><br /> This is the difference in angle compared to where the fingers were when the gesture started, measured in degrees. So, for example, if the fingers have rotated a quarter-circle since the start of the gesture then this value will be 90° or -90°, depending on the direction of rotation.</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down16" href="#"><span data-open-text="true">Rotate Start</span><span data-close-text="true">Rotate Start</span></a></p>
    <div class="droptext" data-targetname="drop-down16">
      <p class="dropspot">The Rotate Start event will be triggered when an instance (or the screen if the event is global) has been touched by two "fingers" (and the touch is maintained) and then one or both of the "fingers" is rotated from its start position. The rotation of the touches needs to have started within a short period of time (0.16 seconds by default, but it can be set using the function <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_time.htm"><span class="inline">gesture_rotate_time()</span></a>) and be greater than the minimum angular threshold (by default 5°, but, this can be changed using the function <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_angle.htm"><span class="inline">gesture_rotate_angle()</span></a>). If these checks are true, then a Rotate Start event will be triggered and you can use it to store values or set variables for use with the rest of the rotate events. For example:</p>
      <h4>Create Event</h4>
      <p class="code">rotating = false;<br /> view_a = camera_get_view_angle(view_camera[0]);</p>
      <h4>Rotate Start Event</h4>
      <p class="code">rotating = true;</p>
      <p class="dropspot">The above code simply sets up some variables for rotating the view camera, and then in the Rotate Start event, it sets one of them to true.</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down17" href="#"><span data-open-text="true">Rotating</span><span data-close-text="true">Rotating</span></a></p>
    <div class="droptext" data-targetname="drop-down17">
      <p class="dropspot">The Rotating event will be triggered every step that the touches on the screen rotate around each other, as long as the movement is greater than the minimum angular threshold (by default 5°, but, this can be changed using the function <a href="../../GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_angle.htm"><span class="inline">gesture_rotate_angle()</span></a>). This event can be used to set variables and manipulate instances, for example:</p>
      <h4>Rotating Event</h4>
      <p class="code">var _relangle = event_data[?"relativeangle"];<br /> var _a = camera_get_view_angle(view_camera[0]);<br /> _a += _relangle;<br /> camera_set_view_angle(view_camera[0], _a);</p>
      <p class="dropspot">The above code rotates the camera view depending on the rotational movement of the touches in the event.</p>
      <p class="dropspot"> <strong></strong></p>
    </div>
    <p class="dropspot"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down18" href="#"><span data-open-text="true">Rotate End</span><span data-close-text="true">Rotate End</span></a><strong></strong></p>
    <div class="droptext" data-targetname="drop-down18">
      <p class="dropspot">The Rotate End event will be triggered when one (or both) touches that comprise the gesture are released from the device screen. This event can be used to set variables and manipulate instances, for example:</p>
      <h4>Rotate End Event</h4>
      <p class="code">rotating = false;</p>
      <h4>Step Event</h4>
      <p class="code">if !rotating<br />     {<br />     var _a = camera_get_view_angle(view_camera[0]);<br />     var _adif = angle_difference(view_a, _a);<br />     _a += median(-5, _adif, 5);<br />     camera_set_view_angle(view_camera[0], _a);<br />     }</p>
      <p class="dropspot">The above code uses the Rotate End event to detect when the user stops the gesture and then sets a variable. This variable is then used in the step event to rotate the view camera back to its original position.</p>
      <p class="dropspot"> </p>
    </div>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Object_Events.htm">Object Events</a></div>
        <div style="float:right">Next: <a href="Event_Order.htm">Event Order</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
Gesture Events
Flick Events
Pan Events
Rotate Events
Tap Events
Gestures
-->
  <!-- TAGS
gesture_events
-->

</body></html>