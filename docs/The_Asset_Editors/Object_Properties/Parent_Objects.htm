<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.2.1_1";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>親オブジェクト</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>親オブジェクト</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing object parenting" />
  <meta name="rh-index-keywords" content="Objects - Parents" />
  <meta name="search-keywords" content="parent,child,inheritance,object parenting" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="親オブジェクト">
        <span>親オブジェクト</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>親オブジェクト</h1>
  <p>GameMaker Studio 2 の IDE では、オブジェクトに<strong>親</strong>と子からなる階層を設定することが可能です。このようにオブジェクトエディタの「親」ボタンをクリックし、アセットブラウザから別のオブジェクトを指定すれば、編集しているオブジェクトの親にできます。</p>
  <p><img alt="親を追加" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Parent.png" style="width: 100%; max-width: 1083px;" />プロジェクトのあらゆるオブジェクトを親にできますが、具体的にはどのような意味があるのでしょうか？実はオブジェクトに親を割り当てると、コードやアクション、イベントを親と共有できるようになるのです。そうして共有することを「継承」といい、親が与えられたオブジェクトを「子」オブジェクトと呼びます。子は親とコードを共有できるだけでなく、親オブジェクトの確認をしたりコードを実行できるほか、親のコードは子のオブジェクトに自動で追加されるため、手間を大きく減らすことができます。</p>
  <p>少しややこしいので、言い方を変えてみましょう。親オブジェクトとは、同じ傘に入れられたオブジェクトを 1 つのグループとしてまとめ、それぞれの独自機能を失うことなく特定の機能を共有するためのものなのです。まだ分かりにくいかもしれませんね、ちょっとした例を出しましょう…</p>
  <p>「プレイヤー」のオブジェクトが 1 つ、「敵」のオブジェクトが 4 つあり、プレイヤーが 4 つの敵オブジェクトのいずれかに触れたら負けにしたいとします。本来なら、プレイヤーのオブジェクトに敵オブジェクトへの Collision イベントを 4 つ用意し、それぞれにアクションやコードを追加しなければなりません。ですが敵オブジェクトに親が割り当てられていれば、その親との Collision イベントを用意するだけでよく、プレイヤーに触れた敵の「子」オブジェクトが 4 つのうちのどれであろうとイベントを作動できます。とても便利でしょう！実際の IDE では、このようにオブジェクトが表示されます。</p>
  <p><img alt="衝突のための親付け" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_ParentCollision.png" style="width: 100%; max-width: 1195px;" />左は Collision イベントが 4 つに分けられていますが、右の Collision イベントは 1 つだけで、すべての敵オブジェクトには「親」オブジェクトが割り当てられています。なお、親オブジェクトには必ずしもイベント、コードを用意する必要はありません。</p>
  <p>さらに親付けの例として、見た目が異なる 10 のオブジェクトに同じ動作をさせるとしましょう。まず親オブジェクトを用意し、必要なイベントに動作用のアクション、コードを追加します。それから新しくオブジェクトを 10 作成し、アクションないしコードは追加せず、スプライトだけ別々にしてから親オブジェクトを割り当てます。そうしてインスタンスをルームに置くと、親のイベントを「継承」したことによって同じ動作を、見た目が異なるオブジェクトに取らせることができます。</p>
  <p>最後に、イベントと動作をうまく組み合わせつつ親付けしてみましょう。以下の画像を例とします。2 匹のモンスターを用意し、そのうちの 1 匹は上下に、もう 1 匹は左右に移動するものの、ヘルス（体力）は同じで、当たるとダメージを受ける弾をプレイヤーに対して発射するとしましょう。この場合、移動を制御するいくつかのイベントを除き、ほとんどのイベントのアクションは同じということになります。今回も親となるオブジェクトを用意すればいいのですが、それに加えて子オブジェクトのイベントを設定しなければなりません。新しく設定したイベントは親のイベントをオーバーライド（上書き）し、子オブジェクトのイベントにアクションが含まれている場合、親オブジェクトに含まれているアクションではなくそちらが実行されます。親オブジェクトのイベントも実行したい場合は <a href="../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm"><span class="inline">event_inherited()</span></a>関数や、DnD™ アクションの <a href="../../Drag_And_Drop/Drag_And_Drop_Reference/Instance/Call_Parent_Event.htm">Call Parent Event</a> によって「継承イベント」を呼び出しましょう。</p>
  <p><img alt="イベントの継承" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_InheritEvents.png" style="width: 100%; max-width: 1226px;" />画像の左はイベントが 5 つある親オブジェクトで、右はその子オブジェクトです。子オブジェクトにもイベントが 5 つありますが、親から継承されたイベントのうち 2 つ（ <strong>Step</strong> と <strong>Draw</strong> イベント）はオーバーライドされており、残りの 3 つはそのまま継承されたイベントのため薄く表示されます。なおイベントエディタでは以下のように、イベントの横に「親をオーバーライド」アイコンがつきます。</p>
  <p><img alt="親をオーバーライド" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_ParentOverride.png" style="width: 100%; max-width: 320px;" />継承されたイベントを左クリック<img alt="[左クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" style="width: 100%; max-width: 21px;" />すると親のコードをコードエディタで表示できますが、親のオブジェクトから開かないと編集は行えません。イベントを右クリック<img alt="[右クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" style="width: 100%; max-width: 21px;" />した場合は、このようなメニュー項目が表示されます。</p>
  <p><img alt="親イベントの右クリックメニュー" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_Parent_Menu.png" style="width: 100%; max-width: 418px;" /><strong>親イベントを開く</strong>を選ぶとコードを確認できるほか、<strong>イベントの継承</strong>、<strong>イベントのオーバーライド</strong>という項目があります。<strong>イベントの継承</strong>を選んだ場合はコードエディタが開き、<a href="../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm"><span class="inline">event_inherited()</span></a>関数 （ DnD™ を使用している場合は <a href="../../Drag_And_Drop/Drag_And_Drop_Reference/Instance/Call_Parent_Event.htm">Call Parent Event</a> アクション）があらかじめ追加されます。ここでイベントに追記したコードは、親オブジェクトのコードとともに実行可能です。<strong>イベントのオーバーライド</strong>を選んだ場合も同じようにコードウィンドウが開きますが、<span class="inline">event_inherited()</span>関数が追加されることはないため、<em></em>追記したコードだけを実行できます。</p>
  <p class="note"><strong>メモ</strong>: コードエディタを右クリック<img alt="[右クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" style="width: 100%; max-width: 21px;" />してメニューから<strong>オブジェクトに移動</strong>を選ぶと、すぐに親オブジェクトまで移動できます。またイベントがオーバーライドされている場合は<strong>継承したイベントを開く</strong>を選ぶと、親イベントのコードを直接コードエディタで開くことができます。</p>
  <p>コードにおいて親オブジェクトを対象とした場合、そのコードは「子」オブジェクトにも適用されます。これはアクションにおいて特定オブジェクトのインスタンスに適用されるよう指示した場合、あるいはコードにおいて <a href="../../GameMaker_Language/GML_Overview/Language_Features/with.htm"><span class="inline">with()</span></a>文を使用した場合でも同じです。また、<a href="../../GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_position.htm"><span class="inline">instance_position()</span></a>、<a href="../../GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_number.htm"><span class="inline">instance_number()</span></a>といったコード関数を呼び出すとき、親オブジェクトが指定されている場合もこのように動作し、親オブジェクト<em></em>およびすべての子オブジェクトがチェックされます。なお、他のオブジェクトの変数を参照するときにも親付けは有効となり、たとえば上記の例では Enemy_1 の速度を 10 に設定した場合、その子オブジェクトである Enemy_2 の速度も 10 となります。</p>
  <p>ほとんどの場合では、基本的な動作をすべて含めた親オブジェクトをひな形として利用しつつ、インスタンスとしては扱わないという手法が望ましいとされています。なるべく子オブジェクトだけを利用し、コリジョンの設定や変数の参照など、上述したような場面でのみ親オブジェクトを利用するといいでしょう。さらには覚えておきたい点として、親オブジェクトにも親を割り当てることができます！「親 1 を親 2 の子にし、親 2 を親 1 の子にする」といったループはもちろん無理ですが、「<em></em>親 3 を<em></em>親 2 の子にし、親 2 を<em></em>親 1 の子にする」といったオブジェクトの階層化は可能です。ゲームの構造を多層的なものにする上でとても便利ですので、ぜひとも仕組みを覚えてください。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る: <a href="../Objects.htm">オブジェクトエディタ</a></div>
        <div style="float:right">次へ: <a href="Physics_Objects.htm">物理オブジェクト</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
Parent Objects
Child Objects
parent
child
inheritance
-->
  <!-- TAGS
parent_objects
-->

</body></html>