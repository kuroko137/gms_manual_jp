<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.2.1_1";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>親オブジェクト</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>親オブジェクト</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing object parenting" />
  <meta name="rh-index-keywords" content="Objects - Parents" />
  <meta name="search-keywords" content="parent,child,inheritance,object parenting" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="親オブジェクト">
        <span>親オブジェクト</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>親オブジェクト</h1>
  <p>IDE で扱えるオブジェクトには<strong>親★</strong>子の階層を設定することができます。オブジェクトエディタの「親」ボタンをクリックし、編集しているオブジェクトの親にしたいオブジェクトを、次のようにアセットブラウザから指定してみてください。</p>
  <p><img alt="親を追加" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Parent.png" style="width: 100%; max-width: 1083px;" />プロジェクトのどのようなオブジェクトにも親を追加できますが、これにはどんな意味があるのでしょうか？オブジェクトに親を割り当てると、コードやアクション、イベントを親と共有できるのです。この仕組みは「継承」といい、親があるオブジェクトは「子」オブジェクトと呼びます。子は親とコードを共有できるだけではなく、親オブジェクトをチェックしてそのコードを実行できます。また、親のコードは自動で子オブジェクトに含まれるため、時間と手間を大きく減らすことが可能です。</p>
  <p>ちょっとややこしいので、見方を変えてみましょう。親オブジェクトとは同じ箱に入れたオブジェクトをグループ化するもので、それぞれの独自要素を失うことなく機能を共有できます。これでもはっきりしないかもしれないので、具体的な例を出してみましょう。</p>
  <p>「プレイヤー」のオブジェクトが 1 つ、「敵」のオブジェクトが 4 つあり、プレイヤーが 4 つの敵オブジェクトのいずれかに触れたら倒れるようにしたいとします。普通ならそれぞれの敵オブジェクトごとに 4 つの衝突イベントを用意し、それぞれアクションやコードを追加しなくてはなりません。ですが敵オブジェクトに親となるオブジェクトを用意すれば、親オブジェクトとの衝突イベントを作るだけでよく、プレイヤーに触れた敵の子オブジェクトが 4 つのうちのどれであろうとイベントが作動するようになります。実に便利でしょう！実際の画面では、このようにオブジェクトが表示されます。</p>
  <p><img alt="衝突イベントの親化" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_ParentCollision.png" style="width: 100%; max-width: 1195px;" />左では Collision イベントが 4 つに分けられていますが、右では Collision イベントが 1 つしかなく、「親」オブジェクトを用意してすべての敵オブジェクトに割り当てられています。なお、親オブジェクトにはイベント、コードを必ず用意する必要はありません。</p>
  <p>もう 1 つの例として、見た目が異なる 10 のオブジェクトに同じ動きを取らせるとしましょう。まず親オブジェクトを用意し、必要なイベントに動きを取らせるアクションまたはコードを追加します。それから 10 のオブジェクトを作成し、アクションないしコードは追加せず、スプライトだけ別々にしてから用意した親オブジェクトを割り当てます。そしてインスタンスをルームに置くと、同じ動作をしながらも見た目は異なります。これは親のイベントを「継承」するためです。</p>
  <p>最後に、イベントと動作をうまく組み合わせながら親にしてみましょう。以下の画像を例とします。2 体のモンスターを用意するとしましょう。そのうちの 1 体を上下に、もう 1 体を左右に動かしつつも、それとともにヘルス（体力）を同じにし、プレイヤーに向かって当たるとダメージを受ける弾を発射するとします。この場合、移動を制御するいくつかのイベントを除き、ほとんどのイベントに同じアクションを与えなくてはなりません。これまでと同じように親となるオブジェクトを用意すればいいのですが、今回は子オブジェクトのイベントを定義する必要があります。そうしたイベントは親のイベントをオーバーライド（上書き）することとなり、子オブジェクトのイベントにアクションが含まれている場合、親オブジェクトに含まれているアクションではなくそちらが実行されます。親オブジェクトのイベントを実行したい場合は、<a href="../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm"><span class="inline">event_inherited()</span></a>関数や、DnD™ アクションの <a href="../../Drag_And_Drop/Drag_And_Drop_Reference/Instance/Call_Parent_Event.htm">Call Parent Event</a> を使って「継承イベント」を呼び出しましょう。</p>
  <p><img alt="イベントの継承" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_InheritEvents.png" style="width: 100%; max-width: 1226px;" />画像の左は 5 つのイベントがある親オブジェクトで、右は子オブジェクトです。子オブジェクトにも 5 つのイベントがありますが、親から継承されたイベントのうち 2 つ（ <strong>Step</strong> と <strong>Draw</strong> イベント）は上書きされており、あとの 3 つは親から引き継いだイベントになるためグレーアウトしています。また、イベントエディタでは継承イベントの横にこのような「親をオーバーライド」アイコンが表示されます。</p>
  <p><img alt="親をオーバーライド" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_ParentOverride.png" style="width: 100%; max-width: 320px;" />継承されたイベントをクリック<img alt="[左クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_LMB.png" style="width: 100%; max-width: 21px;" />するとコードエディタが開いて親のコードが表示されますが、親のオブジェクトから開かないと編集は行えません。親のイベントを右クリック<img alt="[右クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" style="width: 100%; max-width: 21px;" />すると、次のメニュー項目が表示されます。</p>
  <p><img alt="親イベントの右クリックメニュー" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_Parent_Menu.png" style="width: 100%; max-width: 418px;" /><strong>親イベントを開く</strong>を選べばコードを確認できるほか、<strong>イベントの継承</strong>、<strong>イベントのオーバーライド</strong>という項目を選べます。<strong>イベントの継承</strong>を選ぶとコードエディタが開き、<a href="../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm"><span class="inline">event_inherited()</span></a>関数 （DnD™ を使用している場合は <a href="../../Drag_And_Drop/Drag_And_Drop_Reference/Instance/Call_Parent_Event.htm">Call Parent Event</a> アクション）が追加されます。ここに追記されたコードは、親オブジェクトのコードと同時に実行されるようになります。<strong>イベントのオーバーライド</strong>を選んだ場合もコードウィンドウが開きますが、<span class="inline">event_inherited()</span>関数は追加されず、親オブジェクトのコード<em></em>の代わりに追記したコードが実行されるようになります。</p>
  <p class="note"><strong>メモ</strong>: コードエディタを右クリック<img alt="[右クリックアイコン]" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" style="width: 100%; max-width: 21px;" />してメニューから<strong>オブジェクトに移動</strong>を選ぶと、親オブジェクトにすばやく移動することができます。また、イベントがオーバーライドされている場合は<strong>継承したイベントを開く</strong>を選ぶと、親イベントのコードを直接コードエディタで開くことができます。</p>
  <p>コードにおいて親オブジェクトを対象とした場合、そのコードは「子」オブジェクトにも適用されます。これはアクションにおいて特定オブジェクトのインスタンスに適用されるよう指定した場合でも、コードにおいて <a href="../../GameMaker_Language/GML_Overview/Language_Features/with.htm"><span class="inline">with()</span></a>文を使用した場合でも同じです。また、<a href="../../GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_position.htm"><span class="inline">instance_position()</span></a>、<a href="../../GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_number.htm"><span class="inline">instance_number()</span></a>といった関数をコードから呼び出すときに親オブジェクトが指定されている場合も同じように、親オブジェクト<em></em>およびすべての子オブジェクトがチェックされます。最後に、他のオブジェクトの変数を参照するときにも親子関係は有効となり、たとえば上記の例では Enemy 1 の速度を 10 に設定した場合、その子オブジェクトである Enemy 2 の速度も 10 となります。</p>
  <p>基本的にほとんどの場合では、ベースとなる親オブジェクト 1 つに基本動作をすべて入れ、そのオブジェクトのインスタンスは使わないという手法が望ましいとされています。なるべく子オブジェクトだけを扱い、衝突、変数の参照など、上述したような場面でのみ親オブジェクトを扱うといいでしょう。また、親オブジェクトにも親を割り当てることができます！もちろん「親 1 は親 2 の子で、親 2 は親 1 の子」のようにループさせることは無理ですが、「<em></em>親 3 は<em></em>親 2 の子で、親 2 は<em></em>親 1 の子」のようなオブジェクト階層にすることは可能です。ゲームの構造を保つにはとても便利ですので、ぜひとも仕組みを覚えてください。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る: <a href="../Objects.htm">オブジェクトエディタ</a></div>
        <div style="float:right">次へ: <a href="Physics_Objects.htm">物理オブジェクト</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
Parent Objects
Child Objects
parent
child
inheritance
-->
  <!-- TAGS
parent_objects
-->

</body></html>