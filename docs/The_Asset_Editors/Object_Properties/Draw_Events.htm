<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.2.1.0_3";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>Draw イベント</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Draw イベント</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the draw event." />
  <meta name="rh-index-keywords" content="Objects - Draw Events" />
  <meta name="search-keywords" content="draw event,draw begin,draw end,pre-draw,post draw,draw GUI,draw order" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Draw イベント">
        <span>Draw イベント</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Draw イベント</h1>
  <p><img alt="Draw イベント" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Draw.png" style="width: 100%; max-width: 268px;" />Draw イベントのカテゴリには、ゲーム実行中に画面へ表示される内容を扱うためのイベントが揃っています。ゲームのさまざまな描画要求を処理しやすくなるようイベントは複数に分けられています。以下の画像は、それぞれのイベントがどのような順番で実行されるかを示したものです。</p>
  <p><img alt="オブジェクトエディタの描画略図" class="center" src="../../assets/Images/Asset_Editors/Editor_Events_DrawOrder.png" style="width: 100%; max-width: 248px;" />通常の Draw イベントは <strong>Draw Begin</strong> 、標準の <strong>Draw</strong> 、<strong>Draw End</strong> という 3 つの種類に細分化されています。基本的には標準の Draw イベントを利用することになりますが、このイベントは各ステップごとにルーム内のすべてのインスタンスで作動し、インスタンスの<strong>表示</strong>フラグが有効であれば常に呼び出されることを意識しておいてください。また、オブジェクトプロパティからこれらのサブイベントに何も定義していない（コードまたはアクションがない）場合であっても、<em></em>オブジェクトにスプライトが割り当てられている限り Draw イベントが作動することは覚えておくべきでしょう。GameMaker Studio 2 ではそのような理由から、このように 2 つの方法で Draw イベントによる描画が行われます。</p>
  <ul class="colour">
    <li><strong>デフォルト描画</strong>は、オブジェクトプロパティでスプライトが定義されており、なおかつ通常の Draw イベントにコードまたはアクションがない場合に行われ、この場合は割り当てられているスプライトが GameMaker Studio 2 によって自動的に描画されます。画像のスケール、インデックス、ブレンドなど、Draw イベントの内容が空であれば他のイベントから変更した変形も反映されます。</li>
    <li><strong>カスタム描画</strong>は、Draw イベントにコードまたはアクションが追加されている場合に行われます。こうすることで「<em></em>オブジェクトのインスタンスに描画する内容をコントロールしたい」と GameMaker Studio 2 側に伝えられ、デフォルト描画を完全に上書きすることができます。たとえばスプライトが割り当てられているオブジェクトの Draw イベントで描画テキストを設定した場合、画面にそのテキストは描画されますが、テキストと同時に描画するよう<em></em>伝えてないためスプライトは描画されないということになります。</li>
  </ul>
  <p>他の Draw イベントについては以下の項目で説明されています。</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true">Draw Begin / Draw End</span><span data-close-text="true">Draw Begin / Draw End</span></a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">メインの Draw イベントとは別に、<strong>Draw Begin</strong> と <strong>Draw End</strong> というイベントがあります。これらのイベントは標準の Draw イベントとまったく同じように動作（追加した内容をゲームの各ステップごとに、すべてのビューポートへ描画）しますが、明示的にオブジェクトへ追加しなければ「デフォルト描画」は行わず、さらに必ず標準の Draw イベントの前 / 後に実行されます。つまりゲームを実行中、各インスタンスでは<em></em>必ず最初に Draw Begin イベント、その次に Draw イベント、最後に Draw End イベントが作動しているということになります。</p>
    <p class="dropspot">このようにして、あるインスタンスに Draw Begin のステップで描画対象やその設定をすれば、標準の Draw イベントまたは Draw End イベントがある各インスタンスから設定値を利用したり、最初のインスタンスの上に重ねて描画できるようになります。<strong>Begin Step</strong> と <strong>End Step</strong> は、ある対象を必ず同じタイミングで描画させるための手段と言えましょう。</p>
    <p class="dropspot">GameMaker Studio 2 に描画を行わせるにあたってはいくつか注意点があり、描画するものがスプライト、シェーダー、3D バッファのうちのどれであっても関わってきます。</p>
    <ul class="colour">
      <li class="dropspot">Draw イベントは時間とリソースを集中的に費やすイベントの 1 つであり、Draw イベントに描画以外の処理を行わせるべきではありません。大規模なコード、複雑なアクションは Step イベント、Alarm イベントといった他のイベントに追加し、Draw イベントには描画だけをさせるようにしましょう。</li>
      <li class="dropspot">オブジェクトの表示パラメーターが<em></em>無効となっている場合（オブジェクトのインスタンスが描画されない場合）、<strong>Draw イベントはすべてスキップされます</strong>（ <strong>Resize</strong> イベントは除きます）。インスタンスが非表示になるとこれらのイベントに追加したコードは実行されなくなるため、表示するつもりがないオブジェクトの Draw イベントには重要なコードを追加しないでください。</li>
      <li class="dropspot">描画される内容は、オブジェクトプロパティから選択した衝突エンジン（従来式または物理演算）、およびオブジェクトに指定されているスプライト（またはマスク）とは関連しません。</li>
    </ul>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#"><span data-open-text="true">Draw GUI</span><span data-close-text="true">Draw GUI</span></a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">Draw GUI イベント型は Draw イベントのカテゴリに入り、ビューのカメラスケールや位置に影響されない <a class="tooltip" title="Short for 'Graphical User Interface', which is a user interface that includes graphical elements, such as windows, icons and buttons. In GameMaker you have a specific set of object events (Draw GUI Events) that can draw to this layer specifically designed for things like score, lives, inventories, etc...">GUI</a> 要素を描画することに特化しています。そのためルームのインスタンス位置、カメラのビュー位置に合わせなくても、1 つのインスタンスに <a class="tooltip" title="In games, the HUD stands for the Heads-Up Display. This is the method by which information is visually relayed to the player as part of a game's user interface, so things like the health bar, status icons, score, etc... all form part of the HUD, and normally HUD elements do not require user interaction.">HUD</a> やユーザーインターフェースの各要素を描画させることができます。</p>
    <p class="dropspot">これらのイベントで描画する場合、カメラがアクティブであっても描画座標は変更されず、アプリケーションサーフェスまたはディスプレイのもっとも左上の位置は必ず <em></em>(0,0) となり（下記のメモを参照）、アプリケーションサーフェスのデフォルトの幅と高さは 1:1 になります。各レイヤーごとのインスタンスの深度順は変わらず（上側のレイヤーに置かれたインスタンスは下側のインスタンスよりも奥に描画されます）、最初に <strong>Draw GUI Begin</strong> イベントで描画され、その次に標準の <strong>Draw GUI</strong> イベントで描画、最後に <strong>Draw Gui End</strong> イベントが作動するといったイベントの中でもそれは同じです。</p>
    <p class="dropspot">このようにして、あるインスタンスに Draw GUI Begin のステップで描画対象やその設定をすれば、標準の Draw GUI イベントまたは Draw GUI End イベントがある各インスタンスから設定値を利用したり、最初のインスタンスの上に重ねて描画できるようになります。<strong>Begin Step</strong> と <strong>End Step</strong> イベントのように、ある対象を必ず同じタイミングで描画させるための手段と言えましょう。</p>
    <p class="dropspot">これらのイベントは通常の Draw イベント（こちらはカメラのビュー位置、スケール、回転の影響を受けます）と同時に使うこともできます。Draw イベントは追加せず、Draw GUI イベントだけを追加した場合は、GameMaker Studio 2 によってインスタンスのスプライトがデフォルト描画されます（スプライトがある場合のみ）。</p>
    <p class="dropspot">他の Draw イベントとの関係については、Draw GUI イベントは必ず通常の Draw イベントで描画された内容よりも上に描画します。つまり下層のレイヤーのインスタンスに Draw GUI イベントがある場合、通常の Draw イベントがある上層のレイヤーのインスタンスの上に描画されます。どちらのインスタンスにも Draw GUI イベントがある場合は、レイヤーの順番が守られます。</p>
    <p class="note"><strong>メモ</strong>: このイベントはデフォルトでは、通常ルームまたはビューポートのサイズとなる、等倍のアプリケーションサーフェスサイズで描画を行います。そのためゲームオプションから<strong>アスペクト比補正</strong>を有効にしている場合、ゲーム画面の黒い帯（レターボックス）の上には描画されないことになります。この動作は <a href="../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_maximise.htm"><span style="font-size:14px;"><span class="inline" style="font-size: 14px">display_set_gui_maximise()</span></span></a>関数から切り替えることができます。GUI イベントを特定のサイズに固定することも可能で、さらに <a href="../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_size.htm"><span class="inline" style="font-size: 14px">display_set_gui_size()</span></a>を利用すればディスプレイまたはアプリケーションサーフェスの寸法に合わせて自動的に拡大縮小できます。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#"><span data-open-text="true">Pre And Post Draw</span><span data-close-text="true">Pre And Post Draw</span></a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">The Pre Draw and Post Draw events are part of the Draw Event category. However, unlike the other Draw events these draw <em>directly </em>to the <a class="tooltip" title="表示バッファは、あらゆるものが最終的に描画される「キャンバス」です。表示バッファを直接対象とするイベント（Pre Drawイベントなど）もありますが、それ以外のイベントはまずアプリケーションサーフェスを対象とし、それから表示バッファに描画を行います。">display buffer</a>, which will be the size of the combined screen space for all viewports currently visible, <em>or </em>the window size if only using one viewport or none at all. The image below illustrates this:</p>
    <p class="dropspot"><img alt="Object Editor Post Draw" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_PostDraw.png" style="width: 100%; max-width: 710px;" />So, if you are using the Pre or Post draw events, you are drawing to the full screen render target (display buffer) which will have the same size as the window to which all viewports are made to fit. If you have no viewports active, this is instead set to the size of the window itself.</p>
    <p class="dropspot">The Pre Draw event is triggered before any other draw event, and in it you can set values, set draw properties and even draw things without worrying about the viewports or the size of the GUI layer (the GUI layer size may be the same as the screen buffer, but it may not be since you can set the GUI resolution in code).</p>
    <p class="dropspot">It is worth noting that this event happens <em>before </em>the display buffer is cleared for regular drawing meaning that if you do not switch off view clearing in the room editor then nothing that is drawn in the Pre Draw event will be seen, as the first viewport draw will clear it. If you want to be able to see through the viewports themselves, or you are not using viewports at all, then you should also have set the background colour to have an alpha of 0 in the <strong><a href="../Rooms.htm">Room Editor</a></strong>.</p>
    <p class="note"><strong>NOTE</strong>: If you switch off these options, you may notice unwanted artefacts being drawn on the screen when the game is tested (like "trails" from instances). This is because you are drawing directly over the previous frame of the display buffer without it being cleared. However you can use <span class="inline" style="font-size: 14px"><a href="../../GameMaker_Language/GML_Reference/Drawing/Colour_And_Alpha/draw_clear_alpha.htm">draw_clear_alpha()</a> </span>to do this yourself.</p>
    <p class="dropspot">The Post Draw event is triggered <em>after </em>all the standard draw events, but <em>before </em>the Draw GUI events. Like the Pre Draw event, it is based on the size of the display buffer, and is placed before the Draw GUI events to enable you to perform post-processing effects and other things on a full screen basis simply and easily without interfering with any <a class="tooltip" title="In games, the HUD stands for the Heads-Up Display. This is the method by which information is visually relayed to the player as part of a game's user interface, so things like the health bar, status icons, score, etc... all form part of the HUD, and normally HUD elements do not require user interaction.">HUD</a>/ <a class="tooltip" title="Short for 'Graphical User Interface', which is a user interface that includes graphical elements, such as windows, icons and buttons. In GameMaker you have a specific set of object events (Draw GUI Events) that can draw to this layer specifically designed for things like score, lives, inventories, etc...">GUI</a> elements that you may have in your game.</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#"><span data-open-text="true">Window Resize</span><span data-close-text="true">Window Resize</span></a></p>
  <div class="droptext" data-targetname="drop-down3">
    <p class="dropspot">This event type falls under the Draw Event category, and although it doesn't actually draw anything, it does react to changes in the display buffer - specifically, it is designed for reacting to the change in the UWP display buffer size when the game window is "snapped".</p>
    <p class="dropspot">On the UWP target platform it is important that you catch any resizing of the display buffer from the "snapping" of the game window (when the user drags the window to the side of the display, for example). This event will do just that and is triggered every time the window is changed, permitting you to add custom code here that will resize the view or re-position <a class="tooltip" title="In games, the HUD stands for the Heads-Up Display. This is the method by which information is visually relayed to the player as part of a game's user interface, so things like the health bar, status icons, score, etc... all form part of the HUD, and normally HUD elements do not require user interaction.">HUD</a> elements as necessary. This function is provided as a convenient way to avoid having step event code that checks for these things all the time.</p>
    <p class="note"><strong>NOTE</strong>: You cannot draw in this event! It is triggered by resizing the window and is only for catching this change... any drawing that should be done still must be in one of the other draw events.</p>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Object_Events.htm">Object Events</a></div>
        <div style="float:right">Next: <a href="Async_Events.htm">Async Events</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
Draw Events
Pre Draw Event
Post Draw Event
Draw Begin Event
Draw End Events
Draw GUI Events
Draw GUI Begin Event
Draw GUI End Event
Pre Draw Event
Post Draw Event
Window Resize Event
-->
  <!-- TAGS
draw_events
-->

</body></html>