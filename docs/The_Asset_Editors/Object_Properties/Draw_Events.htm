<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.2.1.0_3";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>Draw イベント</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Draw イベント</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the draw event." />
  <meta name="rh-index-keywords" content="Objects - Draw Events" />
  <meta name="search-keywords" content="draw event,draw begin,draw end,pre-draw,post draw,draw GUI,draw order" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Draw イベント">
        <span>Draw イベント</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Draw イベント</h1>
  <p><img alt="Draw イベント" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Draw.png" style="width: 100%; max-width: 268px;" />Draw イベントのカテゴリは、ゲームを実行したときの画面表示内容を決めるイベントからなります。ゲームのさまざまな描画要求を処理しやすくなるようイベントは複数に分けられており、各イベントがどのような順番で実行されるかは以下の画像で示されています。</p>
  <p><img alt="オブジェクトエディタの描画略図" class="center" src="../../assets/Images/Asset_Editors/Editor_Events_DrawOrder.png" style="width: 100%; max-width: 248px;" />通常の Draw イベントは <strong>Draw Begin</strong> 、<strong>Draw</strong> 、<strong>Draw End</strong> という 3 つの種類に細分化されています。基本的には標準の "Draw" イベントを使うことになりますが、このイベントは各ステップごとにルーム内のすべてのインスタンスで作動し、インスタンスの<strong>表示</strong>フラグが有効となっている間は常に呼び出されるということに注意してください。また、オブジェクトプロパティからこれらのサブイベントに何も定義していない（コードまたはアクションがない）場合であっても、<em></em>オブジェクトにスプライトが割り当てられている限り Draw イベントは作動します。これは Draw イベントでは、以下の 2 つの方法で描画が行われるためです。</p>
  <ul class="colour">
    <li><strong>デフォルト描画</strong> - オブジェクトプロパティでスプライトが定義されており、なおかつ通常の Draw イベントにコードまたはアクションがない場合に行われ、割り当てられているスプライトが自動的に描画されます。Draw イベントの内容が空であるなら、他のイベントから変更した画像のスケール、インデックス、ブレンドなどといった変形も反映されます。</li>
    <li><strong>カスタム描画</strong> - Draw イベントにコードまたはアクションを追加した場合、「<em></em>オブジェクトのインスタンスに描画される内容をコントロールしたい」と GameMaker Studio 2 では認識され、デフォルト描画を完全に上書きすることができます。たとえばスプライトが割り当てられているオブジェクトの Draw イベントで描画テキストを設定した場合、画面にそのテキストは描画されるものの、スプライトは同時に描画するよう<em></em>指示されていないため非表示となります。</li>
  </ul>
  <p>その他の Draw イベントについては以下の項を参照してください。</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true">Draw Begin / Draw End</span><span data-close-text="true">Draw Begin / Draw End</span></a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">メインの Draw イベントとは別に、<strong>Draw Begin</strong> と <strong>Draw End</strong> という 2 つのイベントが用意されています。いずれも "Draw" イベントとまったく同じように動作（ゲームの各ステップごとに一連のビューポートに対して内容を描画）しますが、オブジェクトに追加していない場合はデフォルト描画を行ないません。また、必ず標準の Draw イベントの前 / 後に実行されます。そのためゲーム実行時、各インスタンスでは<em></em>必ず最初に Draw Begin イベント、その次に Draw イベント、最後に Draw End イベントが作動することになります。</p>
    <p class="dropspot">このように 1 つのインスタンスの Draw Begin イベントで描画および設定が行われていれば、標準の Draw イベントまたは Draw End イベントがあるインスタンスすべてに同じ設定をさせたり、最初のインスタンスの上に重ねて描画できるようになります。<strong>Begin Step</strong> や <strong>End Step</strong> イベントと同じように、常に決められたタイミングで描画を行うための手段と言えましょう。</p>
    <p class="dropspot">GameMaker Studio 2 で行われる描画についてはいくつか注意点があり、スプライト、シェーダー、3D バッファのいずれも該当します。</p>
    <ul class="colour">
      <li class="dropspot">Draw イベントは時間とリソースを大きく費やすイベントの 1 つであり、描画以外の処理を行わせるべきではありません。大規模なコード、複雑なアクションは Step イベント、Alarm イベントといった他のイベントに追加し、Draw イベントには描画だけをさせるようにしましょう。</li>
      <li class="dropspot">オブジェクトの表示フラグが<em></em>無効となっている場合（インスタンスが描画されない場合）、<strong>すべての Draw イベントがスキップされます</strong>（ ただし <strong>Resize</strong> イベントは除く）。インスタンスを非表示にすると Draw イベントのコードは実行されなくなるため、表示させないオブジェクトの Draw イベントには重要なコードを追加しないでください。</li>
      <li class="dropspot">描画される内容は、オブジェクトプロパティから選んだ衝突エンジン（従来式または物理演算）、およびオブジェクトに指定されているスプライト（ないしマスク）とは関わりがありません。</li>
    </ul>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#"><span data-open-text="true">Draw GUI</span><span data-close-text="true">Draw GUI</span></a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">Draw GUI は Draw イベントのカテゴリに分類され、ビューカメラのスケールや位置に影響されない <a class="tooltip" title="Short for 'Graphical User Interface', which is a user interface that includes graphical elements, such as windows, icons and buttons. In GameMaker you have a specific set of object events (Draw GUI Events) that can draw to this layer specifically designed for things like score, lives, inventories, etc...">GUI</a> 要素を描画することに特化しています。これによってルームのインスタンス位置、カメラのビュー位置を基準とせず、1 つのインスタンスに <a class="tooltip" title="In games, the HUD stands for the Heads-Up Display. This is the method by which information is visually relayed to the player as part of a game's user interface, so things like the health bar, status icons, score, etc... all form part of the HUD, and normally HUD elements do not require user interaction.">HUD</a> やユーザーインターフェースの各要素を描画させることができます。</p>
    <p class="dropspot">このイベントから描画を行った場合、カメラが有効となっていても描画座標は変わらず、アプリケーションサーフェス、ディスプレイのいずれも左上の角は必ず <em></em>(0,0) となり（下記のメモを参照）、アプリケーションサーフェスのデフォルト幅と高さは 1:1 になります。各レイヤーにおけるインスタンスの深度順は変わらず（レイヤーが上側のインスタンスは下側のインスタンスより奥に描画）、イベント内においても最初に <strong>Draw GUI Begin</strong> イベントで描画され、その上に標準の <strong>Draw GUI</strong> イベントで描画、最後に <strong>Draw GUI End</strong> イベントが作動します。</p>
    <p class="dropspot">このように 1 つのインスタンスの Draw GUI Begin イベントで描画および設定が行われていれば、標準の Draw GUI イベントまたは Draw GUI End イベントがあるインスタンスすべてに同じ設定をさせたり、最初のインスタンスの上に重ねて描画できるようになります。<strong>Begin Step</strong> や <strong>End Step</strong> イベントと同じように、常に決められたタイミングで描画を行うための手段と言えましょう。</p>
    <p class="dropspot">これらのイベントは通常の Draw イベント（こちらはカメラのビュー位置、スケール、回転の影響を受けます）と同時に使うこともできます。Draw イベントがなく、Draw GUI イベントだけある場合は、GameMaker Studio 2 によってインスタンスのスプライトがデフォルト描画されます。</p>
    <p class="dropspot">Draw GUI イベントでは、通常の Draw イベントで描画された内容よりも上に描画されます。そのためレイヤーが下側のインスタンスに Draw GUI イベントがある場合、通常の Draw イベントがある上側のインスタンスに重ねて描画されます。どちらのインスタンスにも Draw GUI イベントがある場合はレイヤーの順番が守られます。</p>
    <p class="note"><strong>メモ</strong>: このイベントの描画はデフォルトではアプリケーションサーフェスの等倍サイズで行われ、このサイズは通常、ルームまたはビューポートのサイズとなっています。そのためゲームオプションから<strong>アスペクト比補正</strong>を有効にしている場合、ゲーム画面の黒い帯（レターボックス）の上には描画されません。この動作は <a href="../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_maximise.htm"><span style="font-size:14px;"><span class="inline" style="font-size: 14px">display_set_gui_maximise()</span></span></a>関数から切り替えることができます。また、GUI イベントでは特定のサイズに固定することも可能で、<a href="../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_size.htm"><span class="inline" style="font-size: 14px">display_set_gui_size()</span></a>によってディスプレイまたはアプリケーションサーフェスの寸法に合わせて自動的に拡大縮小できます。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#"><span data-open-text="true">Pre Draw / Post Draw</span><span data-close-text="true">Pre Draw / Post Draw</span></a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">Pre Draw および Post Draw の各イベントは Draw イベントのカテゴリに含まれています。ただし他の Draw イベントとは異なり、これらのイベントは<a class="tooltip" title="表示バッファは、あらゆるものが最終的に描画される「キャンバス」です。表示バッファを直接対象とするイベント（Pre Drawイベントなど）もありますが、それ以外のイベントはまずアプリケーションサーフェスを対象とし、それから表示バッファに描画を行います。">表示バッファ</a>に<em></em>直接描画を行い、サイズは表示中のビューポートすべての画面スペースを合わせたサイズ、<em></em>また利用しているビューポートが 1 つ以下の場合はウィンドウサイズになります。以下の画像はその説明です。</p>
    <p class="dropspot"><img alt="オブジェクトエディタの Post Draw" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_PostDraw.png" style="width: 100%; max-width: 710px;" />したがって Pre Draw および Post Draw イベントを利用するとフルスクリーンのレンダーターゲット（表示バッファ）に描画されることになり、すべてのビューポートが収まるウィンドウと同じサイズになります。どのビューポートもアクティブでない場合は、ウィンドウ自体のサイズが設定されます。</p>
    <p class="dropspot">Pre Draw イベントは他の Draw イベントよりも前に作動し、ビューポートや GUI レイヤーのサイズを気にすることなく値や描画プロパティを設定したり、描画そのものを行うことができます （GUI レイヤーのサイズは画面バッファと同じとなる場合がありますが、コードから GUI の解像度を設定できるため異なる場合もあります）。</p>
    <p class="dropspot">覚えておきたい点として、このイベントは表示バッファが作成される<em></em>前に起こり、標準の描画からは除外されます。そのためルームエディタからビューのクリアを無効にしていない場合、最初のビューポートの描画によって消去されるため、Pre Draw イベントで描画された内容は表示されません。ビューポートを通して見えるようにする、あるいはそもそもビュポートを利用していない場合は、<strong><a href="../Rooms.htm">ルームエディタ</a></strong>から背景色のアルファ（透明度）を 0 に設定しておきましょう。</p>
    <p class="note"><strong>注意</strong>: これらのオプションを無効にした場合、ゲームをテストしたときに意図しない画像の乱れが生じることがあります（インスタンスの残像など）これは表示バッファをクリアせずに前のフレームの上に直接描画されるためですが、<span class="inline" style="font-size: 14px"><a href="../../GameMaker_Language/GML_Reference/Drawing/Colour_And_Alpha/draw_clear_alpha.htm">draw_clear_alpha()</a></span>によって手動でクリアできます。</p>
    <p class="dropspot">Post Draw イベントは標準の Draw イベントより<em></em>後、Draw GUI イベントより<em></em>前に作動します。Pre Draw イベントと同じく表示バッファのサイズに基づいており、Draw GUI イベントより優先されるため、簡単にポストエフェクトなどを画面全体に適用できます。また、ゲーム内の <a class="tooltip" title="In games, the HUD stands for the Heads-Up Display. This is the method by which information is visually relayed to the player as part of a game's user interface, so things like the health bar, status icons, score, etc... all form part of the HUD, and normally HUD elements do not require user interaction.">HUD</a> / <a class="tooltip" title="Short for 'Graphical User Interface', which is a user interface that includes graphical elements, such as windows, icons and buttons. In GameMaker you have a specific set of object events (Draw GUI Events) that can draw to this layer specifically designed for things like score, lives, inventories, etc...">GUI</a> 要素に影響することもありません。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#"><span data-open-text="true">Window Resize</span><span data-close-text="true">Window Resize</span></a></p>
  <div class="droptext" data-targetname="drop-down3">
    <p class="dropspot">This event type falls under the Draw Event category, and although it doesn't actually draw anything, it does react to changes in the display buffer - specifically, it is designed for reacting to the change in the UWP display buffer size when the game window is "snapped".</p>
    <p class="dropspot">On the UWP target platform it is important that you catch any resizing of the display buffer from the "snapping" of the game window (when the user drags the window to the side of the display, for example). This event will do just that and is triggered every time the window is changed, permitting you to add custom code here that will resize the view or re-position <a class="tooltip" title="In games, the HUD stands for the Heads-Up Display. This is the method by which information is visually relayed to the player as part of a game's user interface, so things like the health bar, status icons, score, etc... all form part of the HUD, and normally HUD elements do not require user interaction.">HUD</a> elements as necessary. This function is provided as a convenient way to avoid having step event code that checks for these things all the time.</p>
    <p class="note"><strong>NOTE</strong>: You cannot draw in this event! It is triggered by resizing the window and is only for catching this change... any drawing that should be done still must be in one of the other draw events.</p>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Object_Events.htm">Object Events</a></div>
        <div style="float:right">Next: <a href="Async_Events.htm">Async Events</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
Draw Events
Pre Draw Event
Post Draw Event
Draw Begin Event
Draw End Events
Draw GUI Events
Draw GUI Begin Event
Draw GUI End Event
Pre Draw Event
Post Draw Event
Window Resize Event
-->
  <!-- TAGS
draw_events
-->

</body></html>