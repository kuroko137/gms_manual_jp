<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "5.2.1.1.0_2";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>Audio Recording</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Audio Recording</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the Audio Recording async event." />
  <meta name="rh-index-keywords" content="Objects - Async Audio Recording Event" />
  <meta name="search-keywords" content="Audio Recording,ev_audio_recording" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Audio Recording">
        <span>Audio Recording</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Audio Recording</h1>
  <p><img alt="Audio Recording Event" class="center" src="../../../assets/Images/Asset_Editors/Async_AudioRecording.png" style="width: 100%; max-width: 316px;" />This event can only be triggered by the <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_start_recording.htm"><span class="inline">audio_start_recording()</span></a> function and will return a <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a> stored in the variable <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>, containing different key/value pairs depending on the <a class="tooltip" title="A callback is simply a function that runs and then triggers another function (or code block) when it has finished doing whatever it was assigned to do. For example, the funtion sprite_add() will trigger a callback in the asynchronous Image Loaded event when the sprite has been loaded.">callback</a> from the function that has triggered the event.</p>
  <p>The following keys will be available in the ds_map:</p>
  <ul class="dropspotlist">
    <li class="dropspot">"<span class="inline">buffer_id</span>" - the ID of the temporary <a href="../../../GameMaker_Language/GML_Reference/Buffers/Buffers.htm">buffer</a> you can use to retrieve the audio data</li>
    <li class="dropspot">"<span class="inline">channel_index</span>" - the recording channel index as returned by the calling function that this data came from</li>
    <li class="dropspot">"<span class="inline">data_len</span>" - the length of data (in bytes) you've received</li>
  </ul>
  <p class="note"><strong>NOTE</strong>: As mentioned at the start of this page, the variable <span class="inline" style="font-size: 14px">async_load </span>is only valid in the asynchronous events, as the DS map that is points to is created at the start of the event, then deleted again at the end. However, note that the temporary buffer in which all audio is stored with the map will also be removed at the end of the event so you should copy it to a custom buffer if you want to keep it for later use.</p>
  <p>In the usage example below we will create a custom buffer to store our recorded audio, and also set our game to record from input source 0:</p>
  <p class="code">channel_index = audio_start_recording(0);<br /> audio_buffer = buffer_create(len, buffer_fast, 1);</p>
  <p>Every game step now that the recording is detected will trigger an asynchronous Audio Recording event where you can deal with the recorded input something like this:</p>
  <p class="code">var channel = async_load[? "channel_index"];<br /> if channel == channel_index<br />    {<br />    len = async_load[? "data_len"];<br />    buffer_copy(async_load[? "buffer_id"], 0, len, audio_buffer, 0);<br />    }</p>
  <p>Here we simply check the "channel_index" key to make sure it matches the value returned when we started recording, and if it does we copy the contents of the temporary buffer created for this event into our custom buffer. After that you can do what you want with the custom buffer - you could play it using the dedicated buffer audio functions, you could process it and send it over the network, you could save it to disk... Once you have your recorded audio in a buffer, you can do basically anything you want.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Async_Events.htm">Async Events</a></div>
        <div style="float:right">Next: <a href="Cloud.htm">Cloud</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
Asynchronous Audio Recording Event
ev_audio_recording
-->
  <!-- TAGS
ev_audio_recording
-->

</body></html>