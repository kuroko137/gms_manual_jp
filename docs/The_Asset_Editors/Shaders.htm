<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "..";
    gCommonRootRelPath = "..";
    gTopicId = "5.5_1";
  
//]]></script>

  <script type="text/javascript" src="../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>シェーダー</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>シェーダー</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how the shader editor works" />
  <meta name="rh-index-keywords" content="Shader Editor" />
  <meta name="search-keywords" content="shaders,shader,open GL,open GL ES" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="シェーダー">
        <span>シェーダー</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>シェーダーエディタ</h1>
  <p><img alt="シェーダーエディタ" class="center" src="../assets/Images/Asset_Editors/Editor_Shaders.png" style="width: 100%; max-width: 1310px;" />シェーダーとは、ゲームによって画面上にレンダリングされるグラフィックを処理するための強力なツールで、スプライトの色相をわずかに加算させるといったものから、ディストーションによって画面全体を歪ませるといったものまで、きわめて高速にエフェクトを適用させることができます。そんなシェーダですが、具体的にはどのようなものでしょうか？</p>
  <p>シェーダーは基本的に 2 つの部分に分かれたプログラムで、グラフィックカードから直接実行されます。GPU がすべての処理を行うために高速であり、さらにはゲームコードの CPU サイクルからも解放してくれます。シェーダー全体は、頂点シェーダープログラムと、フラグメントシェーダープログラム（ピクセルシェーダーとも）によって構成されています。2 つとも小さなプログラムで、グラフィックカードによって画面上にレンダリングされる対象を連動して処理します。そのため実際に<a class="tooltip" title="表示バッファは、あらゆるものが最終的に描画される「キャンバス」です。表示バッファを直接対象とするイベント（Pre Drawイベントなど）もありますが、それ以外のイベントはまずアプリケーションサーフェスを対象とし、それから表示バッファに描画を行います。">ディスプレイバッファ</a>へ<a class="tooltip" title="GameMaker Studio 2におけるレンダリングとは、一般には「ディスプレイバッファに描画」または「サーフェスに描画」することを意味します。また、ベクターソース（フォントなど）をビットマップイメージに変換するプロセスのことを指している場合もあります。">レンダリング</a>される位置、色、アルファ値をリアルタイムで処理できるのです。</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true">頂点シェーダー</span><span data-close-text="true">頂点シェーダー</span></a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">頂点シェーダーは、プログラム可能なシェーダーステージ（段階）のうち、頂点（画像をレンダリングする三角形における 3 つの点）の処理を担うレンダリングパイプラインの内にあり、スプライトやサーフェスといったジオメトリ（基礎形状）をレンダリングする際、GameMaker Studio 2 によって<strong>頂点バッファ</strong>という、一つ一つの三角形の形状を決める頂点のストリームが生成されます。たとえばスプライトは、2 つの三角形のジオメトリ（一般には<em>ポリゴン</em>と呼ぶ）から構成されており、この三角形を合わせてレンダリングすることで「四角形」になります。頂点バッファから流れる頂点ストリームは、頂点データをプログラミング可能な形式で処理できるよう頂点シェーダーへの入力として送られます。頂点シェーダーの出力は GPU によって三角形を組み合わせるために使用され、組み合わされた三角形はビューポートおよびビューカメラへ適切にクリップ&カリングされ、出力ストリームを新しく生成する GPU のラスタライザーブロックに送信されます。このストリームは<strong>フラグメント</strong>というものから構成されています。フラグメントはとても小さなデータ構造で、画面上に表示される一つ一つのピクセルに対応しています。</p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#"><span data-open-text="true">フラグメントシェーダー</span><span data-close-text="true">フラグメントシェーダー</span></a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">フラグメントシェーダーは、「フラグメント」を扱うレンダリングパイプライン内におけるプログラマブルシェーダーステージです。フラグメントとは小片を意味する言葉で、各ポリゴンで使われる補間されたピクセル群のことを指します。これらのフラグメントには、レンダリングされた三角形ピクセルの最終的なピクセルカラーを出力する役割があります。基本的には、頂点シェーダーによるパイプラインを経たすべてのフラグメント（レンダリングされた三角形の各ピクセル）を、フラグメントシェーダーが入力として受け取るという流れで動作します。このようにフラグメントを処理することで、画面上へ最終的に描画されるピクセルの色やアルファを変更することが可能となります。</p>
  </div>
  <p> </p>
  <p>シェーダーが実際にどのように機能するのか、グラフィックパイプラインにおいてどのような役割をするのかはここでは扱いませんが、次のように要約されたガイドがあります。</p>
  <p> </p>
  <ul class="colour">
    <li><a href="../Additional_Information/Guide_To_Using_Shaders.htm">シェーダーの使い方</a></li>
  </ul>
  <p> </p>
  <p>また、次のリンク先にある YoYo Games Tech ブログには、より詳しく述べている記事がいくつかあります。</p>
  <p> </p>
  <ul class="colour">
    <li><a href="https://www.yoyogames.com/blog/14/shaders-overview-part-1">シェーダーその 1 （ Shaders Part 1 ）</a></li>
    <li><a href="https://www.yoyogames.com/blog/16/shaders-overview-part-2">シェーダーその 2 （ Shaders Part 2 ）</a></li>
    <li><a href="https://www.yoyogames.com/blog/17/shaders-overview-part-3">シェーダーその 3 （ Shaders Part 3 ）</a></li>
    <li><a href="https://www.yoyogames.com/blog/18/shaders-overview-part-4">シェーダーその 4 （ Shaders Part 4 ）</a></li>
  </ul>
  <p> </p>
  <p>GameMaker Studio 2 では次のシェーダー言語がサポートされています。</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>シェーダー言語</th>
        <th>ターゲットプラットフォーム</th>
      </tr>
      <tr>
        <td><strong>GLSL ES</strong></td>
        <td>すべてのターゲットプラットフォーム</td>
      </tr>
      <tr>
        <td><strong>GLSL</strong></td>
        <td>Mac または Ubuntu (Linux)</td>
      </tr>
      <tr>
        <td><strong>HLSL 11</strong></td>
        <td>Windows 、UWP 、XboxOne</td>
      </tr>
      <tr>
        <td><strong>PSSL</strong></td>
        <td>Playstation 4</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>シェーダーリソースは、<a href="../Introduction/The_Asset_Browser.htm">アセットブラウザ</a>を右クリック<img alt=[右クリックアイコン]" class="icon" src="../assets/Images/Icons/Icon_RMB.png" style="width: 100%; max-width: 21px;" />して<em>シェーダーを作成</em>を選んで作成します。ベースとなるシェーダーを作成したら、コードを編集する前に新しいリソースを右クリック<img alt="[右クリックアイコン]" class="icon" src="../assets/Images/Icons/Icon_RMB.png" style="width: 100%; max-width: 21px;" />してメニューを開き、次のようにシェーダータイプを選択しましょう。"</p>
  <p><img alt="シェーダーエディタの右クリックメニュー" class="center" src="../assets/Images/Asset_Editors/Editor_Shader_RMBMenu.png" style="width: 100%; max-width: 479px;" />新しいシェーダーを作成すると、こちらのコードエディタは「頂点」と「フラグメント」という 2 つのプログラムごとに分けられ、エディタの上部にあるタブからプログラムを切り替えることができます。<em>片方のプログラムがないシェーダーを作成することは不可能</em>であるため、この 2 つのプログラムは同時に作成されます。もしフラグメントシェーダーだけを使いたい場合でも、まず「パススルー」頂点シェーダーを作成しなくてはなりません。新しいシェーダーを作成するとデフォルトでコードに頂点、フラグメントのパススルーシェーダーが組み込まれているのはそのためです（ページ上部のスクリーンショットにあるように、コードエディタをペイン表示すると 2 つとも並べて表示できます。両方のシェーダーを同時に編集するのに便利です）。</p>
  <p>留意点として、GLSL ES シェーダーは<em>すべて</em>のターゲットプラットフォームで利用できますが、<strong>HTML5</strong> ターゲットプラットフォームで機能させるには <a href="../Settings/Game_Options/HTML5.htm">HTML5 ゲーム設定</a>から WebGL を有効にしなくてはなりません。</p>
  <p>シェーダーと関わりのある関数、使い方についての詳細は次のページを参照してください。</p>
  <ul class="colour">
    <li><a href="../GameMaker_Language/GML_Reference/Asset_Management/Shaders/Shaders.htm">シェーダー関数</a> - シェーダーの GML リファレンスセクションです。</li>
    <li><a href="../GameMaker_Language/GML_Reference/Asset_Management/Shaders/Shader_Constants.htm">シェーダー定数</a> - シェーダーを書くときに利用できる GameMaker Studio 2 の組み込み定数です。</li>
    <li><a href="http://www.khronos.org/registry/gles/specs/2.0/GLSL_ES_Specification_1.0.17.pdf">GLSL ES の仕様書</a> - GameMaker Studio 2 でも使われている、Open GL ES シェーダー言語の仕様が記された PDF ファイルです。</li>
    <li><a href="https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-reference">HLSL 言語リファレンス</a> - HLSL の使い方に関する Microsoft のリファレンスページです。</li>
    <li><a href="https://ubm-twvideo01.s3.amazonaws.com/o1/vault/gdceurope2013/Presentations/825424RichardStenson.pdf">PSSL 言語プレゼンテーション</a> - プレゼンテーション形式で記された PSSL 言語の概要です。</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る: <a href="The_Asset_Editors.htm">アセットエディタ</a></div>
        <div style="float:right">次へ: <a href="Sounds.htm">サウンド</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
The Shader Editor
Shaders
OpenGL ES
HLSL
PSSL
-->
  <!-- TAGS
shader_editor
-->

</body></html>