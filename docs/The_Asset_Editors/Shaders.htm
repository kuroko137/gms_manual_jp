<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "..";
    gCommonRootRelPath = "..";
    gTopicId = "5.5_1";
  
//]]></script>

  <script type="text/javascript" src="../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>シェーダー</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>シェーダー</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how the shader editor works" />
  <meta name="rh-index-keywords" content="Shader Editor" />
  <meta name="search-keywords" content="shaders,shader,open GL,open GL ES" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="シェーダー">
        <span>シェーダー</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>シェーダーエディタ</h1>
  <p><img alt="シェーダーエディタ" class="center" src="../assets/Images/Asset_Editors/Editor_Shaders.png" style="width: 100%; max-width: 1310px;" />シェーダーとは、ゲームによって画面上にレンダリングされるグラフィックを加工できる非常に強力なツールで、スプライトの色相をわずかに加算させるといったものから、ディストーションによって画面全体を歪ませるといったものまで、きわめて高速にエフェクトを適用可能です。そんなシェーダーですが、具体的にはどういったものなのでしょうか？</p>
  <p>簡単に言うと、シェーダーとはグラフィックカードから直接実行される 2 つで一組のプログラムです。GPU がすべての処理を行うため非常に高速であり、ゲームコードによる CPU サイクルも解消できます。1 つのシェーダーは、頂点シェーダープログラム、フラグメントシェーダープログラム（ピクセルシェーダーとも）という 2 つのプログラムによって構成されています。グラフィックカードから画面上にレンダリングされる対象をこれらの小さなプログラムに共同処理させることで、<a class="tooltip" title="表示バッファは、あらゆるものが最終的に描画される「キャンバス」です。表示バッファを直接対象とするイベント（Pre Drawイベントなど）もありますが、それ以外のイベントはまずアプリケーションサーフェスを対象とし、それから表示バッファに描画を行います。">表示バッファ</a>に<a class="tooltip" title="GameMaker Studio 2におけるレンダリングとは、一般には「ディスプレイバッファに描画」または「サーフェスに描画」することを意味します。また、ベクターソース（フォントなど）をビットマップイメージに変換するプロセスのことを指している場合もあります。">レンダリング</a>される実際の位置、色、アルファ値をリアルタイムで加工できるのです。</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true">頂点シェーダー</span><span data-close-text="true">頂点シェーダー</span></a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">頂点シェーダーは、頂点（画像をレンダリングする三角形内にある 3 つの点）を扱うレンダリングパイプラインにおけるプログラマブル・シェーダーステージです。スプライトやサーフェスといったジオメトリ（形状）をレンダリングする際、GameMaker Studio 2 によって<strong>頂点バッファ</strong>という、三角形それぞれのジオメトリを定義する頂点ストリームが生成されます。たとえばスプライトには 2 つの三角形からなるジオメトリ（一般的には<em>ポリゴン</em>と呼ぶ）があり、三角形を合わせるようにレンダリングすることで「四角形」を成します。こうした頂点バッファのストリームは頂点シェーダーに入力として送られ、頂点データをプログラミングして処理できるようにします。頂点シェーダーの出力をもとに GPU 側ですべての三角形が組み立てられ、ビューポートおよびビューカメラに収まるよう適切にクリップ&カリングされたのち、GPU のラスタライザーブロックに送信されます。そしてこのラスタライズブロックから、<strong>フラグメント</strong>で構成された新しい出力ストリームが生成されます。フラグメントとはとても小さなデータ構造で、画面上に表示される一つ一つのピクセルに対応しています。</p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#"><span data-open-text="true">フラグメントシェーダー</span><span data-close-text="true">フラグメントシェーダー</span></a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">フラグメントシェーダーは、「フラグメント」を処理するレンダリングパイプラインにおけるプログラマブル・シェーダーステージです。フラグメントとは小片を意味する言葉で、各ポリゴンのテクスチャに使われている補間されたピクセル群のことを指します。これらのフラグメントには、レンダリングされた三角形ピクセルの最終的なピクセルカラーを出力する役割があります。フラグメントシェーダーの仕組みを簡単に説明すると、頂点シェーダーのパイプラインを経たすべてのフラグメント（レンダリングされた三角形の各ピクセル）を入力として受け取り、最終的に画面上へ描画されるピクセルの色やアルファを変更するというものです。</p>
  </div>
  <p> </p>
  <p>シェーダーの具体的な動作や、グラフィックパイプラインにおける役割はここでは扱いませんが、以下に簡単なガイドがあります。</p>
  <p> </p>
  <ul class="colour">
    <li><a href="../Additional_Information/Guide_To_Using_Shaders.htm">シェーダーの利用ガイド</a></li>
  </ul>
  <p> </p>
  <p>また、次のリンクからアクセスできる YoYo Games Tech ブログの記事において、より詳しく掘り下げられています。</p>
  <p> </p>
  <ul class="colour">
    <li><a href="https://www.yoyogames.com/blog/14/shaders-overview-part-1">シェーダーその 1 （ Shaders Part 1 ）</a></li>
    <li><a href="https://www.yoyogames.com/blog/16/shaders-overview-part-2">シェーダーその 2 （ Shaders Part 2 ）</a></li>
    <li><a href="https://www.yoyogames.com/blog/17/shaders-overview-part-3">シェーダーその 3 （ Shaders Part 3 ）</a></li>
    <li><a href="https://www.yoyogames.com/blog/18/shaders-overview-part-4">シェーダーその 4 （ Shaders Part 4 ）</a></li>
  </ul>
  <p> </p>
  <p>GameMaker Studio 2 でサポートされているシェーダー言語は以下のとおりです。</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>シェーダー言語</th>
        <th>ターゲットプラットフォーム</th>
      </tr>
      <tr>
        <td><strong>GLSL ES</strong></td>
        <td>すべてのターゲットプラットフォーム</td>
      </tr>
      <tr>
        <td><strong>GLSL</strong></td>
        <td>Mac, Ubuntu (Linux)</td>
      </tr>
      <tr>
        <td><strong>HLSL 11</strong></td>
        <td>Windows, UWP, XboxOne</td>
      </tr>
      <tr>
        <td><strong>PSSL</strong></td>
        <td>Playstation 4</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>To create a shader resource, simply right click <img alt="RMB Icon" class="icon" src="../assets/Images/Icons/Icon_RMB.png" style="width: 100%; max-width: 21px;" /> on <a href="../Introduction/The_Asset_Browser.htm">Asset Browser</a> and select <em>Create Shader</em>. Once you have created the base shader, you can then use the right mouse <img alt="RMB Icon" class="icon" src="../assets/Images/Icons/Icon_RMB.png" style="width: 100%; max-width: 21px;" /> menu on the new resource to select the shader type before continuing to edit the code:</p>
  <p><img alt="シェーダーエディタの右クリックメニュー" class="center" src="../assets/Images/Asset_Editors/Editor_Shader_RMBMenu.png" style="width: 100%; max-width: 479px;" />シェーダーを作成すると頂点・フラグメントという 2 つのプログラムで分割されたコードエディタが開きますが、上部にあるタブ一覧から片方のプログラムに切り替えることができます。これらのプログラムは同時に作成され、<em>1 つしかプログラムがないシェーダーは作成できません</em>。仮にフラグメントシェーダーだけを使う場合でも、まず通過点となる頂点シェーダーを作成しなくてはならず、そのためシェーダーを新規作成するとデフォルトでコードに頂点・フラグメントのパススルーシェーダーが組み込まれます（なお、ページ上部のスクリーンショットを見てわかるように、コードエディタのペインには 2 つのプログラムが並べて表示されます。同時に編集したい場合は便利でしょう…）。</p>
  <p>注意点として、GLSL ES シェーダーは<em>すべて</em>のターゲットプラットフォームで利用できますが、<strong>HTML5</strong> ターゲットプラットフォームで機能させるには <a href="../Settings/Game_Options/HTML5.htm">HTML5 ゲーム設定</a>から WebGL を有効にしなくてはなりません。</p>
  <p>シェーダーと関わりのある関数および詳しい使い方については、次のページを参照してください。</p>
  <ul class="colour">
    <li><a href="../GameMaker_Language/GML_Reference/Asset_Management/Shaders/Shaders.htm">シェーダー関数</a> - シェーダーの GML リファレンスセクションです。</li>
    <li><a href="../GameMaker_Language/GML_Reference/Asset_Management/Shaders/Shader_Constants.htm">シェーダー定数</a> - シェーダーを書くときに利用できる GameMaker Studio 2 の組み込み定数です。</li>
    <li><a href="http://www.khronos.org/registry/gles/specs/2.0/GLSL_ES_Specification_1.0.17.pdf">GLSL ES の仕様書</a> - GameMaker Studio 2 でも使われている、Open GL ES シェーダー言語の仕様が記された PDF ファイルです。</li>
    <li><a href="https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-reference">HLSL 言語リファレンス</a> - HLSL の使い方に関する Microsoft のリファレンスページです。</li>
    <li><a href="https://ubm-twvideo01.s3.amazonaws.com/o1/vault/gdceurope2013/Presentations/825424RichardStenson.pdf">PSSL 言語プレゼンテーション</a> - プレゼンテーション形式で記された PSSL 言語の概要です。</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">戻る: <a href="The_Asset_Editors.htm">アセットエディタ</a></div>
        <div style="float:right">次へ: <a href="Sounds.htm">サウンド</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
The Shader Editor
Shaders
OpenGL ES
HLSL
PSSL
-->
  <!-- TAGS
shader_editor
-->

</body></html>