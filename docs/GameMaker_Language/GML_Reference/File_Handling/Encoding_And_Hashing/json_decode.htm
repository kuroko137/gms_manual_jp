<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "10.2.16.6.0_2";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>json_decode</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>json_decode</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for json_decode" />
  <meta name="rh-index-keywords" content="json_decode" />
  <meta name="search-keywords" content="json_decode" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="json_decode">
        <span>json_decode</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>json_decode</h1>
  <h3><strong>IMPORTANT!</strong> This function - while still valid - has been superceeded by the function <span class="inline"><a href="json_parse.htm">json_parse()</a></span>, and we recommend that you only use this function for legacy support.</h3>
  <p>JSON (JavaScript Object Notation) is a lightweight data-interchange format which is easy for to read and write, for both people and machines. It is built on two basic structures:</p>
  <ul class="colour">
    <li>A collection of name/value pairs, called a <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><tt>DS Map</tt></a> in GameMaker Studio 2 but also known as a "dictionary" or "object".</li>
    <li>An ordered list of values, called a <a href="../../Data_Structures/DS_Lists/DS_Lists.htm"><tt>DS List</tt></a> in GameMaker Studio 2 but this can also be called an "array" or "sequence".</li>
  </ul>
  <p>With this function, you can decode a piece of JSON and convert it into a <tt>DS Map</tt>, ready for use in GameMaker Studio 2. If the JSON to be decoded requires a hierarchy of lists and maps within the central DS map, these are decoded too and also created for you, using the following rules (note that these rules apply to the top-level structure only):</p>
  <ul class="colour">
    <li><strong><i>JSON is a single value</i></strong> - returns a DS map with a single entry "default" that is the value</li>
    <li><strong><i>JSON is an array of objects or values</i></strong> - returns a DS map with a single entry "default" that is a DS list of the objects or values</li>
    <li><strong><i>JSON is an object</i></strong> - returns a DS map that has the object entries in it</li>
  </ul>
  <p class="note"><b>NOTE</b>: When decoding JSON arrays, there is a map with the key "default" ONLY when an array is the top level structure, and ONLY for that top-level array. Internal lists decode directly to DS map without being enclosed in a DS map.</p>
  <p class="note"><strong>NOTE</strong>: If you wrote GameMaker arrays into the top level, or as the contents of a DS map or DS list, these will be decoded as DS lists, <strong>not</strong> arrays.</p>
  <p>Normally you would know what keys the JSON decodes to, but if not then you can use the <a href="../../Data_Structures/DS_Maps/ds_map_size.htm"><tt>ds_map_size()</tt></a>, <a href="../../Data_Structures/DS_Maps/ds_map_find_first.htm"><tt>ds_map_find_first()</tt></a> and <a href="../../Data_Structures/DS_Maps/ds_map_find_next.htm"><tt>ds_map_find_next()</tt></a> functions to parse the map and get the necessary information.</p>
  <p class="note"><b>NOTE</b>: GameMaker Studio 2 creates the necessary DS maps and lists from the JSON, and for cleaning up you only need to delete the <b>top level</b> map or list and GameMaker Studio 2 will automatically delete from memory all the maps and lists underneath.</p>
  <p class="note"><b>IMPORTANT</b>: You cannot have 64bit numbers in your JSON, as they will not work correctly due them not being handled by the JSON format.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">json_decode(string)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>string</td>
        <td>The JSON format string that you are passing to the function for decoding</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">DS map id or -1 if it fails</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var resultMap = json_decode(requestResult);<br /> var list = ds_map_find_value(resultMap, "default");<br /> var size = ds_list_size(list);<br /> for (var n = 0; n &lt; ds_list_size(list); n++;)<br />    { <br />    var map = ds_list_find_value(list, n);<br />    var curr = ds_map_find_first(map);<br />    while (is_string(curr))<br />       { <br />       global.Name[n] = ds_map_find_value(map, "name");<br />       curr = ds_map_find_next(map, curr);<br />       } <br />    } <br /> ds_map_destroy(resultMap);
  </p>
  <p>The above code will decode a JSON string and parse it to generate a global array.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Encoding_And_Hashing.htm">File Encoding</a></div>
        <div style="float:right">Next: <a href="json_stringify.htm">json_stringify</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
json_decode
-->
  <!-- TAGS
json_decode
-->

</body></html>