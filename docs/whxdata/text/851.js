rh._.exports({"0":["gpu_set_ztestenable","gpu_set_ztestenable"],"1":["gpu_set_ztestenable"],"2":["gpu_set_ztestenable"],"3":["\n  ","\n    ","\n    ","\n    ","\n      ","\n        ","gpu_set_ztestenable","\n      ","\n      ","\n        ","Click here to see this page in full context","\n      ","\n    ","\n  ","\n  ","\n\n\n\n  ","\n  ","\n  ","This function can be used to toggle z-buffer testing on or off, affecting how things will be drawn (in general only of use when working with 3D projects). Essentially, by default when z-testing is off and you have two objects drawing to the same space,\n    ","both"," objects will be rendered regardless of whether one will over-draw the other, resulting in unnecessary draw calls. If you switch this on then the z-buffer is tested to see whether an object will be \"visible\" and not drawn if it's\n    not. Note that this is the ","default"," behaviour, but you can change this by changing the type of comparison used for z-buffer testing (see the function ","gpu_set_zfunc()",".","\n  ","By default z-buffer testing is off (","false",").","\n  "," ","\n  ","\n  ","gpu_set_ztestenable(enable);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Description","\n      ","\n      ","\n        ","enable","\n        ","Enable or disable z-buffer testing (","true"," or ","false",").","\n      ","\n    ","\n  ","\n  "," ","\n  ","\n  ","N/A","\n  "," ","\n  ","\n  ","gpu_set_ztestenable(true);"," draw_sprite(spr_Background, 0, 0, 0);"," gpu_set_ztestenable(false);\n  ","\n  ","The above code switches on z-buffer testing to draw a background sprite and then switches it back off again to continue drawing.","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","GPU Control","\n        ","Next: ","gpu_set_zfunc","\n      ","\n    ","\n    ","\n  ","\n  ","\n  ","\n\n"],"4":["gpu_set_ztestenable"],"5":["© Copyright YoYo Games Ltd. 2020 All Rights Reserved"],"7":["Syntax:","Returns:","Example:"],"id":"851"})