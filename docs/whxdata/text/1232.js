rh._.exports({"0":["gamepad_get_guid","gamepad_get_guid"],"1":["gamepad_get_guid"],"2":["gamepad_get_guid"],"3":["\n  ","\n    ","\n    ","\n    ","\n      ","\n        ","gamepad_get_guid","\n      ","\n      ","\n        ","Click here to see this page in full context","\n      ","\n    ","\n  ","\n  ","\n\n\n\n  ","\n  ","\n  ","With this function you can retrieve the GUID for the gamepad connected to the given slot index. You supply the gamepad slot to check (from 0 - 11), and the function will return one of the following strings:","\n  ","\n    ","\"","none","\" if no GUID is available or no gamepad is connected","\n    ","\"","device index out of range","\" if the gamepad slot index is out of range","\n    ","The GUID string, something like \"050000005e040000fd020000ffff3f00\", if the slot has a gamepad assigned and can get the GUID for it","\n  ","\n  ","This function would usually be used in conjunction with ","gamepad_get_description()"," to generate part of the SDL string required for remapping controllers on Windows, Android and macOS.","\n  "," ","\n  ","\n  ","gamepad_get_guid(index);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Description","\n      ","\n      ","\n        ","index","\n        ","Which gamepad \"slot\" index to check","\n      ","\n    ","\n  ","\n  "," ","\n  ","\n  ","String","\n  "," ","\n  ","\n  ","var _guid = gamepad_get_guid(global.PadIndex);"," var _desc = gamepad_get_description(global.PadIndex);"," global.GamepadID = _guid + \",\" + _desc;","\n  ","The above code gets the GUID and name description strings, then concatenates them and stores the final string in a global variable for future reference.","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Gamepad Input","\n        ","Next: "," gamepad_get_device_count ","\n      ","\n    ","\n    ","\n  ","\n  ","\n  ","\n\n"],"4":["gamepad_get_guid"],"5":["© Copyright YoYo Games Ltd. 2020 All Rights Reserved"],"7":["Syntax:","Returns:","Example:"],"id":"1232"})