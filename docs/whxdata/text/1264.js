rh._.exports({"0":["ds_grid_shuffle","ds_grid_shuffle"],"1":["ds_grid_shuffle"],"2":["ds_grid_shuffle"],"3":["\n  ","\n    ","\n    ","\n    ","\n      ","\n        ","ds_grid_shuffle","\n      ","\n      ","\n        ","Click here to see this page in full context","\n      ","\n    ","\n  ","\n  ","\n\n\n\n  ","\n  ","\n  ","This function can be used to randomise the positions of all values in all cells within a grid.","\n  ","NOTE:"," This function will shuffle the grid cells to the same positions every time the game is run afresh due to the fact that GameMaker Studio 2 generates the same initial random seed every time to make debugging code a far easier task. To avoid\n    this behaviour use ","randomise()"," at the start of your game. This is only true when testing and debugging the game, as the final executable\n    package will not show this behaviour and will be random every play.","\n  "," ","\n  ","\n  ","ds_grid_shuffle(index);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Description","\n      ","\n      ","\n        ","index","\n        ","The index of the grid to shuffle.","\n      ","\n    ","\n  ","\n  "," ","\n  ","\n  ","N/A","\n  "," ","\n  ","\n  ","ds_grid_shuffle(grid)","\n  ","This would take all the values in the DS grid indexed in the variable \"grid\" and shuffle them around to get a different order.","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","DS Grids","\n        ","Next: ","ds_grid_sort","\n      ","\n    ","\n    ","\n  ","\n  ","\n  ","\n\n"],"4":["ds_grid_shuffle"],"5":["© Copyright YoYo Games Ltd. 2020 All Rights Reserved"],"7":["Syntax:","Returns:","Example:"],"id":"1264"})