rh._.exports({"0":["steam_ugc_send_query","steam_ugc_send_query"],"1":["steam_ugc_send_query"],"2":["steam_ugc_send_query"],"3":["\n  ","\n    ","\n    ","\n    ","\n      ","\n        ","steam_ugc_send_query","\n      ","\n      ","\n        ","Click here to see this page in full context","\n      ","\n    ","\n  ","\n  ","\n\n\n\n  ","\n  ","\n  ","This function can be used to send a query request. You first define the query using the appropriate ","steam_ugc_create_query_*()"," functions which will return a \"query Handle\". This handle is then used to set filters etc.... before being\n    used in this function to send off the query request. The function returns a unique async ID value which can be used to check the details correctly in the ","Steam Async event",".\n    This event will have the ","async_load"," DS map which will be populated with the following key/value pairs:","\n  ","\n    ","\"","id","\" - The async ID returned by the function that triggered the event","\n    ","\"","result","\" - The result of the operation (a real value). This will either be the GML constant ","ugc_result_success"," or some other real number. So you should check for this constant to ensure that the call was successful, and if\n      otherwise somthing has not worked correctly. The rest of the possible values returned are shown as the result of the Steam \"EResult\" value and you should see ","steamclientpublic.h"," in the SDK headers for all 89 possible values.","\n    ","\"","event_type","\" - The string \"","ugc_query","\"","\n    ","\"","num_results","\" - The number of results returned (max 50 )","\n    ","\"","total_matching","\" - The total number of matching results","\n    ","\"","cached_data","\" - Indicates whether this data was retrieved from the local on-disk cache or not (will be either ","true"," or ","false",")","\n    ","\"","results_list","\" - A DS list index index, where each list entry is a DS Map index containing details of the particular item","\n  ","\n  ","When you get the async event type \"ugc_query\", you can then parse the results list and extract the following information from each of the DS maps (one map per item in the list):","\n  ","\n    ","\"","published_file_id\"","\" -Holds the unique published file id for the item","\n    ","\"","file_type","\" - The type of file used","\n    ","\"","creator_app_id","\" - The Steam ID of the item creator","\n    ","\"","consumer_app_id","\" - The Steam ID of the item consumer","\n    ","\"","title","\" - The title of the item","\n    ","\"","description","\" - The description of the item","\n    ","\"","steam_id_owner","\" - The Steam ID of the item owner","\n    ","\"","time_created","\" - The time the item was first created","\n    ","\"","time_updated","\" - The last time the item was updated","\n    ","\"","time_added_to_user_list","\" - The time that the item was subscribed to","\n    ","\"","visibility","\" - The visibility of the item (see ","steam_ugc_set_item_visibility()"," for the returned constants)","\n    ","\"","banned","\" - Whether the item has been banned (","true",") or not (","false",")","\n    ","\"","accepted_for_use","\" - Whether the item has been accepted for use (","true",") or not (","false",")","\n    ","\"","tags_truncated","\" - Short version of the tags as an array","\n    ","\"","tags","\" - A string containing the tags for the item, each one separated by a comma","\n    ","\"","handle_file","\" - The unique file handle for the item","\n    ","\"","handle_preview_file","\" - The unique handle for the image preview for the item (can be used as an argument with ","steam_ugc_download()"," to download a preview image)","\n    ","\"","filename","\" - The name of the item file","\n    ","\"","file_size","\" - The size of the item file","\n    ","\"","preview_file_size","\" - The size of the preview image","\n    ","\"","url","\" - The full URL for the item","\n    ","\"","votes_up","\" - The number of up-votes received","\n    ","\"","votes_down","\" - The number of down-votes received","\n    ","\"","score","\" - The overall score of the item","\n    ","\"","account_id_owner","\" - The account ID from the Steam ID owner (this can be used in the function ","steam_ugc_create_query_user_ex()",")","\n  ","\n  "," ","\n  ","\n  ","steam_ugc_send_query(ugc_query_handle);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Description","\n      ","\n      ","\n        ","ugc_query_handle","\n        ","The query handle to send.","\n      ","\n    ","\n  ","\n  "," ","\n  ","\n  ","Boolean","\n  "," ","\n  ","\n  ","var query_handle = steam_ugc_create_query_all(ugc_query_RankedByTrend, ugc_match_Items, 1);"," steam_ugc_query_add_required_tag(query_handle, \"RPG\");"," steam_ugc_query_set_return_long_description(query_handle, true);"," steam_ugc_query_set_allow_cached_response(query_handle,\n    true);"," query_ID = steam_ugc_send_query(query_handle);","\n  ","The above code creates a query request and stores it's handle in a local variable for future use in the rest of the functions which further define the query request before sending the query.","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","UGC","\n        ","Next: ","steam_ugc_download","\n      ","\n    ","\n    ","\n  ","\n  ","\n  ","\n\n"],"4":["steam_ugc_send_query"],"5":["© Copyright YoYo Games Ltd. 2020 All Rights Reserved"],"7":["Syntax:","Returns:","Example:"],"id":"1769"})