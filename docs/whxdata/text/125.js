rh._.exports({"0":["Cloud Saving","Cloud Saving"],"2":["Cloud Saving"],"3":["\n  ","\n    ","\n    ","\n    ","\n      ","\n        ","Cloud Saving","\n      ","\n      ","\n        ","Click here to see this page in full context","\n      ","\n    ","\n  ","\n  ","\n\n\n\n  ","\n  ","\n  ","When making games, it is often necessary to store information about the game state in a file of some type, but storing this information on the device is not always the best option as, if the player deleted the game and then re-installs, this information\n    may be lost. To prevent this you can use various different ","cloud services",", which offer data storage over the internet for retrieval and modification at any time. You should note that this function is limited to ","one"," single\n    data \"blob\" per game, so every time you send a new save to the cloud service, whether it is a string or a file, it will overwrite any previously stored data.","\n  ","NOTE: ","Currently only the ","Android"," target uses these functions, and you need to tick the ","Enable Google Cloud Saving"," checkbox in the ","Social"," section\n    of the Android ","Game Options",". This will prompt you to download the ","Google Services"," extension,\n    which is required for cloud saving on Android to function. For more information on Cloud Saving please see the following helpdesk article: ","Android Cloud Saving","\n  ","GameMaker Studio 2 supports this with a few simple functions that work in conjunction with the ","Asynchronous Cloud Event",". These functions\n    are explained on the following pages:","\n  "," ","\n  ","\n    ","cloud_synchronise","\n    ","cloud_string_save","\n    ","cloud_file_save","\n  ","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Asynchronous Functions","\n        ","Next: ","Push Notifications","\n      ","\n    ","\n    ","\n  ","\n  ","\n  ","\n\n"],"4":["Cloud Saving"],"5":["© Copyright YoYo Games Ltd. 2020 All Rights Reserved"],"id":"125"})