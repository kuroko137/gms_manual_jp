rh._.exports({"0":["Android Extensions","Android Extensions"],"1":["Extensions - Creating Android Extensions"],"2":["Android extensions"],"3":["\n  ","\n    ","\n    ","\n    ","\n      ","\n        ","Android Extensions","\n      ","\n      ","\n        ","Click here to see this page in full context","\n      ","\n    ","\n  ","\n  ","\n\n\n\n  ","\n  ","\n  ","To create an extension for Android you have to do it in two parts. The first part would be to add the extension itself, along with the required files etc... and the second is to create the functions and macros/constants that the extension requires.\n    The functions and constants are added using ","placeholder ","files to group them together, so you'd add a placeholder and then define the functions and macros as explained in the section above. To add the rest of the files though you\n    need to first tick the ","Android ","check-box in the ","Additional Features"," section of the editor:","\n  ","\n  ","Here you give the following details:","\n  ","\n    ","ClassName",": Your extension can have multiple classes, with each class having its own functions and constants, so you should give it a name that reflects its purpose.","\n    ","Android Permissions",": Here you can add in any extra permissions that your extension requires. What these permissions are will depend entirely on the use that the extension has, and so you should ","check the documentation supplied by Google","      for the Android platform, or, if you are using a third party SDK, the documentation that comes with the SDK. To add a new permission you need to click the "," button to add a placeholder permission, and then do a slow "," click on that to edit it to what is required. You can remove permissions using the "," button.","\n    ","Inject To Gradle Dependencies",": Here you can add any extra code that needs to be injected (added) into the Gradle build dependencies.","\n    ","Inject to AndroidManifest.xml Manifest",": Here you set any extra code to be injected (added) to the Android Manifest XML file when your game is built for testing or final release. Make sure to revise this (and your permissions) carefully\n      before submitting any games to the store, as incorrect settings will cause your game to be failed for submission.","\n    ","Inject to AndroidManifest.xml Application",": Here you set any extra code to be injected (added) to the Android Manifest XML file under the Application heading when your game is built for testing or final release. Make sure to revise\n      this (and your permissions) carefully before submitting any games to the store, as incorrect settings will cause your game to be failed for submission.","\n    ","Inject to AndroidManifest.xml RunnerActivity",": Here you set any extra code to be injected (added) to the Android Manifest XML file under the RunnerActivity heading when your game is built for testing or final release. Make sure to\n      revise this (and your permissions) carefully before submitting any games to the store, as incorrect settings will cause your game to be failed for submission.","\n  ","\n  ","Once you have set this up correctly, you will need to add the required files for your extension package to work. To do this you need to click on the buttons at the bottom, either ","Add SDK"," or ","Add Source"," and then browse to the files you\n    wish to add. Added files will be stored in the ","AndroidSource"," directory along with your extension. You can open this location at any time by right clicking "," on the extension and selecting ","Open Extension Directory",".","\n  ","For more information on creating Android extensions, please see the ","YoYo Games Knowledge Base",".","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","The Extension Editor","\n        ","Next: ","iOS Extensions","\n      ","\n    ","\n    ","\n  ","\n  ","\n  ","\n\n"],"4":["Android Extensions"],"5":["© Copyright YoYo Games Ltd. 2020 All Rights Reserved"],"id":"2233"})