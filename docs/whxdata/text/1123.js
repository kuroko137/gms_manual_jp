rh._.exports({"0":["window_handle","window_handle"],"1":["window_handle"],"2":["window_handle"],"3":["\n  ","\n    ","\n    ","\n    ","\n      ","\n        ","window_handle","\n      ","\n      ","\n        ","Click here to see this page in full context","\n      ","\n    ","\n  ","\n  ","\n\n\n\n  ","\n  ","\n  ","With this function you can get the internal Windows id value (the HWND, a ","pointer","). This function is really only useful for extension writers who need the ","window handle"," to call Windows API's in DLL code (the returned pointer should\n    be cast into a string and then in the C++ just cast it to an HWND). The table below shows the platforms supported along with what they return:","\n  "," ","\n  ","\n    ","\n      ","\n        ","Platform","\n        ","Returns","\n      ","\n      ","\n        ","Windows","\n        ","Window HWND","\n      ","\n      ","\n        ","macOS","\n        ","NSWindow class","\n      ","\n      ","\n        ","Ubuntu (Linux)","\n        ","XWindow handle","\n      ","\n      ","\n        ","HTML5","\n        ","Canvas ID","\n      ","\n    ","\n  ","\n  "," ","\n  ","\n  ","window_handle();","\n  "," ","\n  ","\n  ","Pointer","\n  "," ","\n  ","\n  ","win_id = windows_handle();","\n  ","The above code will store the game window id in a variable.","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","The Game Window","\n        ","Next: ","window_get_caption","\n      ","\n    ","\n    ","\n  ","\n  ","\n  ","\n\n"],"4":["window_handle"],"5":["© Copyright YoYo Games Ltd. 2020 All Rights Reserved"],"7":["Syntax:","Returns:","Example:"],"id":"1123"})