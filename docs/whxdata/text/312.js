rh._.exports({"0":["skeleton_animation_get_frame","skeleton_animation_get_frame"],"1":["skeleton_animation_get_frame"],"2":["skeleton_animation_get_frame"],"3":["\n  ","\n    ","\n    ","\n    ","\n      ","\n        ","skeleton_animation_get_frame","\n      ","\n      ","\n        ","Click here to see this page in full context","\n      ","\n    ","\n  ","\n  ","\n\n\n\n  ","\n  ","\n  ","This function will return the frame number of the animation on the specified animation track. The function will return -1 if no animation is assigned to the specific track given.","\n  "," ","\n  ","\n  ","skeleton_animation_get_frame(track);","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Description","\n      ","\n      ","\n        ","track","\n        ","The animation track to get the frame of.","\n      ","\n    ","\n  ","\n  "," ","\n  ","\n  ","Integer","\n  "," ","\n  ","\n  ","var frame = skeleton_animation_get_frame(0);"," if frame > 0 && frame < 2","     {\n    ","     var box = skeleton_get_minmax();","     var ww = (box[2] - box[0]) / 2;","     var hh = (box[3] - box[1]) / 2;","     part_particles_create(global.p_sys, box[0] + ww, box[1] + hh, global.Stars, 10);","     }\n  ","\n  ","The above code will check the current frame of the animation assigned to track 0 and then burst some particles from a point in the middle of the total bounding box for the sprite.","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Animation","\n        ","Next: ","skeleton_animation_set_frame","\n      ","\n    ","\n    ","\n  ","\n  ","\n  ","\n\n"],"4":["skeleton_animation_get_frame"],"5":["© Copyright YoYo Games Ltd. 2020 All Rights Reserved"],"7":["Syntax:","Returns:","Example:"],"id":"312"})