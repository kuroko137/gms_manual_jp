rh._.exports({"0":["phy_rotation","phy_rotation"],"1":["phy_rotation"],"2":["phy_rotation"],"3":["\n  ","\n    ","\n    ","\n    ","\n      ","\n        ","phy_rotation","\n      ","\n      ","\n        ","Click here to see this page in full context","\n      ","\n    ","\n  ","\n  ","\n\n\n\n  ","\n  ","\n  ","This variable can be used to get (or to set) the angle of the instances fixture in degrees, similar to setting or getting the ","image_angle",". However note that\n    in the physics world rotations are calculated in the ","opposite"," way to the normal GameMaker Studio 2 game world, meaning that vector functions like ","point_direction()","should\n    have their return values modified (simply making positive to negative should resolve this).","\n  "," ","\n  ","\n  ","phy_rotation;","\n  "," ","\n  ","\n  ","Real (single precision floating point value, or ","undefined"," if the instance is not physics enabled)","\n  "," ","\n  ","\n  ","if (phy_speed_x > 0) || (phy_speed_y > 0)","     {\n    ","     phy_rotation += sqrt(sqr(phy_speed_x) + sqr(phy_speed_y)) /10;","     }\n  ","\n  ","The above code checks the linear speed and if either vector is not 0, it then calculates the actual speed and uses that to set the rotation.","\n  "," ","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Physics Variables","\n        ","Next: ","phy_fixed_rotation","\n      ","\n    ","\n    ","\n  ","\n  ","\n  ","\n\n"],"4":["phy_rotation"],"5":["© Copyright YoYo Games Ltd. 2020 All Rights Reserved"],"7":["Syntax:","Returns:","Example:"],"id":"1606"})