rh._.exports({"0":["buffer_write","buffer_write"],"1":["buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text"],"2":["buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text"],"3":["\n  ","\n    ","\n    ","\n    ","\n      ","\n        ","buffer_write","\n      ","\n      ","\n        ","Click here to see this page in full context","\n      ","\n    ","\n  ","\n  ","\n\n\n\n  ","\n  ","\n  ","This function can be used to write data to a previously created buffer. The data you write must be in agreement with the \"type\" argument of this function, meaning that you can't try to write a string as an unsigned 16bit integer, for example.\n    The following constants can be used to define the data type:","\n  "," ","\n  ","\n    ","\n      ","\n        ","Constant","\n        ","Description","\n      ","\n      ","\n        ","buffer_u8","\n        ","An unsigned, 8bit integer. This is a positive value from 0 to 255.","\n      ","\n      ","\n        ","buffer_s8","\n        ","A signed, 8bit integer. This can be a positive or negative value from -128 to 127 (0 is classed as positive).","\n      ","\n      ","\n        ","buffer_u16","\n        ","An unsigned, 16bit integer. This is a positive value from 0 - 65,535.","\n      ","\n      ","\n        ","buffer_s16","\n        ","A signed, 16bit integer. This can be a positive or negative value from -32,768 to 32,767 (0 is classed as positive).","\n      ","\n      ","\n        ","buffer_u32","\n        ","An unsigned, 32bit integer. This is a positive value from 0 to 4,294,967,295.","\n      ","\n      ","\n        ","buffer_s32","\n        ","A signed, 32bit integer. This can be a positive or negative value from -2,147,483,648 to 2,147,483,647 (0 is classed as positive).","\n      ","\n      ","\n        ","buffer_u64","\n        ","An unsigned 64bit integer.","\n      ","\n      ","\n        ","buffer_f16","\n        ","A 16bit float. This can be a positive or negative value within the same range as a 16 bit signed integer.","\n      ","\n      ","\n        ","buffer_f32","\n        ","A 32bit float. This can be a positive or negative value within the same range as a 32 bit signed integer.","\n      ","\n      ","\n        ","buffer_f64","\n        ","A 64bit float.","\n      ","\n      ","\n        ","buffer_bool","\n        ","A boolean value. Can only be either 1 or 0 (","true"," or ","false",")","\n      ","\n      ","\n        ","buffer_string","\n        ","A string of any size, finalized with a null terminating character.","\n      ","\n      ","\n        ","buffer_text","\n        ","A string of any size, without the final null terminating character.","\n      ","\n    ","\n  ","\n  "," ","\n  ","The function will return 0 if it succeeds or -1 if it fails.","\n  "," ","\n  ","\n  ","buffer_write(buffer, type, value)","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Description","\n      ","\n      ","\n        ","buffer","\n        ","The index of the buffer to write to.","\n      ","\n      ","\n        ","type","\n        ","The type of data that is to be written to the buffer (see the list of constants above).","\n      ","\n      ","\n        ","value","\n        ","The data to write.","\n      ","\n    ","\n  ","\n  "," ","\n  ","\n  ","0 if success, or -1 if it fails","\n  "," ","\n  ","\n  ","buffer_seek(buff, buffer_seek_start, 0);"," buffer_write(buff, buffer_s16, 0);"," buffer_write(buff, buffer_s16, x);"," buffer_write(buff, buffer_s16, y);","\n  ","The above code finds the start of the buffer with the id stored in the variable \"buff\" them writes a series of signed 16bit integer values to it.","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","Buffers","\n        ","Next: ","buffer_fill","\n      ","\n    ","\n    ","\n  ","\n  ","\n  ","\n\n"],"4":["buffer_write"],"5":["© Copyright YoYo Games Ltd. 2020 All Rights Reserved"],"7":["Syntax:","Returns:","Example:"],"id":"1839"})