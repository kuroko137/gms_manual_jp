rh._.exports({"0":["json_parse","json_parse"],"1":["json_parse"],"2":["json_parse"],"3":["\n  ","\n    ","\n    ","\n    ","\n      ","\n        ","json_parse","\n      ","\n      ","\n        ","Click here to see this page in full context","\n      ","\n    ","\n  ","\n  ","\n\n\n\n  ","\n  ","\n  ","This function can be used to parse a JSON string (either previously created using json_stringify or from any valid source), and convert it into a collection of arrays or structs, where an array is the equivalent of a JSON array and a struct is the equivalent\n    of a JSON object. You supply the string to parse, and the function will return the top level array or struct which can then be checked in your code. If you are not sure of the contents of the JSON, you can use the different ","Variable Functions","    (like ","typeof()"," or ","variable_struct_get_names()",") to check the returned contents.\n    Note that parsing an invalid value (ie: not a string) into the function will throw an exception error.","\n  "," ","\n  ","\n  ","json_parse","(json)","\n  ","\n    ","\n      ","\n        ","Argument","\n        ","Description","\n      ","\n      ","\n        ","json","\n        ","The JSON to parse (a string)","\n      ","\n    ","\n  ","\n  "," ","\n  ","\n  ","Nested structs and arrays","\n  "," ","\n  ","\n  ","In this example we will parse the following JSON string which we'll hold in the variable \"json\":","\n  ","json = \"{\\\"myObj\\\": { \\\"apples\\\":10, \\\"oranges\\\":12, \\\"potatoes\\\":100000, \\\"avocados\\\":0 }, \\\"myArray\\\":[0, 1, 2, 2, 4, 0, 1, 5, 1]}\"","\n  ","This string would be parsed something like this:","\n  ","data = json_parse(json);"," if variable_struct_exists(data, \"myObj\")"," {\n    "," if is_struct(data.myObj)","     {","     var _names = variable_struct_get_names(data.myObj);","     var _str = \"\";","     for (var i = 0; i < array_length(_names); i++;)","         {","         _str = _names[i] + \":\n    \" + string(variable_struct_get(data.myObj, _names[i]));","         show_debug_message(_str);","         }","     }"," if variable_struct_exists(data, \"myArray\")","     {","     if is_array(data.myArray)","         {","            show_debug_message(data.myArray);","         }","     }"," }\n  ","\n  ","The above code will parse the given JSON string, generating the following console output:","\n  ","oranges: 12"," potatoes: 100000"," avocados: 0"," apples: 10"," [ 0,1,2,2,4,0,1,5,1 ]","\n  "," ","\n  "," ","\n  "," ","\n  ","\n    ","\n      ","\n        ","Back: ","File Encoding","\n        ","Next: ","base64_encode","\n      ","\n    ","\n    ","\n  ","\n  ","\n  ","\n\n"],"4":["json_parse"],"5":["© Copyright YoYo Games Ltd. 2020 All Rights Reserved"],"7":["Syntax:","Returns:","Extended Example:"],"id":"2619"})