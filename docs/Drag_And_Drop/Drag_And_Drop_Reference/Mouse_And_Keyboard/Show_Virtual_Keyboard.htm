<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "9.2.4.0_7";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css" />
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css" />
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>Show Virtual Keyboard</title>
  <meta name="topic-status" content="Draft" />

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Show Virtual Keyboard</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains the Show Virtual Keyboard action" />
  <meta name="rh-index-keywords" content="DnD™ Action - Show Virtual Keyboard" />
  <meta name="search-keywords" content="Show Virtual Keyboard" />
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Show Virtual Keyboard">
        <span>Show Virtual Keyboard</span>
      </div>
      <div class="gotohome" title="ページをすべて表示するにはここをクリック">
        <span>ページをすべて表示するにはここをクリック</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><img alt="Show Virtual Keyboard Icon" class="icon" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Mouse_And_Keyboard/i_VirtualKeyboard_Show.png" style="width: 100%; max-width: 32px;" /> Show Virtual Keyboard</h1>
  <p>This action can be used to show the virtual keyboard on the device running the game. When you call this action you will be asked to provide one of the following constants for each of the first three arguments:</p>
  <ul class="colour">
    <li><b>Keyboard type</b>: This constant is used to set which key-set will be available on the virtual keyboard. The available keyboard types are:
      <table>
        <tbody>
          <tr>
            <th>Keyboard Type</th>
            <th>Description</th>
          </tr>
          <tr>
            <td><span class="inline">kbv_type_default</span></td>
            <td>The default keyboard type for the current system.</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_type_ascii</span></td>
            <td>An ASCII-only keyboard.</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_type_url</span></td>
            <td>A normal keyboard optimized for URL entry. Usually features a ".com" or other domain keys, as well as "/" and "." keys.</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_type_email</span></td>
            <td>A normal keyboard optimized for e-mail entry. Usually features "@" and "." characters.</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_type_numbers</span></td>
            <td>A numbers-only keyboard, usually displayed as a number pad.</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_type_phone</span></td>
            <td>A phone pad keyboard. Usually numbers-only with the "*" and "#" keys.</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_type_phone_name</span></td>
            <td>A keyboard optimized for entering both a phone number and a name. Usually similar to an ASCII keyboard, but with a limited special characters selection.</td>
          </tr>
        </tbody>
      </table>
    </li>
    <li><b>Return type</b>: This constant is used to set what is shown on the return/action key of the virtual keyboard. The available return types are:
      <table>
        <tbody>
          <tr>
            <th>Return Type</th>
            <th>Description</th>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_default</span></td>
            <td>The default return key title for the current system.</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_go</span></td>
            <td>Sets the return key title to "Go".</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_google</span></td>
            <td>Sets the return key title to "Google", or to a generic search icon in some cases.</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_join</span></td>
            <td>Sets the return key title to "Go".</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_next</span></td>
            <td>Sets the return key title to "Next".</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_route</span></td>
            <td>Sets the return key title to "Route".</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_search</span></td>
            <td>Sets the return key title to "Search", or to a generic search icon in some cases.</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_send</span></td>
            <td>Sets the return key title to "Send".</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_yahoo</span></td>
            <td>Sets the return key title to "Yahoo", or to a generic search icon in some cases.</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_done</span></td>
            <td>Sets the return key title to "Done".</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_continue</span></td>
            <td>Sets the return key title to "Continue".</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_emergency</span></td>
            <td>Sets the return key title to "Emergency Call".</td>
          </tr>
        </tbody>
      </table>
    </li>
    <li><b>Autocapitalization type</b>: This constant is used to determine how the words typed via the virtual keyboard should be autocapitalized. The available autocapitalization types are:
      <table>
        <tbody>
          <tr>
            <th>Autocapitalization Type</th>
            <th>Description</th>
          </tr>
          <tr>
            <td><span class="inline">kbv_autocapitalize_none</span></td>
            <td>Autocapitalization is disabled.</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_autocapitalize_words</span></td>
            <td>Words will be auto-capitalized.</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_autocapitalize_sentences</span></td>
            <td>Sentences will be auto-capitalized.</td>
          </tr>
          <tr>
            <td><span class="inline">kbv_autocapitalize_characters</span></td>
            <td>All characters will be capitalized.</td>
          </tr>
        </tbody>
      </table>
    </li>
  </ul>
  <p>The last argument is to enable/disable predictive text, and this would be set to <tt>true</tt> to permit it, and <tt>false</tt> otherwise, but note that just because it is permitted doesn't mean that it will be used as that will depend on the preferences of the user on the device. When in predictive text mode, the virtual keyboard will not generate normal GameMaker Studio 2 key-press events. Instead, it will only update the <i>last</i> character pressed and keyboard string variables. This is due to the inability to detect whether a change in the internal text field used for detecting key presses came from an actual virtual keyboard key, or a text suggestion. In these cases you would want to read the <tt>keyboard_string</tt> input as opposed to reading any kind of raw key input.</p>
  <p>It is important to note too that the user will get different keyboards with different capabilities depending on the platform OS, with the following caveats for use per target:</p>
  <ul class="colour">
    <li><b>UWP</b>: The UWP implementation does not support <tt>return_key_type</tt>, <tt>autocapitalization_type</tt> or <tt>predictive_text_enabled</tt>. Passing in these parameters into a function will not cause any errors, they just won't have any effect on the keyboard.</li>
    <li><b>Android / Amazon Fire</b>: On Android, the keyboard type <tt>kbv_type_phone_name</tt> is not supported and will display an ASCII keyboard instead, and the return key type can only be <tt>kbv_returnkey_go</tt>, <tt>kbv_returnkey_search</tt>, <tt>kbv_returnkey_next</tt>, <tt>kbv_returnkey_send</tt> or <tt>kbv_returnkey_done</tt>. If other return key types are used on that platform, the system will default to the replacement return keys listed below:
      <table>
        <tbody>
          <tr>
            <th>Unavailable return key</th>
            <th>Replacement key</th>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_google</span><br /> <span class="inline">kbv_returnkey_yahoo</span></td>
            <td><span class="inline">kbv_returnkey_search</span></td>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_join</span><br /> <span class="inline">kbv_returnkey_route</span><br /> <span class="inline">kbv_returnkey_emergency</span></td>
            <td><span class="inline">kbv_returnkey_go</span></td>
          </tr>
          <tr>
            <td><span class="inline">kbv_returnkey_continue</span></td>
            <td><span class="inline">kbv_returnkey_next</span></td>
          </tr>
        </tbody>
      </table>
    </li>
    <br />
    <li><b>AndroidTV / FireTV</b>: Custom return key types are <i>not</i> supported on ASCII keyboards - the default return key will always be displayed.</li>
    <li><b>tvOS</b>: Predictive text and auto-capitalization are not supported on tvOS, and the height of the keyboard returned by system events and the function <a href="../../../GameMaker_Language/GML_Reference/Game_Input/Virtual_Keys_And_Keyboards/keyboard_virtual_height.htm"><tt>keyboard_virtual_height()</tt></a> will default to the screen height due to it spanning the entire screen and due to keyboard rect dimension functions being disabled on tvOS. Also note that physical (Bluetooth) keyboard events will not be broadcast unless the virtual keyboard has been opened.</li>
  </ul>
  <p>Calling this function will generate a <a href="../../../The_Asset_Editors/Object_Properties/Async_Events.htm">System Asynchronous Event</a>, in which the <tt><a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm">async_load</a> </tt> <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS map</a> will be populated with the following key/value pairs:</p>
  <ul class="colour">
    <li>"<b>event_type</b>" - this will be "<b>virtual keyboard status</b>" when triggered by virtual keyboard actions.</li>
    <li>"<b>screen_height</b>" - the height of the virtual keyboard (in pixels). This will be 0 if the keyboard is invisible.</li>
    <li>"<b>keyboard_status</b>" - the current status of the keyboard, returned as one of the following strings:
      <ul class="colour">
        <li>"hiding"</li>
        <li>"hidden"</li>
        <li>"showing"</li>
        <li>"visible"</li>
      </ul>
    </li>
  </ul>
  <p> </p>
  <h4>Action Syntax:</h4>
  <p><img alt="Show Virtual Keyboard Action" class="center" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Mouse_And_Keyboard/a_VirtualKeyboard_Show.png" style="width: 100%; max-width: 350px;" /></p>
  <h4>Arguments:</h4>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>keyboard_type</td>
        <td>Determines the key-set available on the virtual keyboard.</td>
      </tr>
      <tr>
        <td>return_key_type</td>
        <td>Determines what is shown on the return/action key of the virtual keyboard.</td>
      </tr>
      <tr>
        <td>autocapitalization_type</td>
        <td>Determines how/if the words typed via the virtual keyboard will be autocapitalized.</td>
      </tr>
      <tr>
        <td>predictive_text_enabled</td>
        <td>Set to <tt>true</tt>/<tt>false</tt> to enable/disable predictive text input.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Example:</h4>
  <p><img alt="Show Virtual Keyboard Example" class="center" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Mouse_And_Keyboard/a_VirtualKeyboard_Show.png" style="width: 100%; max-width: 350px;" />The above action block code checks for a mouse down action, and if one is detected, then a check is performed to see if the OS virtual keyboard is showing. If it isn't then it is set to show - using a numeric keypad type - and if is already showing then it is hidden.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Mouse_And_Keyboard_Actions.htm">Mouse And Keyboard Actions</a></div>
        <div style="float:right">Next: <a href="Hide_Virtual_Keyboard.htm">Hide Virtual Keyboard</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
Action - Show Virtual Keyboard
-->
  <!-- TAGS
action_show_virtual_keyboard
-->

</body></html>