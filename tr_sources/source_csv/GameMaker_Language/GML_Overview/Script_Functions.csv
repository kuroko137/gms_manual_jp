"Script_Functions.htm+html.head.title:55-3","Script Functions And Variables","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.head.title:59-3","Script Functions And Variables","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.div.div.div[title]:73-7","Script Functions And Variables","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.div.div.div:73-7","Script Functions And Variables","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
#CSV_COMMENT_OUT#"Script_Functions.htm+html.body.div.div.div[title]:76-7","Click here to see this page in full context",""
#CSV_COMMENT_OUT#"Script_Functions.htm+html.body.div.div.div:76-7","Click here to see this page in full context",""
"Script_Functions.htm+html.body.h1:86-3","Script Functions And Variables","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:87-3","Script assets are essentially a collection of one or more user defined functions or variables that you write yourself as short snippets of code in the <a href=""../../The_Asset_Editors/Scripts.htm"">Script Editor</a>. The functions you define in a script can resolve expressions, return values or do anything else that the GameMaker Language permits, just like the built in <a href=""Runtime_Functions.htm"">runtime functions</a>.","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:89-3","Script functions should generally be used if you have a block of code that you use in more than one place or object, or when you want a block of code to be used across multiple objects in a modular fashion. Using scripts to define functions means that you can change the function just once when required and the change will be ""picked up"" by every object that has a call to the function.","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:91-3","Scripts can also be very handy from an organizational point of view, as they permit you to create groups of functions that all work within the same namespace - for example, you might have several functions all related to collisions between instances in your game, so you would create a ""<span class=""inline"">Collision_Functions</span>"" script and store all these functions together in it.","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:93-3","When creating a script with functions in it, the functions must be created using the following formats:","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:94-3","{ANY_CODE} <span>function &lt;name&gt;( &lt;parameter1&gt;, &lt;parameter2&gt;, etc... )</span><br /> <span>{nbsp_x4}{</span><br /> <span>{nbsp_x4}&lt;statement1&gt;;</span><br /> <span>{nbsp_x4}&lt;statement1&gt;;</span><br /> <span>{nbsp_x4}...</span><br /> <span>{nbsp_x4}}</span>","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:100-3","or:","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:101-3","{ANY_CODE} <span><span>&lt;name&gt; ={nbsp_x1}</span>function( &lt;parameter1&gt;, &lt;parameter2&gt;, etc... )</span><br /> <span>{nbsp_x4}{</span><br /> <span>{nbsp_x4}&lt;statement1&gt;;</span><br /> <span>{nbsp_x4}&lt;statement1&gt;;</span><br /> <span>{nbsp_x4}...</span><br /> <span>{nbsp_x4}}</span>","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:107-3","In general, however, you would use the <em>first </em>form for script functions as it will define the function as specifically being a script function, meaning that it will be <strong>global </strong>in <a href=""Variables_And_Variable_Scope.htm"">scope</a>, be assigned a <strong>script index</strong>, and not require the <span class=""inline"">global</span> prefix to identify it since the compiler will recognise it as a script function. Using the second form will instead be generating a global scope <a href=""Method_Variables.htm"">method variable</a>, and as such it will <em>not </em>be recognised as a script function by the IDE and will require the use of the <span class=""inline"">global</span> prefix when being referenced in your code.","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:110-3","<strong>NOTE</strong>: You can check this by using both forms in a script and then calling the runtime function <a href=""../GML_Reference/Variable_Functions/typeof.htm"">typeof()</a> on each of them. One will be classed as a ""number"" - since it returns a script index ID - and the other will be classed as a ""method"".","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:112-3","We also recommend that you add comments to define the properties of the function (see the section on <a href=""../../The_Asset_Editors/Code_Editor_Properties/JSDoc_Script_Comments.htm"">JSDoc Comments</a> for more details), such that a simple script would look like this:","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:114-3","{ANY_CODE} /// @function{nbsp_x9} {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1}log(message);<br /> /// @param {string}{nbsp_x1} message{nbsp_x2}The message to show<br /> /// @description{nbsp_x6} {nbsp_x1} {nbsp_x1} {nbsp_x1} {nbsp_x1}Show a message whenever the function is called.<br /> <br /> function log(message)<br /> {nbsp_x4}{ <br /> {nbsp_x4}show_debug_message(message); <br /> {nbsp_x4}}","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:119-3","Additional functions for the script can be added using the same format as shown above, one after the other within the script asset.","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p.img[alt]:120-6","{IMG_TXT} Multiple Functions In One Script","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:120-3","Functions in scripts can also return a value, just as runtime functions can, and as such they can be used in expressions. For this you would use the <a href=""Language_Features/return.htm""><tt>return</tt></a> statement:","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:122-3","{ANY_CODE} return &lt;expression&gt;","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:123-3","It should be noted that the <strong><i>execution of the function ends at the return statement</i></strong>, meaning that any code which comes after the return has been called <i>will not be run</i>. Here is a short example function from a script called ""<span class=""inline"">sqr_calc</span>"" which calculates the square of whatever value is passed to it, and it includes error catching in case the parameter that it is passed is not a real number:","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:125-3","{ANY_CODE} /// @function{nbsp_x11}sqr_calc(val);<br /> /// @param {real}{nbsp_x2}val {nbsp_x1}The value to calculate the square of<br /> /// @description{nbsp_x8}Calculate the square of the given value<br /> <br /> function sqr_calc(value)<br /> {nbsp_x4}{ <br /> {nbsp_x4}if !is_real(value)<br /> {nbsp_x8}{ <br /> {nbsp_x8}return 0;<br /> {nbsp_x8}} <br /> {nbsp_x4}else <br /> {nbsp_x8}{ <br /> {nbsp_x8}return (value * value);<br /> {nbsp_x8}} <br /> {nbsp_x4}}","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:134-3","Note that if you create a script function with <em>no</em> return value then in your code check for one, you will get the value <span class=""inline"">undefined</span> by default.","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:135-3","To call a script function from within a piece of code, just use it the same way as when calling any runtime function - that is, write the function name with the parameter values in parentheses. So, the above script would be called like this:","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:136-3","{ANY_CODE} if keyboard_check_pressed(vk_enter)<br /> {nbsp_x4}{ <br /> {nbsp_x4}val = scr_sqr(amount);<br /> {nbsp_x4}}","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:139-3","<strong>NOTE</strong>: When using your own functions from scripts in the code editor, you can press<span> <img alt=""{IMG_TXT} F1 Icon"" class=""icon"" src=""../../assets/Images/Icons/Icon_f1.png"" style=""width: 100%; max-width: 55px;"" /></span> or click the middle mouse button <span><img alt=""{IMG_TXT} MMB Icon"" class=""icon"" src=""../../assets/Images/Icons/Icon_MMB.png"" style=""width: 100%; max-width: 21px;"" /> </span>on the function name to open the script that contains it for editing directly.","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:141-3","It is important to understand that script <i>names</i> are <b>independent of the functions that they contain</b>, so you can name your scripts in a more ""common sense"" way, ie: all your AI functions could go in a script ""<span class=""inline"">Enemy_AI</span>"" (following the standard asset naming conventions of alpha-numeric characters and the under-bar ""_"" only). However, you can still call scripts in your game - and you can name scripts the same as a function that you define in them - which can give rise to a issues due to the way that GameMaker Studio 2 stores asset references. To give an example consider this code, called from an instance:","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:144-3","{ANY_CODE} function indirectCall(func, arg)<br /> {nbsp_x4}{ <br /> {nbsp_x4}func(arg); <br /> {nbsp_x4}} <br /> indirectCall(myscript, arg);","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:148-3","The above code is attempting to call a script called ""myscript"" within a method, which in this case will fail. This is because the in-line function is actually using the <em>index</em> for the script asset and <strong>not </strong>actually calling the script - eg: if the script index resolves to ""4"", essentially the function is calling <tt>4(arg);</tt>, which makes no sense. The code should instead be structured in one of the following two ways:","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:150-3","{ANY_CODE} function indirectCall(func, arg)<br /> {nbsp_x4}{ <br /> {nbsp_x4}func(arg); <br /> {nbsp_x4}} <br /> indirectCall(method(undefined, myscript), arg);<br /> <br /> // OR<br /> <br /> function indirectCall(func, arg)<br /> {nbsp_x4}{ <br /> {nbsp_x4}script_execute( func, arg);<br /> {nbsp_x4}} <br /> indirectCall(myscript, arg);","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:158-3","This is important to note, especially when working with legacy projects where scripts contain one single function, and the function is named the same as the script. However, you really should <em>never</em> do this, and your scripts should be named independently of the functions they contain.","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:160-3","This leads us to the final and most important thing to know about scripts and the functions they contain: scripts are parsed on a <b>global</b> level and will be <strong>compiled at the very start of the game</strong>. This means that <em>technically</em> all functions in a script are ""unbound"" <a href=""Method_Variables.htm"">method variables</a>, and any variables declared outside of a function in the script will be considered <a href=""Variables/Global_Variables.htm"">global variables</a>. For example, consider this script:","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:162-3","{ANY_CODE} function Foo()<br /> {nbsp_x4}{ <br /> {nbsp_x4}// Do something<br /> {nbsp_x4}} <br /> blah = 10;<br /> function Bar()<br /> {nbsp_x4}{ <br /> {nbsp_x4}// Do something else<br /> {nbsp_x4}}","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:167-3","In the above case, not only have we defined the functions <tt>Foo</tt> and <tt>Bar</tt> but also the variable <tt>blah</tt> and all of them are considered to have been created in the <b>global</b> scope. The functions don't need the <tt>global</tt> keyword to be recognized as the compiler understands that these functions are part of the script, but if you wanted to access <tt>blah</tt> then you would need to do:","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:168-3","{ANY_CODE} val = global.blah;","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:169-3","That said, we recommend that you <b>always explicitly type global variables</b> when creating them in scripts to prevent any issues later. Scripts are also an ideal place to define any <strong>Macros</strong> or <strong>Enums</strong> (<a href=""Variables/Constants.htm"">constants</a>), as adding them to a script outside of a function also means that they will be created for use before the game code actually starts running. Below is an example of a script that is creating different global scope values for a game:","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:171-3","{ANY_CODE} /// Initialise All Global Scope Values And Constants<br /> global.player_score = 0;<br /> global.player_hp = 100;<br /> global.pause = false;<br /> global.music = true;<br /> global.sound = true;<br /> <br /> enum rainbowcolors {<br /> {nbsp_x1} {nbsp_x1} red,<br /> {nbsp_x1} {nbsp_x1} orange,<br /> {nbsp_x1} {nbsp_x1} yellow,<br /> {nbsp_x1} {nbsp_x1} green,<br /> {nbsp_x1} {nbsp_x1} blue,<br /> {nbsp_x1} {nbsp_x1} indigo,<br /> {nbsp_x1} {nbsp_x1} violet<br /> {nbsp_x1} {nbsp_x1} }<br /> <br /> #macro weapon_num{nbsp_x1}3<br /> #macro weapon_gun{nbsp_x1}0<br /> #macro weapon_bomb{nbsp_x1}1<br /> #macro weapon_knife 2","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:174-3","Note how all these constants are set up outside of any function call, meaning they will be initialised before everything else and at a <em>global </em>scope. This means that if you want to use a script to initialise variables on an <em>instance </em>scope then you must wrap them in a function, for example:","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:176-3","{ANY_CODE} /// @function{nbsp_x16}init_enemy();<br /> /// @description{nbsp_x13}Initialise enemy instance vars<br /> <br /> function init_enemy()<br /> {nbsp_x4}{ <br /> {nbsp_x4}hp = 100;<br /> {nbsp_x4}dmg = 5;<br /> {nbsp_x4}mana = 50;<br /> {nbsp_x4}}","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:180-3","So, scripts can be used to generate macros, enums and global variables before the game starts so they are ready for use at any time, and they can also be used to create ""unbound"" methods (user-defined functions) that can be used in your game like GML runtime functions.","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:182-3","One final thing to note about script functions is that if you are developing for <strong>Web </strong>(ie: targeting <strong>HTML5</strong>), then there is an additional function protocol that you can use when adding functions to scripts, which is to prefix a function name with <tt>gmcallback_</tt>, for example:","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:184-3","{ANY_CODE} gmcallback_create_button","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:185-3","Using the above function name would mean that the function <tt>gmcallback_create_button()</tt> will not be obfuscated and so can be used in JavaScript extensions and other areas of your game, for example, when using the <a href=""../GML_Reference/Web_And_HTML5/Web_And_HTML5.htm""><tt>clickable_*</tt></a> functions.","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.div.div.div.div:192-9","Back: <a href=""GML_Overview.htm"">GML Overview</a>","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.div.div.div.div:193-9","Next: <a href=""Method_Variables.htm"">Method Variables</a>","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
#CSV_COMMENT_OUT#"Script_Functions.htm+html.body.div.h5:196-5","© Copyright YoYo Games Ltd. 2020 All Rights Reserved",""
"Script_Functions.htm+html.body.p:208-1","{SEARCH_RESULT} Page outlining the use of scripts to create functions and global variables and macros","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
"Script_Functions.htm+html.body.p:208-109","{INDEX_KEYWORD} Script Functions And Variables","","URL_EN : https://manual.yoyogames.com/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm \n\nURL_JP : https://kuroko137.github.io/gms_manual_jp/index.htm#t=GameMaker_Language%2FGML_Overview%2FScript_Functions.htm"
