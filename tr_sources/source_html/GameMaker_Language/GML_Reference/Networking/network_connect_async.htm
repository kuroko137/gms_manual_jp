<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "10.2.13.0_6";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"/>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <title>network_connect_async</title>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>network_connect_async</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for network_connect_async"/>
  <meta name="rh-index-keywords" content="network_connect_async"/>
  <meta name="search-keywords" content="network_connect_async"/>
</head>

<body>
  <div class="topic-header rh-topicheader-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="network_connect_async">
        <span>network_connect_async</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>Click here to see this page in full context</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>network_connect_async</h1>
  <p>With this function you can send a request to connect to a server. The function takes the <i>socket id</i> to connect through (see <a href="network_create_socket.htm"><tt>network_create_socket()</tt></a>) and requires you to give the IP address to connect
    to (a string) as well as the port to connect through, and if the connection fails a value of less than 0 will be returned. The connection uses a special protocol that ensures only GameMaker Studio 2 games connect to each other, however if you need
    to connect to a server that is not a GameMaker Studio 2 game, you can use <a href="network_connect_raw_async.htm"><tt>network_connect_async_raw()</tt></a>. Note that this function is asynchronous, generating an <a href="../../../The_Asset_Editors/Object_Properties/Async_Events/Networking.htm">Asynchronous Networking</a>    event of the type <span class="inline">network_type_non_blocking_connect</span>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">network_connect_async(socket, url, port);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>socket</td>
        <td>The id of the socket to use.</td>
      </tr>
      <tr>
        <td>url</td>
        <td>The URL or IP to connect to (a string).</td>
      </tr>
      <tr>
        <td>port</td>
        <td>The port to connect to.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">{ANY_CODE} client = network_create_socket(network_socket_tcp);<br/> network_connect_async(client, &quot;192.134.0.1&quot;, 6510);</p>
  <p>The above code will create a new TCP socket then attempt make an asynchronous connection through that to the given IP address on port 6510.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Networking.htm">Networking</a></div>
        <div style="float:right">Next: <a href="network_connect_raw.htm">network_connect_raw</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
network_connect_async
-->
  <!-- TAGS
network_connect_async
-->

<p>{SEARCH_RESULT} Reference page for network_connect_async</p></body></html>